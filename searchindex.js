Search.setIndex({"alltitles": {"Activities and sensitivities": [[1, "Activities-and-sensitivities"]], "Attributes of BooleanFunction": [[0, "Attributes-of-BooleanFunction"]], "Basic properties of Boolean functions": [[0, "Basic-properties-of-Boolean-functions"]], "Bio Models": [[3, null]], "BoolForge Tutorial #1: Working with Boolean Functions": [[0, null]], "BoolForge Tutorial #2: Advanced concepts related to Boolean Functions": [[1, null]], "BoolForge Tutorial #3: Canalization": [[2, null]], "Boolean Function": [[4, null]], "Boolean Network": [[5, null]], "Canalization as a measure of input redundancy": [[2, "Canalization-as-a-measure-of-input-redundancy"]], "Canalizing variables and layers": [[2, "Canalizing-variables-and-layers"]], "Collective canalization": [[2, "Collective-canalization"]], "Compatability": [[9, "compatability"]], "Convert to logical and polynomial expression": [[0, "Convert-to-logical-and-polynomial-expression"]], "Create a Boolean function": [[0, "Create-a-Boolean-function"]], "Create a Boolean function from text": [[0, "Create-a-Boolean-function-from-text"]], "Create a Boolean function from truth table": [[0, "Create-a-Boolean-function-from-truth-table"]], "Documentation": [[6, null]], "Exploring symmetry groups of Boolean functions": [[1, "Exploring-symmetry-groups-of-Boolean-functions"]], "Extended Functionality": [[9, "extended-functionality"]], "Generate": [[7, null]], "Home": [[8, null]], "Installation": [[9, null]], "Mac OS / Linux": [[9, "mac-os-linux"]], "Python": [[9, "python"]], "Tutorials": [[10, null]], "Utils": [[11, null]], "Windows": [[9, "windows"]]}, "docnames": ["_collections/tutorials/01_working_with_boolean_functions", "_collections/tutorials/02_advanced_concepts_boolean_functions", "_collections/tutorials/03_canalization", "bio_models", "boolean_function", "boolean_network", "docs", "generate", "index", "install", "tutorial", "utils"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["_collections\\tutorials\\01_working_with_boolean_functions.ipynb", "_collections\\tutorials\\02_advanced_concepts_boolean_functions.ipynb", "_collections\\tutorials\\03_canalization.ipynb", "bio_models.rst", "boolean_function.rst", "boolean_network.rst", "docs.rst", "generate.rst", "index.rst", "install.rst", "tutorial.rst", "utils.rst"], "indexentries": {"bin2dec() (in module boolforge.utils)": [[11, "boolforge.utils.bin2dec", false]], "bool_to_poly() (in module boolforge.utils)": [[11, "boolforge.utils.bool_to_poly", false]], "booleanfunction (class in boolforge.boolean_function)": [[4, "boolforge.boolean_function.BooleanFunction", false]], "booleannetwork (class in boolforge.boolean_network)": [[5, "boolforge.boolean_network.BooleanNetwork", false]], "boolforge.bio_models": [[3, "module-boolforge.bio_models", false]], "boolforge.boolean_function": [[4, "module-boolforge.boolean_function", false]], "boolforge.boolean_network": [[5, "module-boolforge.boolean_network", false]], "boolforge.generate": [[7, "module-boolforge.generate", false]], "boolforge.utils": [[11, "module-boolforge.utils", false]], "check_if_empty() (in module boolforge.utils)": [[11, "boolforge.utils.check_if_empty", false]], "compute_synchronous_state_transition_graph() (boolforge.boolean_network.booleannetwork method)": [[5, "boolforge.boolean_network.BooleanNetwork.compute_synchronous_state_transition_graph", false]], "dec2bin() (in module boolforge.utils)": [[11, "boolforge.utils.dec2bin", false]], "display_truth_table() (in module boolforge.boolean_function)": [[4, "boolforge.boolean_function.display_truth_table", false]], "f_from_expression() (in module boolforge.utils)": [[11, "boolforge.utils.f_from_expression", false]], "fetch_file() (in module boolforge.bio_models)": [[3, "boolforge.bio_models.fetch_file", false]], "fetch_file_bytes() (in module boolforge.bio_models)": [[3, "boolforge.bio_models.fetch_file_bytes", false]], "find_all_indices() (in module boolforge.utils)": [[11, "boolforge.utils.find_all_indices", false]], "flatten() (in module boolforge.utils)": [[11, "boolforge.utils.flatten", false]], "from_cana() (boolforge.boolean_function.booleanfunction class method)": [[4, "boolforge.boolean_function.BooleanFunction.from_cana", false]], "from_cana() (boolforge.boolean_network.booleannetwork class method)": [[5, "boolforge.boolean_network.BooleanNetwork.from_cana", false]], "from_string() (boolforge.boolean_network.booleannetwork class method)": [[5, "boolforge.boolean_network.BooleanNetwork.from_string", false]], "generate_networkx_graph() (boolforge.boolean_network.wiringdiagram method)": [[5, "boolforge.boolean_network.WiringDiagram.generate_networkx_graph", false]], "generate_networkx_graph_from_edges() (boolforge.boolean_network.wiringdiagram method)": [[5, "boolforge.boolean_network.WiringDiagram.generate_networkx_graph_from_edges", false]], "get_absolute_bias() (boolforge.boolean_function.booleanfunction method)": [[4, "boolforge.boolean_function.BooleanFunction.get_absolute_bias", false]], "get_activities() (boolforge.boolean_function.booleanfunction method)": [[4, "boolforge.boolean_function.BooleanFunction.get_activities", false]], "get_attractors_and_robustness_measures_synchronous() (boolforge.boolean_network.booleannetwork method)": [[5, "boolforge.boolean_network.BooleanNetwork.get_attractors_and_robustness_measures_synchronous", false]], "get_attractors_and_robustness_measures_synchronous_exact() (boolforge.boolean_network.booleannetwork method)": [[5, "boolforge.boolean_network.BooleanNetwork.get_attractors_and_robustness_measures_synchronous_exact", false]], "get_attractors_synchronous() (boolforge.boolean_network.booleannetwork method)": [[5, "boolforge.boolean_network.BooleanNetwork.get_attractors_synchronous", false]], "get_attractors_synchronous_exact() (boolforge.boolean_network.booleannetwork method)": [[5, "boolforge.boolean_network.BooleanNetwork.get_attractors_synchronous_exact", false]], "get_average_sensitivity() (boolforge.boolean_function.booleanfunction method)": [[4, "boolforge.boolean_function.BooleanFunction.get_average_sensitivity", false]], "get_bio_models_from_repository() (in module boolforge.bio_models)": [[3, "boolforge.bio_models.get_bio_models_from_repository", false]], "get_canalizing_depth() (boolforge.boolean_function.booleanfunction method)": [[4, "boolforge.boolean_function.BooleanFunction.get_canalizing_depth", false]], "get_canalizing_strength() (boolforge.boolean_function.booleanfunction method)": [[4, "boolforge.boolean_function.BooleanFunction.get_canalizing_strength", false]], "get_constants() (boolforge.boolean_network.wiringdiagram method)": [[5, "boolforge.boolean_network.WiringDiagram.get_constants", false]], "get_content_in_remote_folder() (in module boolforge.bio_models)": [[3, "boolforge.bio_models.get_content_in_remote_folder", false]], "get_derrida_value() (boolforge.boolean_network.booleannetwork method)": [[5, "boolforge.boolean_network.BooleanNetwork.get_derrida_value", false]], "get_edge_effectiveness() (boolforge.boolean_function.booleanfunction method)": [[4, "boolforge.boolean_function.BooleanFunction.get_edge_effectiveness", false]], "get_effective_degree() (boolforge.boolean_function.booleanfunction method)": [[4, "boolforge.boolean_function.BooleanFunction.get_effective_degree", false]], "get_entropy_of_basin_size_distribution() (in module boolforge.boolean_network)": [[5, "boolforge.boolean_network.get_entropy_of_basin_size_distribution", false]], "get_essential_variables() (boolforge.boolean_function.booleanfunction method)": [[4, "boolforge.boolean_function.BooleanFunction.get_essential_variables", false]], "get_ffls() (boolforge.boolean_network.wiringdiagram method)": [[5, "boolforge.boolean_network.WiringDiagram.get_ffls", false]], "get_hamming_weight() (boolforge.boolean_function.booleanfunction method)": [[4, "boolforge.boolean_function.BooleanFunction.get_hamming_weight", false]], "get_input_redundancy() (boolforge.boolean_function.booleanfunction method)": [[4, "boolforge.boolean_function.BooleanFunction.get_input_redundancy", false]], "get_kset_canalizing_proportion() (boolforge.boolean_function.booleanfunction method)": [[4, "boolforge.boolean_function.BooleanFunction.get_kset_canalizing_proportion", false]], "get_layer_structure() (boolforge.boolean_function.booleanfunction method)": [[4, "boolforge.boolean_function.BooleanFunction.get_layer_structure", false]], "get_layer_structure_from_canalized_outputs() (in module boolforge.boolean_function)": [[4, "boolforge.boolean_function.get_layer_structure_from_canalized_outputs", false]], "get_layer_structure_of_an_ncf_given_its_hamming_weight() (in module boolforge.utils)": [[11, "boolforge.utils.get_layer_structure_of_an_NCF_given_its_Hamming_weight", false]], "get_modular_structure() (boolforge.boolean_network.wiringdiagram method)": [[5, "boolforge.boolean_network.WiringDiagram.get_modular_structure", false]], "get_network_with_edge_controls() (boolforge.boolean_network.booleannetwork method)": [[5, "boolforge.boolean_network.BooleanNetwork.get_network_with_edge_controls", false]], "get_network_with_fixed_source_nodes() (boolforge.boolean_network.booleannetwork method)": [[5, "boolforge.boolean_network.BooleanNetwork.get_network_with_fixed_source_nodes", false]], "get_network_with_node_controls() (boolforge.boolean_network.booleannetwork method)": [[5, "boolforge.boolean_network.BooleanNetwork.get_network_with_node_controls", false]], "get_number_of_essential_variables() (boolforge.boolean_function.booleanfunction method)": [[4, "boolforge.boolean_function.BooleanFunction.get_number_of_essential_variables", false]], "get_outdegrees() (boolforge.boolean_network.wiringdiagram method)": [[5, "boolforge.boolean_network.WiringDiagram.get_outdegrees", false]], "get_source_nodes() (boolforge.boolean_network.booleannetwork method)": [[5, "boolforge.boolean_network.BooleanNetwork.get_source_nodes", false]], "get_steady_states_asynchronous() (boolforge.boolean_network.booleannetwork method)": [[5, "boolforge.boolean_network.BooleanNetwork.get_steady_states_asynchronous", false]], "get_steady_states_asynchronous_given_one_initial_condition() (boolforge.boolean_network.booleannetwork method)": [[5, "boolforge.boolean_network.BooleanNetwork.get_steady_states_asynchronous_given_one_initial_condition", false]], "get_strongly_connected_components() (boolforge.boolean_network.wiringdiagram method)": [[5, "boolforge.boolean_network.WiringDiagram.get_strongly_connected_components", false]], "get_symmetry_groups() (boolforge.boolean_function.booleanfunction method)": [[4, "boolforge.boolean_function.BooleanFunction.get_symmetry_groups", false]], "get_type_of_inputs() (boolforge.boolean_function.booleanfunction method)": [[4, "boolforge.boolean_function.BooleanFunction.get_type_of_inputs", false]], "get_type_of_loop() (boolforge.boolean_network.wiringdiagram method)": [[5, "boolforge.boolean_network.WiringDiagram.get_type_of_loop", false]], "get_types_of_regulation() (boolforge.boolean_network.booleannetwork method)": [[5, "boolforge.boolean_network.BooleanNetwork.get_types_of_regulation", false]], "is_canalizing() (boolforge.boolean_function.booleanfunction method)": [[4, "boolforge.boolean_function.BooleanFunction.is_canalizing", false]], "is_constant() (boolforge.boolean_function.booleanfunction method)": [[4, "boolforge.boolean_function.BooleanFunction.is_constant", false]], "is_degenerated() (boolforge.boolean_function.booleanfunction method)": [[4, "boolforge.boolean_function.BooleanFunction.is_degenerated", false]], "is_k_canalizing() (boolforge.boolean_function.booleanfunction method)": [[4, "boolforge.boolean_function.BooleanFunction.is_k_canalizing", false]], "is_kset_canalizing() (boolforge.boolean_function.booleanfunction method)": [[4, "boolforge.boolean_function.BooleanFunction.is_kset_canalizing", false]], "is_list_or_array_of_floats() (in module boolforge.utils)": [[11, "boolforge.utils.is_list_or_array_of_floats", false]], "is_list_or_array_of_ints() (in module boolforge.utils)": [[11, "boolforge.utils.is_list_or_array_of_ints", false]], "is_monotonic() (boolforge.boolean_function.booleanfunction method)": [[4, "boolforge.boolean_function.BooleanFunction.is_monotonic", false]], "load_model() (in module boolforge.bio_models)": [[3, "boolforge.bio_models.load_model", false]], "module": [[3, "module-boolforge.bio_models", false], [4, "module-boolforge.boolean_function", false], [5, "module-boolforge.boolean_network", false], [7, "module-boolforge.generate", false], [11, "module-boolforge.utils", false]], "random_degenerated_function() (in module boolforge.generate)": [[7, "boolforge.generate.random_degenerated_function", false]], "random_degrees() (in module boolforge.generate)": [[7, "boolforge.generate.random_degrees", false]], "random_edge_list() (in module boolforge.generate)": [[7, "boolforge.generate.random_edge_list", false]], "random_function() (in module boolforge.generate)": [[7, "boolforge.generate.random_function", false]], "random_function_with_bias() (in module boolforge.generate)": [[7, "boolforge.generate.random_function_with_bias", false]], "random_function_with_exact_hamming_weight() (in module boolforge.generate)": [[7, "boolforge.generate.random_function_with_exact_hamming_weight", false]], "random_k_canalizing_function() (in module boolforge.generate)": [[7, "boolforge.generate.random_k_canalizing_function", false]], "random_k_canalizing_function_with_specific_layer_structure() (in module boolforge.generate)": [[7, "boolforge.generate.random_k_canalizing_function_with_specific_layer_structure", false]], "random_linear_function() (in module boolforge.generate)": [[7, "boolforge.generate.random_linear_function", false]], "random_ncf() (in module boolforge.generate)": [[7, "boolforge.generate.random_NCF", false]], "random_nested_canalizing_function() (in module boolforge.generate)": [[7, "boolforge.generate.random_nested_canalizing_function", false]], "random_network() (in module boolforge.generate)": [[7, "boolforge.generate.random_network", false]], "random_non_canalizing_function() (in module boolforge.generate)": [[7, "boolforge.generate.random_non_canalizing_function", false]], "random_non_canalizing_non_degenerated_function() (in module boolforge.generate)": [[7, "boolforge.generate.random_non_canalizing_non_degenerated_function", false]], "random_non_degenerated_function() (in module boolforge.generate)": [[7, "boolforge.generate.random_non_degenerated_function", false]], "random_null_model() (in module boolforge.generate)": [[7, "boolforge.generate.random_null_model", false]], "random_wiring_diagram() (in module boolforge.generate)": [[7, "boolforge.generate.random_wiring_diagram", false]], "remove_constants() (boolforge.boolean_network.booleannetwork method)": [[5, "boolforge.boolean_network.BooleanNetwork.remove_constants", false]], "rewire_wiring_diagram() (in module boolforge.generate)": [[7, "boolforge.generate.rewire_wiring_diagram", false]], "simplify_functions() (boolforge.boolean_network.booleannetwork method)": [[5, "boolforge.boolean_network.BooleanNetwork.simplify_functions", false]], "to_bnet() (boolforge.boolean_network.booleannetwork method)": [[5, "boolforge.boolean_network.BooleanNetwork.to_bnet", false]], "to_cana() (boolforge.boolean_function.booleanfunction method)": [[4, "boolforge.boolean_function.BooleanFunction.to_cana", false]], "to_cana() (boolforge.boolean_network.booleannetwork method)": [[5, "boolforge.boolean_network.BooleanNetwork.to_cana", false]], "to_logical() (boolforge.boolean_function.booleanfunction method)": [[4, "boolforge.boolean_function.BooleanFunction.to_logical", false]], "to_polynomial() (boolforge.boolean_function.booleanfunction method)": [[4, "boolforge.boolean_function.BooleanFunction.to_polynomial", false]], "update_network_sdds() (boolforge.boolean_network.booleannetwork method)": [[5, "boolforge.boolean_network.BooleanNetwork.update_network_SDDS", false]], "update_network_synchronously() (boolforge.boolean_network.booleannetwork method)": [[5, "boolforge.boolean_network.BooleanNetwork.update_network_synchronously", false]], "update_network_synchronously_many_times() (boolforge.boolean_network.booleannetwork method)": [[5, "boolforge.boolean_network.BooleanNetwork.update_network_synchronously_many_times", false]], "update_single_node() (boolforge.boolean_network.booleannetwork method)": [[5, "boolforge.boolean_network.BooleanNetwork.update_single_node", false]], "wiringdiagram (class in boolforge.boolean_network)": [[5, "boolforge.boolean_network.WiringDiagram", false]]}, "objects": {"boolforge": [[3, 0, 0, "-", "bio_models"], [4, 0, 0, "-", "boolean_function"], [5, 0, 0, "-", "boolean_network"], [7, 0, 0, "-", "generate"], [11, 0, 0, "-", "utils"]], "boolforge.bio_models": [[3, 1, 1, "", "fetch_file"], [3, 1, 1, "", "fetch_file_bytes"], [3, 1, 1, "", "get_bio_models_from_repository"], [3, 1, 1, "", "get_content_in_remote_folder"], [3, 1, 1, "", "load_model"]], "boolforge.boolean_function": [[4, 2, 1, "", "BooleanFunction"], [4, 1, 1, "", "display_truth_table"], [4, 1, 1, "", "get_layer_structure_from_canalized_outputs"]], "boolforge.boolean_function.BooleanFunction": [[4, 3, 1, "", "from_cana"], [4, 3, 1, "", "get_absolute_bias"], [4, 3, 1, "", "get_activities"], [4, 3, 1, "", "get_average_sensitivity"], [4, 3, 1, "", "get_canalizing_depth"], [4, 3, 1, "", "get_canalizing_strength"], [4, 3, 1, "", "get_edge_effectiveness"], [4, 3, 1, "", "get_effective_degree"], [4, 3, 1, "", "get_essential_variables"], [4, 3, 1, "", "get_hamming_weight"], [4, 3, 1, "", "get_input_redundancy"], [4, 3, 1, "", "get_kset_canalizing_proportion"], [4, 3, 1, "", "get_layer_structure"], [4, 3, 1, "", "get_number_of_essential_variables"], [4, 3, 1, "", "get_symmetry_groups"], [4, 3, 1, "", "get_type_of_inputs"], [4, 3, 1, "", "is_canalizing"], [4, 3, 1, "", "is_constant"], [4, 3, 1, "", "is_degenerated"], [4, 3, 1, "", "is_k_canalizing"], [4, 3, 1, "", "is_kset_canalizing"], [4, 3, 1, "", "is_monotonic"], [4, 3, 1, "", "to_cana"], [4, 3, 1, "", "to_logical"], [4, 3, 1, "", "to_polynomial"]], "boolforge.boolean_network": [[5, 2, 1, "", "BooleanNetwork"], [5, 2, 1, "", "WiringDiagram"], [5, 1, 1, "", "get_entropy_of_basin_size_distribution"]], "boolforge.boolean_network.BooleanNetwork": [[5, 3, 1, "", "compute_synchronous_state_transition_graph"], [5, 3, 1, "", "from_cana"], [5, 3, 1, "", "from_string"], [5, 3, 1, "", "get_attractors_and_robustness_measures_synchronous"], [5, 3, 1, "", "get_attractors_and_robustness_measures_synchronous_exact"], [5, 3, 1, "", "get_attractors_synchronous"], [5, 3, 1, "", "get_attractors_synchronous_exact"], [5, 3, 1, "", "get_derrida_value"], [5, 3, 1, "", "get_network_with_edge_controls"], [5, 3, 1, "", "get_network_with_fixed_source_nodes"], [5, 3, 1, "", "get_network_with_node_controls"], [5, 3, 1, "", "get_source_nodes"], [5, 3, 1, "", "get_steady_states_asynchronous"], [5, 3, 1, "", "get_steady_states_asynchronous_given_one_initial_condition"], [5, 3, 1, "", "get_types_of_regulation"], [5, 3, 1, "", "remove_constants"], [5, 3, 1, "", "simplify_functions"], [5, 3, 1, "", "to_bnet"], [5, 3, 1, "", "to_cana"], [5, 3, 1, "", "update_network_SDDS"], [5, 3, 1, "", "update_network_synchronously"], [5, 3, 1, "", "update_network_synchronously_many_times"], [5, 3, 1, "", "update_single_node"]], "boolforge.boolean_network.WiringDiagram": [[5, 3, 1, "", "generate_networkx_graph"], [5, 3, 1, "", "generate_networkx_graph_from_edges"], [5, 3, 1, "", "get_constants"], [5, 3, 1, "", "get_ffls"], [5, 3, 1, "", "get_modular_structure"], [5, 3, 1, "", "get_outdegrees"], [5, 3, 1, "", "get_strongly_connected_components"], [5, 3, 1, "", "get_type_of_loop"]], "boolforge.generate": [[7, 1, 1, "", "random_NCF"], [7, 1, 1, "", "random_degenerated_function"], [7, 1, 1, "", "random_degrees"], [7, 1, 1, "", "random_edge_list"], [7, 1, 1, "", "random_function"], [7, 1, 1, "", "random_function_with_bias"], [7, 1, 1, "", "random_function_with_exact_hamming_weight"], [7, 1, 1, "", "random_k_canalizing_function"], [7, 1, 1, "", "random_k_canalizing_function_with_specific_layer_structure"], [7, 1, 1, "", "random_linear_function"], [7, 1, 1, "", "random_nested_canalizing_function"], [7, 1, 1, "", "random_network"], [7, 1, 1, "", "random_non_canalizing_function"], [7, 1, 1, "", "random_non_canalizing_non_degenerated_function"], [7, 1, 1, "", "random_non_degenerated_function"], [7, 1, 1, "", "random_null_model"], [7, 1, 1, "", "random_wiring_diagram"], [7, 1, 1, "", "rewire_wiring_diagram"]], "boolforge.utils": [[11, 1, 1, "", "bin2dec"], [11, 1, 1, "", "bool_to_poly"], [11, 1, 1, "", "check_if_empty"], [11, 1, 1, "", "dec2bin"], [11, 1, 1, "", "f_from_expression"], [11, 1, 1, "", "find_all_indices"], [11, 1, 1, "", "flatten"], [11, 1, 1, "", "get_layer_structure_of_an_NCF_given_its_Hamming_weight"], [11, 1, 1, "", "is_list_or_array_of_floats"], [11, 1, 1, "", "is_list_or_array_of_ints"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "terms": {"": [1, 2, 4, 5, 7], "0": [0, 1, 2, 4, 5, 7, 11], "001": 7, "004486541652542627": 1, "023009": 5, "03": 4, "06": 2, "08": 5, "09": [7, 11], "1": [1, 2, 4, 5, 7, 8, 10, 11], "10": 7, "1000": [5, 7], "10000": 4, "102475": 4, "1046": 4, "11": [3, 4, 5], "110630": [4, 7], "12": [1, 4, 7], "1214": 2, "1276": 2, "13": [1, 5], "1305": 2, "1309": 2, "145": 4, "146": [4, 7], "15": 7, "16": [2, 11], "16556667": 2, "16646667": 2, "16666666666666666": 2, "18": 1, "19": 1, "1986": 5, "2": [0, 2, 4, 5, 7, 8, 10, 11], "2007": 2, "2013": 4, "2016": [2, 4, 7], "2017": [7, 11], "2018": 4, "2021": 2, "2022": [4, 7], "2023": [2, 4, 5], "2024": 7, "2025": [3, 4, 5, 7, 11], "21": 0, "22": 3, "23": 1, "24": [3, 5], "2441": 2, "2445": 2, "25": [1, 2, 7, 11], "2502": 2, "2511": 2, "29": [7, 11], "294": 2, "296": 2, "3": [0, 1, 4, 7, 8, 9, 10], "314": [4, 7], "32": 2, "33": 2, "353": [7, 11], "375": 2, "39": [0, 1, 2, 7, 11], "4": [0, 2, 7], "40": [2, 7, 11], "41": 2, "41666666666666663": 2, "4166666666666667": [1, 2], "43": 2, "44": 5, "45": 5, "47": [7, 11], "4791666666666667": 2, "48": 3, "49": 4, "4974": 2, "49751200000000007": 1, "5": [0, 1, 2, 7], "50": [0, 2, 5], "500": [1, 5], "501072": 1, "5036": 2, "51": 0, "52": [0, 2], "5208333333333334": 2, "53": 0, "536": 2, "54": [0, 2], "5555555555555556": 2, "56": 0, "5625": 2, "57": 0, "58": 0, "5833333333333334": 2, "59": 0, "6": 7, "61": [0, 2], "625": 2, "63": 0, "65": 2, "67": 7, "7": 7, "75": [1, 2], "7525": 2, "8": [4, 7, 9], "8125": 2, "875": 2, "9": 4, "967": 2, "999": 7, "A": [0, 1, 2, 4, 5, 7, 11], "AND": [0, 3, 4, 5, 11], "And": 4, "As": [2, 5], "By": [0, 1], "For": [0, 1, 2, 4, 5, 7], "If": [2, 3, 4, 5, 7, 9, 11], "In": [0, 1, 2, 5, 7], "It": [2, 4, 5, 9], "NOT": [0, 3, 4, 5, 11], "No": 7, "Not": 4, "OR": [0, 3, 4, 5], "On": [0, 1], "One": [4, 7], "Or": 4, "Such": 7, "That": [1, 4], "The": [0, 1, 2, 4, 5, 7, 8, 11], "Then": 7, "There": 11, "To": [1, 2, 7, 9], "With": 7, "_": 2, "_coerce_rng": [4, 5, 7], "abl": 9, "about": [2, 4, 5, 9], "abov": [0, 1, 2, 7], "abs_bia": 7, "absolut": [0, 4, 7], "absolute_bia": 7, "acceler": [4, 5], "accord": 7, "activ": [2, 4, 5, 10], "activt": 1, "actual": 7, "acycl": 5, "ad": 5, "addit": [0, 4, 5, 7], "adj": 7, "adjac": 7, "advanc": [2, 4, 8, 10], "affect": 7, "after": [2, 4, 5, 7], "al": 2, "albert": 5, "algorithm": [4, 7], "alia": 7, "all": [1, 2, 4, 5, 7, 11], "all_funct": 2, "allow": [3, 5, 7], "allow_degenerated_funct": [1, 7], "almost": [1, 2], "along": 5, "alreadi": [2, 9], "also": [0, 1, 2, 5], "alwai": [1, 4], "am": 2, "among": [1, 5], "an": [0, 1, 2, 4, 5, 7, 11], "analyz": 8, "ani": [0, 2, 4], "anneal": 5, "anoth": 5, "anywai": 1, "api": 3, "appear": 2, "append": 2, "appli": [2, 4, 5, 7], "applic": [4, 7], "approach": 5, "approxim": 5, "ar": [0, 1, 2, 4, 5, 7, 9], "argument": [4, 5, 7], "ariti": 7, "arr": 11, "arrai": [0, 1, 4, 5, 7, 11], "arxiv": 5, "as_dict": 5, "as_polynomi": 5, "ask": 7, "assembl": 7, "assertionerror": 7, "assign": [3, 5, 7], "assum": 5, "asynchron": 5, "at_least_one_regulator_per_nod": 7, "attempt": [5, 7], "attract": 5, "attractor": 5, "attractorcoher": 5, "attractordict": 5, "attractorfragil": 5, "attribut": 10, "aug": [4, 5], "author": [3, 4, 5, 7, 11], "automata": [4, 5], "automatica": [4, 7], "avail": 0, "averag": [1, 2, 4, 5], "average_swaps_per_edg": 7, "avoid": 7, "awai": 7, "ax": 2, "b": [0, 1, 2, 4, 5, 7, 11], "bake": 5, "balanc": 4, "base": [4, 5], "basic": [2, 10], "basin": 5, "basin_s": 5, "basincoher": 5, "basincoherenceapproxim": 5, "basinfragil": 5, "basinfragilityapproxim": 5, "basins": 5, "bassler": 2, "bavisetti": 5, "becaus": 0, "becom": [0, 5], "befor": [5, 7], "begin": 2, "behavior": 7, "being": 4, "benjamin": [4, 5, 7, 11], "better": 7, "between": [0, 1, 5, 11], "bia": [0, 4, 5, 7], "bias": 7, "biject": 11, "bin": 2, "bin2dec": [5, 6, 11], "binari": [0, 5, 11], "binary_vector": [2, 11], "bio": [6, 8], "bio_model": 3, "biodivin": 3, "biolog": [1, 2, 7], "biologi": 7, "bit": [1, 4, 11], "bn": [3, 7], "bn0": 7, "bn2": 7, "bn3": 7, "bn4": 7, "bnet": 5, "bodi": 4, "bookkeep": 5, "bool": [3, 4, 5, 7, 11], "bool_to_poli": [6, 11], "boolean": [2, 3, 6, 7, 8, 9, 10, 11], "boolean_funct": 4, "boolean_network": 5, "boolean_nod": [0, 4], "booleanfunct": [1, 2, 4, 5, 6, 7, 10], "booleannetwork": [3, 5, 6, 7], "booleannod": [0, 4], "boolen": 2, "boolforg": [3, 4, 5, 7, 8, 9, 10, 11], "both": [2, 7, 9], "bound": [5, 7], "branch": 7, "broadcast": 7, "brute": 2, "built": 7, "byte": 3, "c": [0, 1, 4, 5, 7, 9, 11], "calcul": [4, 5], "call": [2, 7], "can": [0, 1, 2, 4, 5, 7, 8, 9, 11], "can_output": 4, "cana": [0, 2, 4, 5, 9], "cana_booleannetwork": 5, "cana_booleannod": 4, "cana_object": 0, "canal": [4, 7, 8, 10, 11], "canalizedoutput": [2, 4], "canalizing_depth": 2, "canalizing_info": 2, "canalizing_strength": 2, "canalizingdepth": 4, "canalizinginput": [2, 4], "cannot": [2, 7], "cap": 7, "carlo": [1, 4], "case": [1, 2, 7], "cdot": 2, "cell": 5, "certain": 0, "certainli": 1, "chanc": 7, "chang": [1, 4, 5], "chao": 5, "charact": 4, "check": [0, 1, 2, 4, 11], "check_if_empti": [6, 11], "choos": 7, "chosen": [4, 5, 7], "ckadelka": [3, 8, 9], "class": [0, 1, 4, 5], "classic": 7, "classmethod": [4, 5], "clau": [4, 5, 7, 11], "clip": 7, "close": 7, "coberli": [4, 5, 7, 11], "code": [0, 2, 8], "coher": 5, "coherenceapproxim": 5, "collect": [0, 4, 5, 10], "column": 4, "com": [8, 9], "combin": 4, "common": 5, "commonli": 9, "compar": 1, "comparison": 11, "compat": [4, 5, 8], "compil": 5, "complic": 0, "compon": [5, 7], "compos": 4, "comput": [0, 1, 2, 4, 5, 7, 11], "computation": 1, "compute_synchronous_state_transition_graph": [5, 6], "concept": [2, 8, 10], "condit": [0, 4, 5], "condition": [2, 4, 7], "configur": 7, "connect": [5, 7], "consid": [2, 5, 9], "constant": [0, 2, 4, 5, 7], "constitut": 2, "constraint": 7, "construct": [5, 7], "constructor": [4, 5], "contain": [0, 3, 4, 5, 7, 11], "content": 3, "contrari": 0, "control": [4, 5, 7], "control_sourc": 5, "control_target": 5, "convent": 7, "converg": 5, "convert": [4, 5, 9, 10, 11], "core": [2, 4, 7], "corefunct": [2, 4], "correia": 4, "correspond": [2, 4, 5, 7], "costa": 5, "could": 3, "count": [2, 4, 5], "creat": [3, 4, 5, 7, 10, 11], "curat": 3, "current": 5, "cycl": 5, "d": [2, 4, 7, 11], "dag": 5, "dai": 2, "data": [0, 9], "debug": 5, "dec2bin": [6, 11], "decim": 5, "decompos": [2, 4], "decreas": [0, 5], "def": 7, "default": [0, 1, 3, 4, 5, 7, 11], "defin": [0, 1, 2, 4, 5], "definit": 2, "degener": [0, 2, 7], "degeneraci": [1, 7], "degrad": 5, "degre": [0, 1, 2, 3, 4, 7], "delta": 7, "depend": [1, 7, 9], "depth": [2, 4, 5, 7], "deriv": 5, "derrida": [4, 5], "describ": [0, 1, 2, 5, 7, 11], "descript": 0, "desir": 4, "detail": [5, 7], "determin": [0, 2, 4, 5, 7, 11], "develop": 9, "deviat": [1, 4, 7], "diagram": [5, 7], "dict": [0, 4, 5], "dictionari": [4, 5], "differ": [0, 1, 2, 5, 7], "digit": 11, "digraph": 5, "dimens": 11, "dimitrova": [4, 7], "dirac": 7, "direct": [3, 5, 7], "directli": [2, 7], "disallow": 7, "disjunct": 11, "displai": 4, "display_truth_t": [1, 2, 4, 6], "distanc": [5, 7], "distinct": [4, 7], "distribut": [2, 4, 5, 7], "divid": 4, "divis": 1, "dnf": [4, 11], "do": 9, "do_not_add_self_regul": 7, "document": 8, "doe": [1, 4, 5], "doubl": 7, "download": [3, 9], "download_url": 3, "draw": 7, "drawn": [2, 7], "drosophila": 4, "duplic": 7, "dure": 5, "dynam": 4, "e": [0, 1, 2, 4, 5, 7, 11], "e55946": 4, "e_i": 1, "each": [0, 2, 4, 5, 7, 11], "edg": [2, 4, 5, 7], "edge_effect": 2, "effect": [2, 4, 7, 11], "effective_degre": 2, "either": [5, 7], "el": 11, "element": [5, 7, 11], "els": [5, 7], "empti": [5, 11], "encount": [5, 11], "end": [2, 5], "enforc": 7, "enjoi": 2, "enrich": 2, "ensur": [1, 7], "ensurepip": 9, "entir": [0, 2, 5], "entri": [5, 7], "entropi": 5, "enumer": [1, 2, 4, 7], "equal": [0, 2, 5, 7, 11], "equival": [1, 2, 4, 5, 11], "error": 7, "espresso": 4, "essenti": [0, 1, 4, 5, 7], "estim": [4, 5], "et": 2, "etc": [4, 5, 7], "europhys": 5, "evalu": [2, 4, 5, 11], "even": 1, "ever": 1, "everi": [0, 4, 7], "exact": [1, 2, 4, 5, 7, 11], "exact_depth": 7, "exactli": [0, 2, 5, 7], "exactnumberofattractor": 5, "exampl": [0, 1, 2, 4, 7, 11], "exce": 7, "exceed": 5, "except": 2, "excess": 2, "exclud": [5, 7], "exemplifi": 2, "exhaust": 4, "exhibit": 2, "exist": [2, 4, 7, 11], "expect": 1, "expens": 1, "expert": 3, "explor": [0, 2, 5, 10], "expr": 11, "express": [4, 5, 7, 10, 11], "extend": [2, 4, 8], "extract": [5, 11], "extrem": 7, "f": [0, 1, 2, 4, 5, 7, 11], "f1": 4, "f2": [0, 4], "f3": 0, "f_and": 0, "f_from_express": [4, 6, 11], "fail": 3, "failed_download_url": 3, "fairli": [0, 2], "fals": [0, 1, 2, 3, 4, 5, 7, 11], "far": [4, 5], "fast": 5, "feed": 5, "feedback": 5, "fetch_fil": [3, 6], "fetch_file_byt": [3, 6], "few": 2, "ffl": 5, "fig": 2, "file": [0, 3], "file_download_url": 3, "file_nam": 3, "final": 5, "finalhammingdistanceapproxim": 5, "find": [1, 5], "find_all_indic": [6, 11], "first": [0, 1, 3, 5, 7, 11], "five": 0, "fix": [2, 4, 5, 7], "fix_self_regul": 7, "fixed_in_and_outdegre": 7, "fixed_indegre": 7, "flag": 7, "flatten": [6, 11], "flexibl": 7, "flip": [1, 4], "float": [4, 5, 7, 11], "focu": [2, 8], "folder": 3, "follow": [2, 7], "forbid": 7, "forc": [2, 4, 7], "form": [0, 2, 4, 5, 11], "format": [0, 4, 5, 11], "formula": 5, "forward": [5, 7], "found": [4, 5, 7, 8], "foundat": [0, 1], "four": 2, "frac": 1, "fragil": 5, "fragilityapproxim": 5, "fresh": 7, "fri": 3, "from": [1, 2, 3, 4, 5, 7, 9, 11], "from_cana": [4, 5, 6], "from_str": [5, 6], "frontier": 4, "full": [4, 5, 7], "fulli": [1, 7], "func": [1, 2], "function": [2, 5, 6, 7, 8, 10, 11], "further": 1, "g": [0, 1, 2, 4, 5, 7], "gate": [2, 4], "gener": [0, 1, 4, 5, 6, 8], "generate_networkx_graph": [5, 6], "generate_networkx_graph_from_edg": [5, 6], "geq": [0, 2], "get": 7, "get_absolute_bia": [0, 4, 6], "get_act": [1, 2, 4, 6], "get_attractors_and_robustness_measures_synchron": [5, 6], "get_attractors_and_robustness_measures_synchronous_exact": [5, 6], "get_attractors_synchron": [5, 6], "get_attractors_synchronous_exact": [5, 6], "get_average_sensit": [1, 2, 4, 6], "get_bio_models_from_repositori": [3, 6], "get_canalizing_depth": [2, 4, 6], "get_canalizing_strength": [2, 4, 6], "get_const": [5, 6], "get_content_in_remote_fold": [3, 6], "get_derrida_valu": [5, 6], "get_edge_effect": [2, 4, 6], "get_effective_degre": [2, 4, 6], "get_entropy_of_basin_size_distribut": [5, 6], "get_essential_vari": [0, 4, 6], "get_ffl": [5, 6], "get_hamming_weight": [0, 4, 6], "get_input_redund": [2, 4, 6], "get_kset_canalizing_proport": [2, 4, 6], "get_layer_structur": [2, 4, 6], "get_layer_structure_from_canalized_output": [4, 6], "get_layer_structure_of_an_ncf_given_its_hamming_weight": [6, 11], "get_left_side_of_truth_t": 2, "get_modular_structur": [5, 6], "get_network_with_edge_control": [5, 6], "get_network_with_fixed_source_nod": [5, 6], "get_network_with_node_control": [5, 6], "get_number_of_essential_vari": [4, 6], "get_outdegre": [5, 6], "get_source_nod": [5, 6], "get_steady_states_asynchron": [5, 6], "get_steady_states_asynchronous_given_one_initial_condit": [5, 6], "get_strongly_connected_compon": [5, 6], "get_symmetry_group": [1, 4, 6], "get_type_of_input": [0, 4, 6], "get_type_of_loop": [5, 6], "get_types_of_regul": [5, 6], "git": 9, "github": [3, 8, 9], "give": 7, "given": [1, 2, 4, 5, 7, 11], "global": 5, "graph": [5, 7], "group": [2, 4, 10], "gt": 0, "guarante": [5, 7], "h": [0, 1, 2, 5], "ha": [0, 1, 2, 4, 5, 7, 9, 11], "ham": [0, 5, 7, 11], "hamming_weight": 7, "hand": [1, 9, 11], "handl": 7, "hard": 1, "have": [0, 2, 4, 7, 9, 11], "he": [2, 4, 7], "heavili": 2, "help": [0, 2], "here": [5, 7, 9], "high": [2, 5, 7], "highest": 2, "highli": [2, 7], "hist": 2, "hold": [4, 11], "how": [0, 1, 2, 4, 5, 7], "howev": [2, 9], "http": [8, 9], "hybrid": 5, "hypercub": 5, "i": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11], "idea": 2, "identifi": [2, 3, 4, 5], "ignor": [5, 7, 11], "ignore_first_lin": 3, "ii": [1, 7], "implement": [4, 5, 7], "impli": [5, 7], "import": [0, 1, 2, 9], "includ": [0, 4, 5, 7, 9, 11], "incom": 7, "increas": [0, 5], "indegre": [5, 7], "indegree_distribut": 7, "independ": [7, 9], "index": [5, 8], "indic": [0, 4, 5, 7, 11], "indices_controlled_nod": 5, "individu": 2, "influenc": [4, 5, 7, 11], "inform": [2, 4, 5], "inherit": 5, "initi": 5, "initial_condit": 5, "initial_sample_point": 5, "initial_sample_points_as_binary_vector": 5, "initialsamplepoint": 5, "inner": [2, 4, 7], "inop": 5, "input": [0, 1, 4, 5, 7, 10, 11], "input_redund": 2, "insist": 7, "inspect": 0, "instal": [0, 2, 4, 8], "instanc": [0, 4, 5], "instead": 2, "int": [0, 3, 4, 5, 7, 11], "integ": [5, 7, 11], "integer_valu": 11, "integr": 9, "interchang": 1, "intermedi": 5, "interpret": [5, 7], "interv": 4, "introduc": [2, 7], "invalid": 7, "invert": 5, "investig": 1, "irrespect": [2, 4], "is_can": [2, 4, 6], "is_const": [0, 4, 6], "is_degener": [0, 2, 4, 6], "is_k_can": [2, 4, 6], "is_kset_can": [4, 6], "is_list_or_array_of_float": [6, 11], "is_list_or_array_of_int": [6, 11], "is_monoton": [4, 6], "iter": [4, 5], "ith": [1, 5], "its": [0, 1, 2, 4, 5, 7, 11], "itself": [2, 4, 5, 7], "j": [4, 5, 7, 11], "jcrozum": 3, "journal": 2, "jul": [7, 11], "just": 7, "k": [0, 2, 4, 5, 7], "k1": 7, "k_1": [2, 7, 11], "k_i": [2, 7, 11], "k_r": [2, 7, 11], "kadelka": [2, 4, 5, 7, 11], "kauffman": 7, "keep": [4, 7], "keep_controlled_nod": 5, "kei": [2, 5], "keilti": 4, "kept": 7, "kernel": 5, "know": 2, "knowledg": 2, "known": 2, "kr": 7, "kset_canalizing_proport": 2, "kuiper": [7, 11], "kwarg": 7, "l": [4, 5, 11], "label": [1, 2, 4, 5], "lambda": 7, "landscap": 5, "larg": [1, 7], "larger": 7, "last": [1, 7, 11], "later": [2, 7], "laubenbach": [4, 7, 11], "layer": [4, 7, 10, 11], "layer_structur": 7, "layer_structure_ncf": 11, "layerstructur": [2, 4], "ldot": [0, 1, 2], "learn": [0, 1, 2, 9], "least": [2, 4, 7], "leav": 1, "left": 0, "len": [5, 7], "length": [0, 4, 5, 7, 11], "leq": 2, "less": 2, "let": 7, "letter": 5, "level": 2, "lie": 7, "life": 5, "like": [2, 7, 11], "likewis": 2, "line": 3, "linear": [0, 1, 7, 11], "linux": 8, "list": [3, 4, 5, 7, 11], "load": 3, "load_model": [3, 6], "log": 5, "logic": [3, 4, 5, 7, 10], "longer": [5, 7], "loop": [5, 7], "low": 7, "lower": 5, "lowerboundofnumberofattractor": 5, "lt": 0, "m": [4, 5, 7, 9], "m_i": 5, "mac": 8, "macaulei": [2, 4, 7], "made": 8, "mai": [5, 7], "make": 9, "malform": 7, "mani": [1, 4, 5], "map": [5, 7], "marqu": 4, "master": 5, "match": [7, 11], "mathbf": 1, "mathemat": [2, 4], "matplotlib": 2, "matrix": 7, "max": 7, "max_degre": [3, 5, 11], "maxim": [2, 4], "maximum": [3, 5, 7], "mean": [1, 7], "meaning": 2, "measur": [4, 5, 10], "melanogast": 4, "member": [4, 5], "method": [4, 5, 9], "min": 7, "minim": [4, 7], "minimize_express": 4, "minimum": 7, "minu": 2, "minut": 2, "mix": 7, "model": [5, 6, 7, 8], "modifi": 5, "modul": [4, 5], "modular": [1, 5], "modulo": 7, "monomi": [2, 4], "monoton": 4, "mont": [1, 4], "more": [0, 1, 2, 4, 7, 9], "most": [2, 7], "much": [4, 5], "multi": 7, "multipl": 5, "murrugarra": [4, 7], "must": [2, 4, 5, 7, 9, 11], "my_list": 11, "n": [0, 1, 2, 4, 5, 7, 11], "n_attempts_to_generate_strongly_connected_network": 7, "n_constant": 5, "n_i": 5, "n_step": 5, "n_steps_timeout": 5, "n_variabl": 5, "name": [0, 2, 3, 4, 5, 11], "nan": 5, "natur": 2, "nb": 5, "ncf": 11, "ndarrai": [4, 5, 7, 11], "necessari": 4, "need": [2, 4], "neg": 4, "negat": [3, 7], "neighbor": 5, "neither": 7, "neq": [1, 2], "nest": [2, 4, 7, 11], "nested_can": 2, "network": [0, 2, 3, 4, 6, 7, 8, 9, 11], "network_str": 5, "networkx": 5, "never": 7, "new": [5, 7], "next": [1, 2, 4, 5], "nextstep": 5, "nk": 7, "no_self_regul": 7, "node": [3, 4, 5, 7], "non": [0, 1, 2, 4, 5, 7, 11], "none": [1, 3, 4, 5, 7, 11], "nonlinear": [4, 7, 11], "nontrivi": 7, "normal": [1, 2, 4, 5, 11], "note": [2, 4, 7], "now": 9, "np": [0, 1, 2, 4, 5, 7, 11], "npj": 7, "nsim": [1, 4, 5], "null": 7, "num_bit": 11, "numba": [4, 5], "number": [0, 2, 4, 5, 7, 11], "number_different_": 5, "numberofattractor": 5, "numberoflay": [2, 4], "numberofsteadyst": 5, "numberoftimeout": 5, "numer": 5, "numpi": [0, 1, 2, 4, 11], "o": 8, "object": [4, 5, 7], "obtain": 5, "obviou": 2, "occur": 0, "occurr": 11, "od": 7, "odd": 11, "often": [1, 7], "one": [2, 4, 5, 7], "ones": 7, "onli": [1, 2, 5, 7], "onlin": 3, "oper": [3, 4, 11], "oplu": 1, "optim": 5, "option": [0, 3, 4, 5, 7, 11], "order": [0, 2, 4, 5, 7, 11], "orderofcanalizingvari": [2, 4], "origin": [5, 7], "original_and": [3, 5], "original_not": [3, 5], "original_or": [3, 5], "other": [0, 1, 2, 4, 7, 9], "otherwis": [4, 5, 7, 11], "out": [5, 7], "outdeg": 7, "outdegre": 5, "outer": 2, "outgo": 7, "output": [1, 2, 4, 5, 7], "over": [4, 5, 7], "overal": 5, "overrid": 5, "p": 5, "p_": 2, "p_i": 5, "p_k": 2, "packag": [0, 2, 4, 8, 9], "parallel": 7, "paramet": [3, 4, 5, 7, 11], "paramt": 11, "pariti": [0, 1, 2, 4], "park": 5, "pars": 3, "part": [1, 2, 5], "partial": 1, "particular": 5, "pass": [5, 7], "path": 5, "per": [2, 5, 7], "perform": [5, 7], "permut": [1, 5], "perturb": 5, "phenomena": [4, 7, 11], "physic": 2, "physica": [2, 4, 7, 11], "physiologi": 4, "pip": [2, 9], "pita": 4, "plain": 3, "plo": 4, "plt": 2, "pna": 2, "point": [3, 5, 11], "poisson": 7, "polynomi": [4, 5, 10, 11], "pomeau": 5, "pool": 7, "posit": [0, 4, 7], "possibl": [1, 2, 3], "possible_separ": 3, "possibli": 7, "preced": 7, "prefix": 11, "preprint": 5, "present": 7, "preserv": 7, "preserve_bia": 7, "preserve_canalizing_depth": 7, "print": [0, 1, 2, 5], "prior": 9, "probabl": [1, 2, 4, 5, 7], "process": 5, "processor": 0, "properli": 4, "properti": [1, 2, 4, 7, 10], "proport": [2, 4, 5], "propos": 7, "provid": [0, 4, 5, 7, 11], "prx": 5, "py": 9, "pyboolnet": 9, "pyplot": 2, "pystablemotif": 3, "python": [0, 4, 5, 8], "q": [4, 7], "quantifi": [2, 4], "quantiti": 2, "queue": 5, "quit": 7, "r": [2, 4, 5, 7, 11], "rais": [7, 11], "random": [1, 2, 4, 5, 7, 8], "random_degenerated_funct": [6, 7], "random_degre": [6, 7], "random_edge_list": [6, 7], "random_funct": [1, 6, 7], "random_function_with_bia": [6, 7], "random_function_with_exact_hamming_weight": [6, 7], "random_k_canalizing_funct": [6, 7], "random_k_canalizing_function_with_specific_layer_structur": [6, 7], "random_linear_funct": [6, 7], "random_ncf": [6, 7], "random_nested_canalizing_funct": [6, 7], "random_network": [6, 7], "random_non_canalizing_funct": [6, 7], "random_non_canalizing_non_degenerated_funct": [6, 7], "random_non_degenerated_funct": [6, 7], "random_null_model": [6, 7], "random_wiring_diagram": [6, 7], "randomli": [4, 5, 7], "rang": [7, 11], "rate": 7, "rather": 2, "raw": 3, "re": 7, "reach": 5, "reachabl": 5, "read": 0, "readili": [0, 1], "receiv": [2, 7], "recent": 2, "recommend": [1, 9], "reconsid": 2, "recurs": [2, 4], "reduc": [4, 5, 7, 11], "redund": [1, 4, 10], "refer": [4, 5, 7, 11], "reg": 7, "regardless": 4, "regul": [4, 5, 7], "reichhardt": 2, "reject": 7, "relat": [2, 8, 10], "relev": 7, "remain": [4, 5, 7], "remind": 2, "remot": 3, "remov": [2, 4, 5, 9], "remove_const": [5, 6], "repeat": 5, "repeatedli": 7, "repositori": 3, "repres": [4, 5, 7, 11], "represent": [5, 7, 11], "request": 7, "requir": [0, 1, 4, 7, 11], "required_length": 11, "rerun": 0, "resampl": 7, "respect": 2, "respons": 5, "restrict": 5, "result": [2, 4, 5, 7], "retri": 7, "retriev": 3, "return": [3, 4, 5, 7, 11], "return_attractor_coher": 5, "reus": 7, "reveal": [1, 2, 4, 7], "rewir": 7, "rewire_wiring_diagram": [6, 7], "right": [0, 11], "rng": [4, 5, 7], "robust": [1, 5, 7, 11], "rocha": [4, 5], "routin": 7, "row": 4, "rozum": 5, "rule": [2, 4, 7], "run": [2, 5, 9], "runtimeerror": 7, "same": [0, 1, 2, 4, 5, 7], "sampl": [4, 5, 7], "satisfi": 7, "scalar": 7, "scc": 5, "sdd": 5, "search": 5, "search_depth": 5, "second": [1, 2], "see": [0, 4, 7], "segment": 4, "select": [3, 7], "self": [4, 5, 7], "sensit": [2, 4, 10], "sep": 3, "separ": [3, 5], "sequenc": [5, 7], "serv": 2, "set": [1, 2, 4, 5, 7], "set_xlabel": 2, "set_ylabel": 2, "sever": 5, "shannon": 5, "shape": 7, "should": [5, 9], "show": [1, 4, 5], "shown": 2, "side": [0, 11], "similar": [2, 5], "simpl": [0, 5], "simplify_funct": [5, 6], "simul": [1, 2, 5], "simultan": 7, "sinc": [0, 2, 7], "singl": [1, 2, 5, 7], "size": [4, 5, 11], "skip": 3, "so": [2, 4], "sole": 5, "some": [0, 2, 7], "sort": 7, "sourc": [3, 4, 5, 7, 8, 11], "space": [4, 5], "specif": [1, 2, 4, 7], "specifi": [0, 1, 5, 7], "stage": 7, "standard": [1, 2, 4], "start": [0, 5], "state": 5, "states_regul": 5, "std": 1, "steadi": 5, "steady_states_asynchronous_given_one_": 5, "steadyst": 5, "step": 5, "stg": 5, "stgasynchron": 5, "stigler": [4, 7], "stochast": 5, "stochastic_weight": 5, "store": 0, "str": [0, 3, 4, 5, 7, 11], "stratif": [4, 7], "strength": [2, 4], "string": [4, 5, 11], "strong": 7, "strongli": [5, 7], "strongly_connect": 7, "structur": [2, 4, 5, 7, 11], "subarrai": 11, "subfunct": [2, 4], "subplot": 2, "subroutin": 7, "success": 7, "successful_download_url": 3, "successfulli": 3, "suffic": 2, "sum": [1, 2, 4, 5, 7], "sum_": 1, "support": 9, "swap": [4, 7], "swappabl": 7, "sybila": 3, "sychron": 5, "symmetr": 1, "symmetri": [0, 2, 4, 10], "symmetry_group": 1, "synchron": 5, "system": 7, "t": 5, "tabl": [4, 5, 7, 11], "take": [2, 5, 7], "taken": 7, "target": [5, 7], "tell": 2, "text": [2, 3, 11], "than": 2, "thei": [0, 1, 2, 5, 7, 11], "them": [5, 7], "therefor": 7, "thi": [0, 1, 2, 4, 5, 7, 9, 11], "those": [2, 5, 7], "three": 1, "threshold": [0, 11], "through": 7, "thu": [1, 2], "time": [2, 5], "to_bnet": [5, 6], "to_cana": [0, 4, 5, 6], "to_log": [0, 4, 6], "to_polynomi": [0, 4, 6], "todo": 5, "toggl": 4, "total": [4, 5, 7], "trajectori": 5, "transform": [4, 11], "transient": 5, "transienttim": 5, "transit": 5, "treat": 0, "tri": 7, "triplet": 5, "true": [1, 2, 3, 4, 5, 7, 11], "truncat": 7, "truth": [4, 5, 7, 11], "tue": [4, 7, 11], "tupl": [3, 4, 5, 7, 11], "turn": [0, 5], "tutori": 8, "two": [2, 4, 7], "type": [0, 4, 5, 7, 11], "type_of_control": 5, "type_of_edge_control": 5, "types_i": 5, "typic": 7, "u": [2, 7], "unbias": [0, 5, 7], "unchang": [1, 5, 7], "under": [5, 7], "underli": 5, "understand": 0, "uniform": [5, 7], "uniformli": [2, 7], "uninstal": 9, "uniqu": [2, 5], "unit": 1, "unless": 7, "until": [5, 7], "up": 7, "updat": [2, 4, 5, 7], "update_network_sdd": [5, 6], "update_network_synchron": [5, 6], "update_network_synchronously_many_tim": [5, 6], "update_single_nod": [5, 6], "updatequeu": 5, "upgrad": 9, "upper": 7, "url": 3, "us": [2, 4, 5, 7, 9, 11], "use_absolute_bia": 7, "util": [4, 5, 6, 7, 8], "v": [5, 7], "valid": 7, "valu": [1, 2, 4, 5, 7, 11], "valueerror": 11, "values_const": 5, "values_controlled_nod": 5, "values_source_nod": 5, "var": 11, "variabl": [0, 1, 4, 5, 7, 10, 11], "variant": [4, 5, 11], "variou": 0, "vector": [0, 1, 4, 5, 7, 11], "veri": [1, 2, 7], "versatil": 0, "version": [4, 5, 9], "via": [0, 4, 7], "violat": 7, "w": 11, "wa": [0, 2], "wai": 4, "wang": 4, "want": 7, "we": [0, 1, 2], "wed": 5, "weight": [0, 2, 4, 5, 7, 11], "well": [1, 5, 11], "were": 11, "wheeler": 5, "when": [0, 1, 4, 5, 7], "where": [0, 1, 2, 3, 4, 5, 7, 11], "wherea": 4, "whether": [2, 4, 5, 7], "which": [0, 1, 2, 4, 5, 7], "while": [0, 1, 4, 7], "whose": [5, 7], "window": 8, "wire": [5, 7], "wiring_diagram": 7, "wiringdiagram": [5, 6, 7], "within": [2, 5, 7], "without": [0, 1], "work": [1, 8, 10], "would": 7, "write": 0, "x": [0, 1, 4, 5, 7, 11], "x0": [0, 2, 4], "x1": [0, 1, 2, 4, 11], "x2": [1, 2, 4, 11], "x3": [1, 4, 11], "x_": [0, 4], "x_0": [0, 2], "x_1": [0, 1, 2, 4], "x_2": [1, 2], "x_3": 1, "x_i": [1, 2, 4], "x_n": [2, 4], "xn": 4, "xor": [1, 2, 11], "xxx": 5, "xxxx": 5, "y": [0, 1, 5, 7], "ye": 5, "yield": [1, 2, 7], "you": [0, 1, 2, 7, 9], "your": 7, "z": [0, 1], "zero": [2, 4, 7], "zip": [1, 2], "\u03bb": 7}, "titles": ["BoolForge Tutorial #1: Working with Boolean Functions", "BoolForge Tutorial #2: Advanced concepts related to Boolean Functions", "BoolForge Tutorial #3: Canalization", "Bio Models", "Boolean Function", "Boolean Network", "Documentation", "Generate", "Home", "Installation", "Tutorials", "Utils"], "titleterms": {"1": 0, "2": 1, "3": 2, "activ": 1, "advanc": 1, "attribut": 0, "basic": 0, "bio": 3, "boolean": [0, 1, 4, 5], "booleanfunct": 0, "boolforg": [0, 1, 2], "canal": 2, "collect": 2, "compat": 9, "concept": 1, "convert": 0, "creat": 0, "document": 6, "explor": 1, "express": 0, "extend": 9, "from": 0, "function": [0, 1, 4, 9], "gener": 7, "group": 1, "home": 8, "input": 2, "instal": 9, "layer": 2, "linux": 9, "logic": 0, "mac": 9, "measur": 2, "model": 3, "network": 5, "o": 9, "polynomi": 0, "properti": 0, "python": 9, "redund": 2, "relat": 1, "sensit": 1, "symmetri": 1, "tabl": 0, "text": 0, "truth": 0, "tutori": [0, 1, 2, 10], "util": 11, "variabl": 2, "window": 9, "work": 0}})