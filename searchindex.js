Search.setIndex({"alltitles": {"Activities and sensitivities": [[1, "Activities-and-sensitivities"]], "Allowing degenerated functions": [[3, "Allowing-degenerated-functions"]], "Analyzing functions with specific canalizing layer structure": [[4, "Analyzing-functions-with-specific-canalizing-layer-structure"]], "Attributes of BooleanFunction": [[0, "Attributes-of-BooleanFunction"]], "Basic properties of Boolean functions": [[0, "Basic-properties-of-Boolean-functions"]], "Biased functions": [[3, "Biased-functions"]], "Bio Models": [[6, null]], "BoolForge Tutorial #1: Working with Boolean functions": [[0, null]], "BoolForge Tutorial #2: Advanced concepts related to Boolean functions": [[1, null]], "BoolForge Tutorial #3: Canalization": [[2, null]], "BoolForge Tutorial #4: Generating random Boolean functions": [[3, null]], "BoolForge Tutorial #5: Example use cases of the random function generator": [[4, null]], "BoolForge Tutorial #6: Working with Boolean networks": [[5, null]], "Boolean Function": [[7, null]], "Boolean Network": [[8, null]], "Boolean network theory": [[5, "Boolean-network-theory"]], "Canalization as a measure of input redundancy": [[2, "Canalization-as-a-measure-of-input-redundancy"]], "Canalizing variables and layers": [[2, "Canalizing-variables-and-layers"]], "Collective canalization": [[2, "Collective-canalization"]], "Compatability": [[12, "compatability"]], "Convert to logical and polynomial expression": [[0, "Convert-to-logical-and-polynomial-expression"]], "Correlation between canalization and bias": [[4, "Correlation-between-canalization-and-bias"]], "Create Boolean networks": [[5, "Create-Boolean-networks"]], "Create a Boolean function": [[0, "Create-a-Boolean-function"]], "Create a Boolean function from text": [[0, "Create-a-Boolean-function-from-text"]], "Create a Boolean function from truth table": [[0, "Create-a-Boolean-function-from-truth-table"]], "Documentation": [[9, null]], "Exploring symmetry groups of Boolean functions": [[1, "Exploring-symmetry-groups-of-Boolean-functions"]], "Extended Functionality": [[12, "extended-functionality"]], "Functions with defined canalizing properties": [[3, "Functions-with-defined-canalizing-properties"]], "Functions with specific Hamming weight": [[3, "Functions-with-specific-Hamming-weight"]], "Generate": [[10, null]], "Home": [[11, null]], "Installation": [[12, null]], "Linear functions": [[3, "Linear-functions"]], "Mac OS / Linux": [[12, "mac-os-linux"]], "Measures of collective canalization for different degree": [[4, "Measures-of-collective-canalization-for-different-degree"]], "Prevalence of canalization": [[4, "Prevalence-of-canalization"]], "Python": [[12, "python"]], "Structural decomposition of wiring diagrams": [[5, "Structural-decomposition-of-wiring-diagrams"]], "Tutorials": [[13, null]], "Utils": [[14, null]], "Windows": [[12, "windows"]], "Wiring diagrams": [[5, "Wiring-diagrams"]]}, "docnames": ["_collections/tutorials/01_working_with_boolean_functions", "_collections/tutorials/02_advanced_concepts_boolean_functions", "_collections/tutorials/03_canalization", "_collections/tutorials/04_generate_random_boolean_functions", "_collections/tutorials/05_pipelines_random_function_generator", "_collections/tutorials/06_working_with_Boolean_networks", "bio_models", "boolean_function", "boolean_network", "docs", "generate", "index", "install", "tutorial", "utils"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["_collections\\tutorials\\01_working_with_boolean_functions.ipynb", "_collections\\tutorials\\02_advanced_concepts_boolean_functions.ipynb", "_collections\\tutorials\\03_canalization.ipynb", "_collections\\tutorials\\04_generate_random_boolean_functions.ipynb", "_collections\\tutorials\\05_pipelines_random_function_generator.ipynb", "_collections\\tutorials\\06_working_with_Boolean_networks.ipynb", "bio_models.rst", "boolean_function.rst", "boolean_network.rst", "docs.rst", "generate.rst", "index.rst", "install.rst", "tutorial.rst", "utils.rst"], "indexentries": {"__add__() (boolforge.boolean_function.booleanfunction method)": [[7, "boolforge.boolean_function.BooleanFunction.__add__", false]], "__and__() (boolforge.boolean_function.booleanfunction method)": [[7, "boolforge.boolean_function.BooleanFunction.__and__", false]], "__call__() (boolforge.boolean_function.booleanfunction method)": [[7, "boolforge.boolean_function.BooleanFunction.__call__", false]], "__call__() (boolforge.boolean_network.booleannetwork method)": [[8, "boolforge.boolean_network.BooleanNetwork.__call__", false]], "__invert__() (boolforge.boolean_function.booleanfunction method)": [[7, "boolforge.boolean_function.BooleanFunction.__invert__", false]], "__mul__() (boolforge.boolean_function.booleanfunction method)": [[7, "boolforge.boolean_function.BooleanFunction.__mul__", false]], "__or__() (boolforge.boolean_function.booleanfunction method)": [[7, "boolforge.boolean_function.BooleanFunction.__or__", false]], "__repr__() (boolforge.boolean_function.booleanfunction method)": [[7, "boolforge.boolean_function.BooleanFunction.__repr__", false]], "__rmul__() (boolforge.boolean_function.booleanfunction method)": [[7, "boolforge.boolean_function.BooleanFunction.__rmul__", false]], "__str__() (boolforge.boolean_function.booleanfunction method)": [[7, "boolforge.boolean_function.BooleanFunction.__str__", false]], "__str__() (boolforge.boolean_network.booleannetwork method)": [[8, "boolforge.boolean_network.BooleanNetwork.__str__", false]], "__weakref__ (boolforge.boolean_network.wiringdiagram attribute)": [[8, "boolforge.boolean_network.WiringDiagram.__weakref__", false]], "__xor__() (boolforge.boolean_function.booleanfunction method)": [[7, "boolforge.boolean_function.BooleanFunction.__xor__", false]], "booleanfunction (class in boolforge.boolean_function)": [[7, "boolforge.boolean_function.BooleanFunction", false]], "booleannetwork (class in boolforge.boolean_network)": [[8, "boolforge.boolean_network.BooleanNetwork", false]], "boolforge.bio_models": [[6, "module-boolforge.bio_models", false]], "boolforge.boolean_function": [[7, "module-boolforge.boolean_function", false]], "boolforge.boolean_network": [[8, "module-boolforge.boolean_network", false]], "boolforge.generate": [[10, "module-boolforge.generate", false]], "compute_synchronous_state_transition_graph() (boolforge.boolean_network.booleannetwork method)": [[8, "boolforge.boolean_network.BooleanNetwork.compute_synchronous_state_transition_graph", false]], "display_truth_table() (in module boolforge.boolean_function)": [[7, "boolforge.boolean_function.display_truth_table", false]], "fetch_file() (in module boolforge.bio_models)": [[6, "boolforge.bio_models.fetch_file", false]], "fetch_file_bytes() (in module boolforge.bio_models)": [[6, "boolforge.bio_models.fetch_file_bytes", false]], "from_cana() (boolforge.boolean_function.booleanfunction class method)": [[7, "boolforge.boolean_function.BooleanFunction.from_cana", false]], "from_cana() (boolforge.boolean_network.booleannetwork class method)": [[8, "boolforge.boolean_network.BooleanNetwork.from_cana", false]], "from_digraph() (boolforge.boolean_network.wiringdiagram class method)": [[8, "boolforge.boolean_network.WiringDiagram.from_DiGraph", false]], "from_string() (boolforge.boolean_network.booleannetwork class method)": [[8, "boolforge.boolean_network.BooleanNetwork.from_string", false]], "generate_networkx_graph() (boolforge.boolean_network.wiringdiagram method)": [[8, "boolforge.boolean_network.WiringDiagram.generate_networkx_graph", false]], "generate_networkx_graph_from_edges() (boolforge.boolean_network.wiringdiagram method)": [[8, "boolforge.boolean_network.WiringDiagram.generate_networkx_graph_from_edges", false]], "get_absolute_bias() (boolforge.boolean_function.booleanfunction method)": [[7, "boolforge.boolean_function.BooleanFunction.get_absolute_bias", false]], "get_activities() (boolforge.boolean_function.booleanfunction method)": [[7, "boolforge.boolean_function.BooleanFunction.get_activities", false]], "get_attractors_and_robustness_measures_synchronous() (boolforge.boolean_network.booleannetwork method)": [[8, "boolforge.boolean_network.BooleanNetwork.get_attractors_and_robustness_measures_synchronous", false]], "get_attractors_and_robustness_measures_synchronous_exact() (boolforge.boolean_network.booleannetwork method)": [[8, "boolforge.boolean_network.BooleanNetwork.get_attractors_and_robustness_measures_synchronous_exact", false]], "get_attractors_synchronous() (boolforge.boolean_network.booleannetwork method)": [[8, "boolforge.boolean_network.BooleanNetwork.get_attractors_synchronous", false]], "get_attractors_synchronous_exact() (boolforge.boolean_network.booleannetwork method)": [[8, "boolforge.boolean_network.BooleanNetwork.get_attractors_synchronous_exact", false]], "get_average_sensitivity() (boolforge.boolean_function.booleanfunction method)": [[7, "boolforge.boolean_function.BooleanFunction.get_average_sensitivity", false]], "get_bio_models_from_repository() (in module boolforge.bio_models)": [[6, "boolforge.bio_models.get_bio_models_from_repository", false]], "get_canalizing_depth() (boolforge.boolean_function.booleanfunction method)": [[7, "boolforge.boolean_function.BooleanFunction.get_canalizing_depth", false]], "get_canalizing_strength() (boolforge.boolean_function.booleanfunction method)": [[7, "boolforge.boolean_function.BooleanFunction.get_canalizing_strength", false]], "get_canalizing_strength_of_variables() (boolforge.boolean_function.booleanfunction method)": [[7, "boolforge.boolean_function.BooleanFunction.get_canalizing_strength_of_variables", false]], "get_constants() (boolforge.boolean_network.wiringdiagram method)": [[8, "boolforge.boolean_network.WiringDiagram.get_constants", false]], "get_content_in_remote_folder() (in module boolforge.bio_models)": [[6, "boolforge.bio_models.get_content_in_remote_folder", false]], "get_derrida_value() (boolforge.boolean_network.booleannetwork method)": [[8, "boolforge.boolean_network.BooleanNetwork.get_derrida_value", false]], "get_edge_effectiveness() (boolforge.boolean_function.booleanfunction method)": [[7, "boolforge.boolean_function.BooleanFunction.get_edge_effectiveness", false]], "get_effective_degree() (boolforge.boolean_function.booleanfunction method)": [[7, "boolforge.boolean_function.BooleanFunction.get_effective_degree", false]], "get_entropy_of_basin_size_distribution() (in module boolforge.boolean_network)": [[8, "boolforge.boolean_network.get_entropy_of_basin_size_distribution", false]], "get_essential_variables() (boolforge.boolean_function.booleanfunction method)": [[7, "boolforge.boolean_function.BooleanFunction.get_essential_variables", false]], "get_ffls() (boolforge.boolean_network.wiringdiagram method)": [[8, "boolforge.boolean_network.WiringDiagram.get_ffls", false]], "get_hamming_weight() (boolforge.boolean_function.booleanfunction method)": [[7, "boolforge.boolean_function.BooleanFunction.get_hamming_weight", false]], "get_input_redundancy() (boolforge.boolean_function.booleanfunction method)": [[7, "boolforge.boolean_function.BooleanFunction.get_input_redundancy", false]], "get_kset_canalizing_proportion() (boolforge.boolean_function.booleanfunction method)": [[7, "boolforge.boolean_function.BooleanFunction.get_kset_canalizing_proportion", false]], "get_kset_canalizing_proportion_of_variables() (boolforge.boolean_function.booleanfunction method)": [[7, "boolforge.boolean_function.BooleanFunction.get_kset_canalizing_proportion_of_variables", false]], "get_layer_structure() (boolforge.boolean_function.booleanfunction method)": [[7, "boolforge.boolean_function.BooleanFunction.get_layer_structure", false]], "get_layer_structure_from_canalized_outputs() (in module boolforge.boolean_function)": [[7, "boolforge.boolean_function.get_layer_structure_from_canalized_outputs", false]], "get_modular_structure() (boolforge.boolean_network.wiringdiagram method)": [[8, "boolforge.boolean_network.WiringDiagram.get_modular_structure", false]], "get_network_with_edge_controls() (boolforge.boolean_network.booleannetwork method)": [[8, "boolforge.boolean_network.BooleanNetwork.get_network_with_edge_controls", false]], "get_network_with_fixed_source_nodes() (boolforge.boolean_network.booleannetwork method)": [[8, "boolforge.boolean_network.BooleanNetwork.get_network_with_fixed_source_nodes", false]], "get_network_with_node_controls() (boolforge.boolean_network.booleannetwork method)": [[8, "boolforge.boolean_network.BooleanNetwork.get_network_with_node_controls", false]], "get_number_of_essential_variables() (boolforge.boolean_function.booleanfunction method)": [[7, "boolforge.boolean_function.BooleanFunction.get_number_of_essential_variables", false]], "get_outdegrees() (boolforge.boolean_network.wiringdiagram method)": [[8, "boolforge.boolean_network.WiringDiagram.get_outdegrees", false]], "get_source_nodes() (boolforge.boolean_network.booleannetwork method)": [[8, "boolforge.boolean_network.BooleanNetwork.get_source_nodes", false]], "get_steady_states_asynchronous() (boolforge.boolean_network.booleannetwork method)": [[8, "boolforge.boolean_network.BooleanNetwork.get_steady_states_asynchronous", false]], "get_steady_states_asynchronous_given_one_initial_condition() (boolforge.boolean_network.booleannetwork method)": [[8, "boolforge.boolean_network.BooleanNetwork.get_steady_states_asynchronous_given_one_initial_condition", false]], "get_strongly_connected_components() (boolforge.boolean_network.wiringdiagram method)": [[8, "boolforge.boolean_network.WiringDiagram.get_strongly_connected_components", false]], "get_symmetry_groups() (boolforge.boolean_function.booleanfunction method)": [[7, "boolforge.boolean_function.BooleanFunction.get_symmetry_groups", false]], "get_type_of_inputs() (boolforge.boolean_function.booleanfunction method)": [[7, "boolforge.boolean_function.BooleanFunction.get_type_of_inputs", false]], "get_type_of_loop() (boolforge.boolean_network.wiringdiagram method)": [[8, "boolforge.boolean_network.WiringDiagram.get_type_of_loop", false]], "get_types_of_regulation() (boolforge.boolean_network.booleannetwork method)": [[8, "boolforge.boolean_network.BooleanNetwork.get_types_of_regulation", false]], "is_canalizing() (boolforge.boolean_function.booleanfunction method)": [[7, "boolforge.boolean_function.BooleanFunction.is_canalizing", false]], "is_constant() (boolforge.boolean_function.booleanfunction method)": [[7, "boolforge.boolean_function.BooleanFunction.is_constant", false]], "is_degenerate() (boolforge.boolean_function.booleanfunction method)": [[7, "boolforge.boolean_function.BooleanFunction.is_degenerate", false]], "is_k_canalizing() (boolforge.boolean_function.booleanfunction method)": [[7, "boolforge.boolean_function.BooleanFunction.is_k_canalizing", false]], "is_kset_canalizing() (boolforge.boolean_function.booleanfunction method)": [[7, "boolforge.boolean_function.BooleanFunction.is_kset_canalizing", false]], "is_monotonic() (boolforge.boolean_function.booleanfunction method)": [[7, "boolforge.boolean_function.BooleanFunction.is_monotonic", false]], "load_model() (in module boolforge.bio_models)": [[6, "boolforge.bio_models.load_model", false]], "module": [[6, "module-boolforge.bio_models", false], [7, "module-boolforge.boolean_function", false], [8, "module-boolforge.boolean_network", false], [10, "module-boolforge.generate", false]], "random_degenerate_function() (in module boolforge.generate)": [[10, "boolforge.generate.random_degenerate_function", false]], "random_degrees() (in module boolforge.generate)": [[10, "boolforge.generate.random_degrees", false]], "random_edge_list() (in module boolforge.generate)": [[10, "boolforge.generate.random_edge_list", false]], "random_function() (in module boolforge.generate)": [[10, "boolforge.generate.random_function", false]], "random_function_with_bias() (in module boolforge.generate)": [[10, "boolforge.generate.random_function_with_bias", false]], "random_function_with_exact_hamming_weight() (in module boolforge.generate)": [[10, "boolforge.generate.random_function_with_exact_hamming_weight", false]], "random_k_canalizing_function() (in module boolforge.generate)": [[10, "boolforge.generate.random_k_canalizing_function", false]], "random_k_canalizing_function_with_specific_layer_structure() (in module boolforge.generate)": [[10, "boolforge.generate.random_k_canalizing_function_with_specific_layer_structure", false]], "random_linear_function() (in module boolforge.generate)": [[10, "boolforge.generate.random_linear_function", false]], "random_ncf() (in module boolforge.generate)": [[10, "boolforge.generate.random_NCF", false]], "random_nested_canalizing_function() (in module boolforge.generate)": [[10, "boolforge.generate.random_nested_canalizing_function", false]], "random_network() (in module boolforge.generate)": [[10, "boolforge.generate.random_network", false]], "random_non_canalizing_function() (in module boolforge.generate)": [[10, "boolforge.generate.random_non_canalizing_function", false]], "random_non_canalizing_non_degenerate_function() (in module boolforge.generate)": [[10, "boolforge.generate.random_non_canalizing_non_degenerate_function", false]], "random_non_degenerate_function() (in module boolforge.generate)": [[10, "boolforge.generate.random_non_degenerate_function", false]], "random_null_model() (in module boolforge.generate)": [[10, "boolforge.generate.random_null_model", false]], "random_wiring_diagram() (in module boolforge.generate)": [[10, "boolforge.generate.random_wiring_diagram", false]], "remove_constants() (boolforge.boolean_network.booleannetwork method)": [[8, "boolforge.boolean_network.BooleanNetwork.remove_constants", false]], "rewire_wiring_diagram() (in module boolforge.generate)": [[10, "boolforge.generate.rewire_wiring_diagram", false]], "simplify_functions() (boolforge.boolean_network.booleannetwork method)": [[8, "boolforge.boolean_network.BooleanNetwork.simplify_functions", false]], "to_bnet() (boolforge.boolean_network.booleannetwork method)": [[8, "boolforge.boolean_network.BooleanNetwork.to_bnet", false]], "to_cana() (boolforge.boolean_function.booleanfunction method)": [[7, "boolforge.boolean_function.BooleanFunction.to_cana", false]], "to_cana() (boolforge.boolean_network.booleannetwork method)": [[8, "boolforge.boolean_network.BooleanNetwork.to_cana", false]], "to_logical() (boolforge.boolean_function.booleanfunction method)": [[7, "boolforge.boolean_function.BooleanFunction.to_logical", false]], "to_polynomial() (boolforge.boolean_function.booleanfunction method)": [[7, "boolforge.boolean_function.BooleanFunction.to_polynomial", false]], "to_truth_table() (boolforge.boolean_function.booleanfunction method)": [[7, "boolforge.boolean_function.BooleanFunction.to_truth_table", false]], "to_truth_table() (boolforge.boolean_network.booleannetwork method)": [[8, "boolforge.boolean_network.BooleanNetwork.to_truth_table", false]], "update_network_sdds() (boolforge.boolean_network.booleannetwork method)": [[8, "boolforge.boolean_network.BooleanNetwork.update_network_SDDS", false]], "update_network_synchronously() (boolforge.boolean_network.booleannetwork method)": [[8, "boolforge.boolean_network.BooleanNetwork.update_network_synchronously", false]], "update_network_synchronously_many_times() (boolforge.boolean_network.booleannetwork method)": [[8, "boolforge.boolean_network.BooleanNetwork.update_network_synchronously_many_times", false]], "update_single_node() (boolforge.boolean_network.booleannetwork method)": [[8, "boolforge.boolean_network.BooleanNetwork.update_single_node", false]], "wiringdiagram (class in boolforge.boolean_network)": [[8, "boolforge.boolean_network.WiringDiagram", false]]}, "objects": {"boolforge": [[6, 0, 0, "-", "bio_models"], [7, 0, 0, "-", "boolean_function"], [8, 0, 0, "-", "boolean_network"], [10, 0, 0, "-", "generate"], [14, 0, 0, "-", "utils"]], "boolforge.bio_models": [[6, 1, 1, "", "fetch_file"], [6, 1, 1, "", "fetch_file_bytes"], [6, 1, 1, "", "get_bio_models_from_repository"], [6, 1, 1, "", "get_content_in_remote_folder"], [6, 1, 1, "", "load_model"]], "boolforge.boolean_function": [[7, 2, 1, "", "BooleanFunction"], [7, 1, 1, "", "display_truth_table"], [7, 1, 1, "", "get_layer_structure_from_canalized_outputs"]], "boolforge.boolean_function.BooleanFunction": [[7, 3, 1, "", "__add__"], [7, 3, 1, "", "__and__"], [7, 3, 1, "", "__call__"], [7, 3, 1, "", "__invert__"], [7, 3, 1, "", "__mul__"], [7, 3, 1, "", "__or__"], [7, 3, 1, "", "__repr__"], [7, 3, 1, "", "__rmul__"], [7, 3, 1, "", "__str__"], [7, 3, 1, "", "__xor__"], [7, 3, 1, "", "from_cana"], [7, 3, 1, "", "get_absolute_bias"], [7, 3, 1, "", "get_activities"], [7, 3, 1, "", "get_average_sensitivity"], [7, 3, 1, "", "get_canalizing_depth"], [7, 3, 1, "", "get_canalizing_strength"], [7, 3, 1, "", "get_canalizing_strength_of_variables"], [7, 3, 1, "", "get_edge_effectiveness"], [7, 3, 1, "", "get_effective_degree"], [7, 3, 1, "", "get_essential_variables"], [7, 3, 1, "", "get_hamming_weight"], [7, 3, 1, "", "get_input_redundancy"], [7, 3, 1, "", "get_kset_canalizing_proportion"], [7, 3, 1, "", "get_kset_canalizing_proportion_of_variables"], [7, 3, 1, "", "get_layer_structure"], [7, 3, 1, "", "get_number_of_essential_variables"], [7, 3, 1, "", "get_symmetry_groups"], [7, 3, 1, "", "get_type_of_inputs"], [7, 3, 1, "", "is_canalizing"], [7, 3, 1, "", "is_constant"], [7, 3, 1, "", "is_degenerate"], [7, 3, 1, "", "is_k_canalizing"], [7, 3, 1, "", "is_kset_canalizing"], [7, 3, 1, "", "is_monotonic"], [7, 3, 1, "", "to_cana"], [7, 3, 1, "", "to_logical"], [7, 3, 1, "", "to_polynomial"], [7, 3, 1, "", "to_truth_table"]], "boolforge.boolean_network": [[8, 2, 1, "", "BooleanNetwork"], [8, 2, 1, "", "WiringDiagram"], [8, 1, 1, "", "get_entropy_of_basin_size_distribution"]], "boolforge.boolean_network.BooleanNetwork": [[8, 3, 1, "", "__call__"], [8, 3, 1, "", "__str__"], [8, 3, 1, "", "compute_synchronous_state_transition_graph"], [8, 3, 1, "", "from_cana"], [8, 3, 1, "", "from_string"], [8, 3, 1, "", "get_attractors_and_robustness_measures_synchronous"], [8, 3, 1, "", "get_attractors_and_robustness_measures_synchronous_exact"], [8, 3, 1, "", "get_attractors_synchronous"], [8, 3, 1, "", "get_attractors_synchronous_exact"], [8, 3, 1, "", "get_derrida_value"], [8, 3, 1, "", "get_network_with_edge_controls"], [8, 3, 1, "", "get_network_with_fixed_source_nodes"], [8, 3, 1, "", "get_network_with_node_controls"], [8, 3, 1, "", "get_source_nodes"], [8, 3, 1, "", "get_steady_states_asynchronous"], [8, 3, 1, "", "get_steady_states_asynchronous_given_one_initial_condition"], [8, 3, 1, "", "get_types_of_regulation"], [8, 3, 1, "", "remove_constants"], [8, 3, 1, "", "simplify_functions"], [8, 3, 1, "", "to_bnet"], [8, 3, 1, "", "to_cana"], [8, 3, 1, "", "to_truth_table"], [8, 3, 1, "", "update_network_SDDS"], [8, 3, 1, "", "update_network_synchronously"], [8, 3, 1, "", "update_network_synchronously_many_times"], [8, 3, 1, "", "update_single_node"]], "boolforge.boolean_network.WiringDiagram": [[8, 4, 1, "", "__weakref__"], [8, 3, 1, "", "from_DiGraph"], [8, 3, 1, "", "generate_networkx_graph"], [8, 3, 1, "", "generate_networkx_graph_from_edges"], [8, 3, 1, "", "get_constants"], [8, 3, 1, "", "get_ffls"], [8, 3, 1, "", "get_modular_structure"], [8, 3, 1, "", "get_outdegrees"], [8, 3, 1, "", "get_strongly_connected_components"], [8, 3, 1, "", "get_type_of_loop"]], "boolforge.generate": [[10, 1, 1, "", "random_NCF"], [10, 1, 1, "", "random_degenerate_function"], [10, 1, 1, "", "random_degrees"], [10, 1, 1, "", "random_edge_list"], [10, 1, 1, "", "random_function"], [10, 1, 1, "", "random_function_with_bias"], [10, 1, 1, "", "random_function_with_exact_hamming_weight"], [10, 1, 1, "", "random_k_canalizing_function"], [10, 1, 1, "", "random_k_canalizing_function_with_specific_layer_structure"], [10, 1, 1, "", "random_linear_function"], [10, 1, 1, "", "random_nested_canalizing_function"], [10, 1, 1, "", "random_network"], [10, 1, 1, "", "random_non_canalizing_function"], [10, 1, 1, "", "random_non_canalizing_non_degenerate_function"], [10, 1, 1, "", "random_non_degenerate_function"], [10, 1, 1, "", "random_null_model"], [10, 1, 1, "", "random_wiring_diagram"], [10, 1, 1, "", "rewire_wiring_diagram"]], "boolforge.utils": [[14, 1, 1, "", "bin2dec"], [14, 1, 1, "", "bool_to_poly"], [14, 1, 1, "", "check_if_empty"], [14, 1, 1, "", "dec2bin"], [14, 1, 1, "", "f_from_expression"], [14, 1, 1, "", "find_all_indices"], [14, 1, 1, "", "flatten"], [14, 1, 1, "", "get_layer_structure_of_an_NCF_given_its_Hamming_weight"], [14, 1, 1, "", "is_list_or_array_of_floats"], [14, 1, 1, "", "is_list_or_array_of_ints"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute"}, "terms": {"": [1, 2, 3, 4, 7, 8, 10], "0": [0, 1, 2, 3, 4, 5, 7, 8, 10, 14], "00": 4, "000": 4, "001": [3, 10], "0036": 3, "004486541652542627": 1, "0046": 3, "005": 4, "009": 4, "01": 4, "012": 4, "02": 4, "023009": 8, "029": 4, "03": 7, "033": 4, "05": 4, "06": 2, "0625": 4, "08": 8, "09": [10, 14], "094": 4, "1": [1, 2, 3, 4, 5, 7, 8, 10, 11, 13, 14], "10": [0, 3, 10], "100": 4, "1000": [4, 8, 10], "10000": [3, 7], "102475": 7, "1046": 7, "105": 4, "11": [0, 4, 6, 7, 8], "110630": [7, 10], "111": 3, "117": 4, "118": 4, "119": 4, "12": [0, 1, 7, 10], "120": 4, "1214": 2, "122": 4, "123": 4, "124": 4, "125": 4, "1276": 2, "13": [0, 1, 4, 8], "1305": 2, "1309": 2, "137": 3, "14": 0, "145": 7, "146": [7, 10], "15": [4, 10], "157": 3, "16": [2, 3, 14], "16556667": 2, "16646667": 2, "16666666666666666": 2, "167": 3, "179": 4, "18": 1, "1875": 4, "19": 1, "1986": 8, "1990": 5, "1997": 5, "2": [0, 2, 3, 4, 5, 7, 8, 10, 11, 13, 14], "200": 4, "2007": 2, "2010": 5, "2013": 7, "2016": [2, 7, 10], "2017": [4, 10, 14], "2018": 7, "2021": [2, 4], "2022": [7, 10], "2023": [2, 4, 5, 7, 8], "2024": [4, 10], "2025": [6, 7, 8, 10, 14], "21": 4, "210": 4, "22": 6, "23": 1, "24": [6, 8], "2441": 2, "2445": 2, "25": [1, 2, 3, 4, 10, 14], "2502": 2, "2511": 2, "269": 4, "28": 4, "29": [10, 14], "294": 2, "296": 2, "2n": 8, "3": [0, 1, 3, 4, 5, 7, 10, 11, 12, 13], "3000": 4, "31": 4, "3125": 4, "314": [7, 10], "32": 2, "33": 2, "34": 0, "353": [10, 14], "375": 2, "39": [0, 1, 2, 3, 5, 10, 14], "3984": 4, "4": [0, 2, 4, 5, 7, 10, 11, 13], "40": [2, 10, 14], "41": 2, "41666666666666663": 2, "4166666666666667": [1, 2], "42": 3, "43": 2, "4375": 4, "44": 8, "45": 8, "4657": 4, "47": [10, 14], "4791666666666667": 2, "48": 6, "49": 7, "4974": 2, "49751200000000007": 1, "4th": 5, "5": [0, 1, 2, 3, 5, 7, 10, 11, 13], "50": [2, 3, 8], "500": [1, 8], "501072": 1, "5033": 4, "5036": 2, "52": 2, "5208333333333334": 2, "536": 2, "54": 2, "5555555555555556": 2, "5625": [2, 4], "5833": 4, "5833333333333334": 2, "5938": 4, "596": 4, "5993": 4, "6": [0, 4, 7, 10, 11, 13], "6094": 4, "61": 2, "625": 2, "626": 4, "63": 0, "6369": 4, "65": 2, "67": 10, "6875": 4, "7": [4, 5, 7, 10], "7266": 4, "74": 3, "75": [1, 2, 3, 4], "7525": 2, "7705": 4, "7708": 4, "790": 4, "8": [0, 4, 7, 10, 12], "8021": 4, "8125": [2, 4], "821": 4, "8333333333333334": 3, "85": 4, "875": 2, "9": [0, 4, 7], "91": 3, "9375": 4, "950": 4, "952": 4, "967": 2, "999": 10, "A": [0, 1, 2, 5, 7, 8, 10, 14], "AND": [0, 6, 7, 8, 14], "And": 7, "As": [2, 3, 5, 8], "By": [0, 1, 3], "For": [0, 1, 2, 3, 4, 7, 8, 10], "If": [2, 3, 4, 5, 6, 7, 8, 10, 12, 14], "In": [0, 1, 2, 3, 4, 5, 8, 10], "It": [2, 3, 5, 7, 8, 12], "NOT": [0, 6, 7, 8, 14], "No": 10, "Not": 7, "ON": 5, "OR": [0, 6, 7, 8], "On": [0, 1, 3], "One": [7, 10], "Or": 7, "Such": 10, "That": [1, 5, 7], "The": [0, 1, 2, 3, 4, 5, 7, 8, 10, 11, 14], "Their": 3, "Then": 10, "There": 14, "These": 3, "To": [1, 2, 3, 4, 5, 10, 12], "With": 5, "_": [3, 4], "__add__": [7, 9], "__and__": [7, 9], "__call__": [7, 8, 9], "__invert__": [7, 9], "__mul__": [7, 9], "__or__": [7, 9], "__repr__": [7, 9], "__rmul__": [7, 9], "__str__": [7, 8, 9], "__weakref__": [8, 9], "__xor__": [7, 9], "_coerce_rng": [7, 8, 10], "ab": 4, "abil": 4, "abl": 12, "about": [2, 3, 7, 8, 12], "abov": [0, 1, 2, 3, 4, 5, 10], "abs_bia": 10, "absenc": 5, "absolut": [0, 3, 4, 7, 10], "absolute_bia": [3, 10], "abund": 4, "acceler": [7, 8], "accord": 10, "act": 3, "activ": [2, 3, 7, 8, 13], "activt": 1, "actual": [3, 10], "acycl": [5, 8], "ad": 8, "add": 4, "add_edges_from": 8, "addit": [0, 3, 5, 7, 8, 10], "adj": 10, "adjac": [5, 10], "advanc": [2, 4, 7, 11, 13], "affect": 10, "after": [2, 7, 8, 10], "al": [2, 4, 5], "albert": 8, "algorithm": [7, 10], "alia": 10, "all": [1, 2, 3, 4, 5, 7, 8, 10, 14], "all_funct": 2, "all_possible_absolute_bias": 4, "all_possible_hamming_weight": 4, "allow": [5, 6, 8, 10, 13], "allow_degenerate_funct": [1, 4, 10], "allow_degenerated_funct": 3, "almost": [1, 2], "alon": 4, "along": 8, "alreadi": [2, 12], "also": [0, 1, 2, 3, 4, 5, 8], "although": 3, "alwai": [1, 3, 5, 7], "am": 2, "among": [1, 4, 8], "an": [0, 1, 2, 3, 4, 5, 7, 8, 10, 14], "analysi": 4, "analyz": [11, 13], "ani": [0, 2, 3, 4, 5, 7], "anneal": 8, "anoth": [2, 8], "anywai": 1, "apart": 3, "api": 6, "appear": 2, "append": [2, 4], "appli": [2, 4, 7, 8, 10], "applic": [7, 10], "approach": 8, "approxim": [4, 8], "ar": [0, 1, 2, 3, 4, 5, 7, 8, 10, 12], "arang": [3, 4], "arg": 3, "argument": [3, 5, 7, 8, 10], "ari": 5, "ariti": 10, "arr": 14, "arrai": [0, 1, 7, 8, 10, 14], "arrow": 5, "artifici": 5, "arxiv": 8, "as_dict": 8, "as_polynomi": 8, "ask": 10, "assembl": 10, "assertionerror": 10, "assess": 4, "assign": [6, 8, 10], "assum": 8, "astyp": 4, "asynchron": [5, 8], "at_least_one_regulator_per_nod": 10, "attempt": [8, 10], "attract": 8, "attractor": 8, "attractorcoher": 8, "attractordict": 8, "attractorfragil": 8, "attribut": [8, 13], "attributeerror": 0, "aug": [7, 8], "author": [6, 7, 8, 10, 14], "automat": [7, 8], "automata": [7, 8], "automatica": [7, 10], "avail": 0, "averag": [1, 2, 3, 4, 5, 7, 8], "average_sensitivit": 4, "average_swaps_per_edg": 10, "avoid": 10, "awai": 10, "ax": [2, 3, 4], "axi": 4, "b": [0, 1, 2, 7, 8, 10, 14], "bake": 8, "balanc": 7, "bar": [2, 3, 4], "base": [4, 7, 8], "base_gap": 4, "basic": [2, 4, 5, 13], "basin": 8, "basin_s": 8, "basincoher": 8, "basincoherenceapproxim": 8, "basinfragil": 8, "basinfragilityapproxim": 8, "basins": 8, "bassler": 2, "bavisetti": 8, "bbox_to_anchor": 4, "becaus": [0, 3, 5], "becom": [0, 4, 8], "been": [5, 8], "befor": [3, 8, 10], "begin": [2, 5], "behavior": [4, 10], "being": 7, "below": 3, "benjamin": [7, 8, 10, 14], "best": [3, 4], "better": 10, "betweeen": 4, "between": [0, 1, 3, 5, 8, 13, 14], "bia": [0, 3, 7, 8, 10, 13], "bias": [4, 10, 13], "bias_valu": 4, "biject": [4, 14], "bimod": 3, "bin": 2, "bin2dec": [8, 9, 14], "binari": [0, 5, 8, 14], "binary_vector": [2, 14], "bio": [9, 11], "bio_model": 6, "biodivin": 6, "biolog": [1, 2, 5, 10], "biologi": [5, 10], "bit": [1, 7, 14], "block": 3, "bn": [5, 6, 10], "bn0": 10, "bn2": 10, "bn3": 10, "bn4": 10, "bnet": 8, "bodi": [4, 7], "bookkeep": 8, "bool": [6, 7, 8, 10, 14], "bool_to_poli": [9, 14], "boolean": [2, 4, 6, 9, 10, 11, 12, 13, 14], "boolean_funct": 7, "boolean_network": 8, "boolean_nod": [0, 7], "booleanfunct": [1, 2, 5, 7, 8, 9, 10, 13], "booleannetwork": [5, 6, 8, 9, 10], "booleannod": [0, 7], "boolforg": [6, 7, 8, 10, 11, 12, 13, 14], "bossomai": 5, "both": [2, 3, 4, 5, 10, 12], "bottom": 4, "bound": [8, 10], "branch": 10, "broadcast": 10, "brute": 2, "built": [5, 10], "byte": 6, "c": [0, 1, 4, 7, 8, 10, 12, 14], "c0": 4, "c1": 4, "c_": 4, "calcul": [7, 8], "call": [0, 2, 3, 7, 10], "can": [0, 1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 14], "can_output": 7, "cana": [0, 2, 7, 8, 12], "cana_booleannetwork": 8, "cana_booleannod": 7, "cana_object": 0, "canal": [7, 10, 11, 13, 14], "canalizedoutput": [2, 7], "canalizing_depth": [2, 4], "canalizing_info": [2, 3], "canalizing_strength": [2, 4], "canalizingdepth": 7, "canalizinginput": [2, 7], "cannot": [2, 3, 10], "cap": 10, "care": 3, "carlo": [1, 7], "case": [1, 2, 5, 10, 11, 13], "cdot": [2, 3], "cell": [0, 8], "center": 4, "certain": 0, "certainli": 1, "chanc": 10, "chang": [1, 4, 7, 8], "chao": 8, "charact": 7, "check": [0, 1, 2, 3, 7, 14], "check_if_empti": [9, 14], "choos": 10, "chosen": [7, 8, 10], "ckadelka": [6, 11, 12], "class": [0, 1, 5, 7, 8], "classic": 10, "classmethod": [7, 8], "clau": [7, 8, 10, 14], "clear": 4, "clip": 10, "close": 10, "cmean": 4, "coberli": [7, 8, 10, 14], "code": [0, 2, 3, 5, 11], "coher": 8, "coherenceapproxim": 8, "collect": [0, 7, 8, 13], "color": 4, "colors_us": 4, "column": [4, 7], "com": [11, 12], "combin": [7, 8], "common": [5, 8], "commonli": 12, "compar": [1, 3], "comparison": 14, "compat": [7, 8, 11], "compil": 8, "complet": 10, "complic": 0, "compon": [5, 8, 10], "compos": 7, "comput": [0, 1, 2, 3, 4, 5, 7, 8, 10, 14], "computation": 1, "compute_synchronous_state_transition_graph": [8, 9], "concentr": 5, "concept": [2, 3, 4, 11, 13], "condit": [0, 7, 8], "condition": [2, 3, 4, 7, 10], "conf": 5, "configur": 10, "confirm": 4, "connect": [5, 8, 10], "consid": [2, 8, 12], "consist": 5, "constant": [0, 2, 3, 5, 7, 8, 10], "constitut": [2, 5], "constraint": [3, 10], "construct": [8, 10], "constructor": [7, 8], "contain": [0, 2, 3, 5, 6, 7, 8, 10, 14], "content": 6, "contrari": [0, 3], "control": [5, 7, 8, 10], "control_sourc": 8, "control_target": 8, "convent": 10, "converg": 8, "convert": [7, 8, 12, 13, 14], "core": [2, 3, 7, 10], "corefunct": [2, 3, 7], "correctli": 3, "correia": 7, "correl": 13, "correspond": [2, 7, 8, 10], "costa": 8, "could": 6, "count": [2, 5, 7, 8], "count_can": 4, "count_canalizing_depth": 4, "count_degener": 4, "count_essential_vari": 3, "count_hamming_weight": 3, "creat": [3, 4, 6, 7, 8, 10, 13, 14], "csv": [7, 8], "curat": 6, "current": [5, 8], "current_x": 4, "cycl": 8, "d": [2, 4, 5, 7, 10, 14], "dag": [5, 8], "dai": 2, "data": [0, 4, 12], "datafram": [4, 7, 8], "debug": 8, "dec2bin": [9, 14], "decim": 8, "decompos": [2, 5, 7], "decomposit": 13, "decreas": [0, 4, 8], "def": 10, "default": [0, 1, 3, 4, 5, 6, 7, 8, 10, 14], "defin": [0, 1, 2, 5, 7, 8, 13], "definit": [2, 4], "degener": [0, 2, 4, 10, 13], "degeneraci": [1, 3, 10], "degrad": 8, "degre": [0, 1, 2, 3, 5, 6, 7, 10, 13], "delta": 10, "depend": [1, 3, 4, 5, 10, 12], "depth": [2, 3, 4, 7, 8, 10], "depth_handl": 4, "deriv": 8, "derrida": [7, 8], "describ": [0, 1, 2, 3, 5, 8, 10, 14], "descript": 0, "desir": [3, 7], "detail": [8, 10], "determin": [0, 2, 4, 7, 8, 10, 14], "determinist": [5, 8], "develop": 12, "deviat": [1, 7, 10], "diagram": [8, 10, 13], "dict": [0, 7, 8], "dictionari": [7, 8], "did": 5, "differ": [0, 1, 2, 3, 5, 8, 10, 13], "digit": 14, "digraph": [5, 8, 10], "dimens": 14, "dimitrova": [7, 10], "dirac": 10, "direct": [5, 6, 8, 10], "directli": [2, 10], "disallow": 10, "disjunct": 14, "displai": [3, 7], "display_truth_t": [0, 1, 2, 3, 7, 9], "distanc": [8, 10], "distinct": [7, 10], "distribut": [2, 3, 4, 7, 8, 10], "divid": 7, "divis": 1, "dnf": [7, 14], "do": [3, 12], "do_not_add_self_regul": 10, "document": 11, "doe": [1, 3, 4, 7, 8], "doubl": 10, "download": [6, 12], "download_url": 6, "downsteam": 5, "draw": 10, "draw_networkx": 5, "drawn": [2, 10], "drosophila": 7, "dtype": [3, 4, 8], "due": 4, "duplic": 10, "dure": 8, "dynam": [4, 5, 7], "e": [0, 1, 2, 3, 4, 5, 7, 8, 10, 14], "e55946": 7, "e_i": 1, "each": [0, 2, 3, 4, 5, 7, 8, 10, 14], "easili": 4, "edg": [2, 3, 5, 7, 8, 10], "edge_effect": 2, "effect": [2, 3, 4, 5, 7, 10, 14], "effective_degre": [2, 4], "effici": 5, "either": [3, 8, 10], "el": 14, "element": [5, 7, 8, 10, 14], "els": [4, 8, 10], "elus": 4, "emph": 5, "empir": 3, "empti": [8, 14], "enabl": [3, 4], "encod": 5, "encount": [8, 14], "end": [2, 8], "enforc": 10, "enjoi": 2, "enrich": 2, "ensur": [1, 3, 4, 10], "ensurepip": 12, "entir": [0, 2, 5, 8], "entri": [8, 10], "entropi": 8, "enumer": [1, 2, 3, 4, 7, 10], "equal": [0, 2, 3, 5, 8, 10, 14], "equat": 5, "equival": [1, 2, 7, 8, 14], "erron": 3, "error": [3, 10], "espresso": 7, "essenti": [0, 1, 3, 4, 5, 7, 8, 10], "establish": 5, "estim": [7, 8], "et": [2, 4, 5], "etc": [3, 5, 7, 8, 10], "eur": 5, "europhys": 8, "evalu": [2, 3, 7, 8, 14], "even": [1, 3], "ever": 1, "everi": [0, 7, 10], "exact": [1, 2, 3, 4, 7, 8, 10, 14], "exact_depth": [3, 4, 10], "exactli": [0, 2, 3, 4, 8, 10], "exactnumberofattractor": 8, "exampl": [0, 1, 2, 3, 5, 7, 8, 10, 11, 13, 14], "exce": 10, "exceed": 8, "excel": 8, "except": 2, "excess": 2, "exclud": [8, 10], "exemplifi": [2, 3, 5], "exhaust": 7, "exhibit": 2, "exist": [2, 4, 7, 10, 14], "expect": [1, 3], "expected_proport": 3, "expens": 1, "expert": 6, "explor": [0, 2, 5, 8, 13], "export": 8, "expr": 14, "express": [7, 8, 10, 13, 14], "extend": [2, 4, 7, 11], "extens": [7, 8], "extract": [8, 14], "extrem": 10, "f": [0, 1, 2, 3, 4, 5, 7, 8, 10, 14], "f1": 7, "f2": [0, 7], "f3": 0, "f_1": 5, "f_and": 0, "f_from_express": [7, 9, 14], "f_i": 5, "f_j": 5, "f_linear": 3, "f_n": 5, "f_random_non_degener": 3, "facilit": 5, "fail": 6, "failed_download_url": 6, "fairli": [0, 2], "fals": [0, 1, 2, 3, 4, 6, 7, 8, 10, 14], "famili": 3, "familiar": [3, 4], "far": [4, 7, 8], "fast": 8, "feed": [5, 8], "feedback": [5, 8], "fetch_fil": [6, 9], "fetch_file_byt": [6, 9], "few": [2, 4, 5], "ffl": 8, "fig": [2, 3, 4], "figsiz": 4, "file": [0, 6, 7, 8], "file_download_url": 6, "file_nam": 6, "filenam": [7, 8], "final": 8, "finalhammingdistanceapproxim": 8, "find": [1, 4, 8], "find_all_indic": [9, 14], "first": [0, 1, 3, 4, 6, 8, 10, 14], "five": 0, "fix": [2, 3, 7, 8, 10], "fix_self_regul": 10, "fixed_in_and_outdegre": 10, "fixed_indegre": 10, "flag": 10, "flatten": [9, 14], "flexibl": [3, 10], "flip": [1, 7], "float": [7, 8, 10, 14], "focu": [2, 3, 4, 11], "folder": 6, "follow": [2, 7, 10], "forbid": 10, "forc": [2, 7, 10], "form": [0, 2, 7, 8, 14], "format": [0, 7, 8, 14], "former": 5, "formula": 8, "forward": [5, 8, 10], "found": [5, 7, 8, 10, 11], "foundat": [0, 1], "four": 2, "frac": 1, "fragil": 8, "fragilityapproxim": 8, "frameon": [3, 4], "framework": 5, "frequent": [3, 5], "fresh": 10, "fri": 6, "from": [1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14], "from_cana": [7, 8, 9], "from_digraph": [8, 9], "from_str": [8, 9], "frontier": 7, "full": [7, 8, 10], "fulli": [1, 10], "func": [1, 2, 3], "function": [2, 5, 8, 9, 10, 11, 13, 14], "further": [1, 4, 5], "g": [0, 1, 2, 3, 5, 7, 8, 10], "gap": 4, "gate": [2, 4, 7], "gene": [4, 5], "gener": [0, 1, 5, 7, 8, 9, 11, 13], "generate_networkx_graph": [5, 8, 9], "generate_networkx_graph_from_edg": [8, 9], "geq": [0, 2, 3, 4], "get": 10, "get_absolute_bia": [0, 7, 9], "get_act": [1, 2, 3, 7, 9], "get_attractors_and_robustness_measures_synchron": [8, 9], "get_attractors_and_robustness_measures_synchronous_exact": [8, 9], "get_attractors_synchron": [8, 9], "get_attractors_synchronous_exact": [8, 9], "get_average_sensit": [1, 2, 3, 4, 7, 9], "get_bio_models_from_repositori": [6, 9], "get_canalizing_depth": [2, 3, 4, 7, 9], "get_canalizing_strength": [2, 3, 4, 7, 9], "get_canalizing_strength_of_vari": [7, 9], "get_const": [8, 9], "get_content_in_remote_fold": [6, 9], "get_derrida_valu": [8, 9], "get_edge_effect": [2, 3, 7, 9], "get_effective_degre": [2, 4, 7, 9], "get_entropy_of_basin_size_distribut": [8, 9], "get_essential_vari": [0, 7, 9], "get_ffl": [8, 9], "get_hamming_weight": [0, 3, 7, 9], "get_input_redund": [2, 4, 7, 9], "get_kset_canalizing_proport": [2, 7, 9], "get_kset_canalizing_proportion_of_vari": [7, 9], "get_layer_structur": [2, 3, 7, 9], "get_layer_structure_from_canalized_output": [7, 9], "get_layer_structure_of_an_ncf_given_its_hamming_weight": [4, 9, 14], "get_left_side_of_truth_t": 2, "get_modular_structur": [5, 8, 9], "get_network_with_edge_control": [8, 9], "get_network_with_fixed_source_nod": [8, 9], "get_network_with_node_control": [8, 9], "get_number_of_essential_vari": [3, 7, 9], "get_outdegre": [8, 9], "get_source_nod": [8, 9], "get_steady_states_asynchron": [8, 9], "get_steady_states_asynchronous_given_one_initial_condit": [8, 9], "get_strongly_connected_compon": [5, 8, 9], "get_symmetry_group": [1, 7, 9], "get_type_of_input": [0, 7, 9], "get_type_of_loop": [8, 9], "get_types_of_regul": [8, 9], "git": 12, "github": [6, 11, 12], "give": 10, "given": [1, 2, 3, 4, 5, 7, 8, 10, 14], "global": 8, "goe": 3, "govern": 4, "graph": [5, 8, 10], "group": [2, 4, 7, 13], "group_cent": 4, "group_posit": 4, "group_width": 4, "gt": 0, "guarante": [8, 10], "h": [0, 1, 2, 3, 8], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 12, 14], "ham": [0, 4, 8, 10, 13, 14], "hamming_weight": [3, 4, 10], "hand": [1, 12, 14], "handl": [4, 10], "hard": 1, "hardli": [3, 4], "harvei": 5, "have": [0, 2, 3, 4, 5, 7, 10, 12, 14], "he": [2, 7, 10], "heavili": 2, "help": [0, 2], "here": [8, 10, 12], "high": [2, 5, 8, 10], "higher": 4, "highest": 2, "highli": [2, 3, 4, 10], "hist": 2, "histogram": 3, "hold": [7, 14], "how": [0, 1, 2, 3, 4, 5, 7, 8, 10], "howev": [2, 4, 12], "http": [11, 12], "hybrid": 8, "hypercub": 8, "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14], "idea": 2, "identif": 5, "identifi": [2, 5, 6, 7, 8], "ignor": [3, 8, 10, 14], "ignore_first_lin": 6, "ii": [1, 4, 10], "implement": [4, 5, 7, 8, 10], "impli": [5, 8, 10], "import": [0, 1, 2, 3, 4, 5, 8, 12], "includ": [0, 3, 7, 8, 10, 12, 14], "incom": [5, 10], "increas": [0, 4, 8], "indegre": [5, 8, 10], "indegree_distribut": 10, "independ": [10, 12], "index": [4, 8, 11], "indic": [0, 5, 7, 8, 10, 14], "indices_controlled_nod": 8, "individu": 2, "influenc": [7, 8, 10, 14], "inform": [2, 5, 7, 8], "inherit": [5, 8], "initi": 8, "initial_condit": 8, "initial_sample_point": 8, "initial_sample_points_as_binary_vector": 8, "initialsamplepoint": 8, "inner": [2, 7, 10], "inop": 8, "input": [0, 1, 3, 4, 5, 7, 8, 10, 13, 14], "input_redund": [2, 4], "insist": 10, "inspect": 0, "instal": [0, 2, 7, 8, 11], "instanc": [0, 5, 7, 8], "instead": [2, 3], "int": [0, 3, 4, 6, 7, 8, 10, 14], "integ": [5, 8, 10, 14], "integer_valu": 14, "integr": 12, "interact": 5, "interchang": 1, "interfac": 5, "intermedi": [5, 8], "interpret": [8, 10], "interv": 7, "intra_gap": 4, "introduc": [2, 10], "invalid": 10, "invert": 8, "investig": [1, 4], "irrespect": [2, 4, 7], "is_can": [2, 4, 7, 9], "is_const": [0, 7, 9], "is_degener": [0, 2, 3, 4, 7, 9], "is_k_can": [2, 7, 9], "is_kset_can": [7, 9], "is_list_or_array_of_float": [9, 14], "is_list_or_array_of_int": [9, 14], "is_monoton": [7, 9], "iter": [4, 7, 8], "ith": [1, 5, 8], "its": [0, 1, 2, 3, 4, 7, 8, 10, 14], "itself": [2, 7, 8, 10], "j": [4, 7, 8, 10, 14], "jcrozum": 6, "journal": [2, 5], "jul": [10, 14], "just": 10, "k": [0, 2, 3, 4, 7, 8, 10], "k1": 10, "k_1": [2, 3, 10, 14], "k_i": [2, 3, 10, 14], "k_r": [2, 3, 10, 14], "kadelka": [2, 4, 5, 7, 8, 10, 14], "kauffman": 10, "keep": [7, 10], "keep_controlled_nod": 8, "kei": [2, 8], "keilti": 7, "kept": 10, "kernel": 8, "know": 2, "knowledg": 2, "known": [2, 3, 5], "kr": 10, "kuiper": [10, 14], "kwarg": 10, "l": [7, 8, 14], "label": [0, 1, 2, 3, 4, 7, 8], "lack": 3, "lambda": 10, "landscap": 8, "larg": [1, 3, 10], "larger": 10, "last": [0, 1, 3, 10, 14], "later": [2, 4, 5, 10], "laubenbach": [7, 10, 14], "layer": [3, 7, 10, 13, 14], "layer_structur": [3, 4, 10], "layer_structure_ncf": 14, "layerstructur": [2, 3, 7], "ldot": [0, 1, 2, 3, 5], "learn": [0, 1, 2, 3, 4, 5, 12], "least": [2, 3, 5, 7, 10], "leav": 1, "left": 0, "legend": [3, 4], "len": [4, 8, 10], "length": [0, 5, 7, 8, 10, 14], "leq": [2, 3], "less": [2, 4], "let": [4, 10], "letter": 8, "level": 2, "librari": 5, "lie": 10, "life": [5, 8], "like": [2, 4, 10, 14], "likewis": [2, 3], "line": [0, 4, 6], "line2d": 4, "linear": [0, 1, 10, 13, 14], "link": 4, "linspac": 4, "linux": 11, "list": [4, 5, 6, 7, 8, 10, 14], "load": 6, "load_model": [6, 9], "loc": [3, 4], "log": 8, "logic": [6, 7, 8, 10, 13], "longer": [8, 10], "loop": [5, 8, 10], "low": [3, 4, 5, 10], "lower": 8, "lowerboundofnumberofattractor": 8, "lt": 0, "lw": 4, "m": [7, 8, 10, 12], "m_i": 8, "mac": 11, "macaulei": [2, 7, 10], "made": 11, "mai": [3, 5, 8, 10], "make": [3, 4, 12], "malform": 10, "mani": [1, 7, 8], "map": [4, 8, 10], "marqu": 7, "master": 8, "match": [10, 14], "mathbf": [1, 5], "mathemat": [2, 4, 7], "matplotlib": [2, 3, 4], "matrix": [5, 8, 10], "max": [4, 10], "max_degre": [6, 8, 14], "max_depth": 4, "maxim": [2, 7], "maximum": [6, 8, 10], "mean": [1, 3, 5, 10], "meaning": 2, "measur": [7, 8, 13], "melanogast": 7, "member": [7, 8], "method": [5, 7, 8, 12], "metric": 4, "midpoint": 4, "min": 10, "mind": 5, "minim": [3, 4, 7, 10], "minimize_express": 7, "minimum": [5, 10], "minu": 2, "minut": 2, "miss": 3, "mix": 10, "mode": 3, "model": [4, 5, 8, 9, 10, 11], "modifi": [3, 8], "modul": [5, 7, 8], "modular": [1, 5, 8], "modulo": [7, 10], "monomi": [2, 7], "monoton": [4, 7], "mont": [1, 7], "more": [0, 1, 2, 3, 4, 7, 10, 12], "most": [0, 2, 4, 5, 10], "motif": 5, "much": [3, 4, 7, 8], "multi": 10, "multipl": [5, 7, 8], "murrugarra": [7, 10], "must": [2, 3, 5, 7, 8, 10, 12, 14], "my_list": 14, "n": [0, 1, 2, 3, 4, 5, 7, 8, 10, 14], "n_attempts_to_generate_strongly_connected_network": 10, "n_constant": [5, 8], "n_function": 4, "n_i": 8, "n_step": [4, 8], "n_steps_timeout": 8, "n_variabl": [5, 8], "n_viol": 4, "name": [0, 2, 5, 6, 7, 8, 14], "nan": 8, "natur": [2, 4], "nb": 8, "ncf": 14, "ncol": 4, "ndarrai": [7, 8, 10, 14], "necessari": 7, "need": [2, 3, 7], "neg": 7, "negat": [6, 7, 10], "neighbor": 8, "neither": 10, "neq": [1, 2], "nest": [2, 3, 4, 7, 10, 14], "nested_can": 2, "network": [0, 2, 4, 6, 7, 9, 10, 11, 12, 13, 14], "network_str": 8, "networkx": [5, 8], "never": [3, 10], "new": [8, 10], "next": [1, 5, 7, 8], "nextstep": 8, "nk": 10, "no_self_regul": 10, "node": [5, 6, 7, 8, 10], "non": [0, 1, 2, 3, 4, 7, 8, 10, 14], "none": [1, 6, 7, 8, 10, 14], "nonlinear": [7, 10, 14], "nontrivi": 10, "normal": [1, 2, 3, 4, 7, 8, 14], "note": [2, 3, 5, 7, 8, 10], "noth": 7, "notic": [3, 4], "now": 12, "np": [0, 1, 2, 3, 4, 5, 7, 8, 10, 14], "npj": 10, "nsim": [1, 3, 4, 7, 8], "null": 10, "num_bit": 14, "numba": [7, 8], "number": [0, 2, 3, 4, 5, 7, 8, 10, 14], "number_different_": 8, "number_of_lay": 4, "numberofattractor": 8, "numberoflay": [2, 3, 7], "numberofsteadyst": 8, "numberoftimeout": 8, "numer": 8, "numpi": [0, 1, 2, 3, 4, 5, 7, 14], "nx": [5, 8, 10], "nx_digraph": 8, "o": 11, "object": [0, 7, 8, 10], "observ": 3, "obtain": 8, "obviou": [2, 4], "occur": [0, 3], "occurr": 14, "od": 10, "odd": 14, "off": 5, "offset": 4, "often": [1, 5, 10], "one": [2, 3, 4, 5, 7, 8, 10], "ones": 10, "onli": [1, 2, 3, 5, 7, 8, 10], "onlin": 6, "openpyxl": 8, "oper": [6, 7, 14], "oplu": 1, "optim": 8, "option": [0, 3, 5, 6, 7, 8, 10, 14], "order": [0, 2, 5, 7, 8, 10, 14], "orderofcanalizingvari": [2, 7], "origin": [8, 10], "original_and": [6, 8], "original_not": [6, 8], "original_or": [6, 8], "other": [0, 1, 2, 3, 4, 5, 7, 10, 12], "otherwis": [7, 8, 10, 14], "out": [8, 10], "outdeg": 10, "outdegre": [5, 8], "outer": 2, "outgo": [5, 10], "output": [1, 2, 5, 7, 8, 10], "over": [4, 7, 8, 10], "overal": 8, "overrid": 8, "p": [3, 4, 8], "p_": 2, "p_i": 8, "p_k": 2, "packag": [0, 2, 7, 8, 11, 12], "panda": [4, 7, 8], "parallel": 10, "paramet": [3, 6, 7, 8, 10, 14], "parametr": 4, "paramt": 14, "pariti": [0, 1, 2, 3, 7], "park": 8, "pars": 6, "part": [1, 2, 8], "partial": [1, 5], "particular": 8, "pass": [8, 10], "path": 8, "patten": 5, "pattern": 4, "pd": [4, 7, 8], "per": [2, 5, 8, 10], "perfect": 4, "perform": [5, 8, 10], "permiss": 3, "permut": [1, 8], "perturb": [4, 8], "phenomena": [7, 10, 14], "physic": 2, "physica": [2, 4, 7, 10, 14], "physiologi": 7, "pip": [2, 12], "pita": 7, "plain": 6, "plethora": 4, "plo": 7, "plot": [3, 4, 5], "plt": [2, 3, 4], "pna": [2, 4], "point": [5, 6, 8, 14], "poisson": 10, "polynomi": [7, 8, 13, 14], "pomeau": 8, "pool": 10, "popular": 5, "posit": [0, 3, 4, 7, 10], "possess": 5, "possibl": [1, 2, 3, 4, 6], "possible_separ": 6, "possibli": [3, 10], "potenti": 5, "practic": 3, "preced": 10, "prefix": 14, "preprint": 8, "presenc": 5, "present": 10, "preserv": 10, "preserve_bia": 10, "preserve_canalizing_depth": 10, "preval": 13, "previou": [3, 4], "print": [0, 1, 2, 3, 5, 8], "prior": 12, "probabl": [1, 2, 3, 4, 5, 7, 8, 10], "proc": 5, "process": 8, "processor": 0, "properli": 7, "properti": [1, 2, 4, 5, 7, 10, 13], "proport": [2, 3, 4, 7, 8], "propos": 10, "protein": 5, "provid": [0, 3, 5, 7, 8, 10, 14], "prx": 8, "publish": 4, "py": 12, "pyboolnet": 12, "pyplot": [2, 3, 4], "pystablemotif": 6, "python": [0, 7, 8, 11], "q": [7, 10], "quantifi": [2, 7], "quantiti": 2, "queue": 8, "quickli": 4, "quit": 10, "r": [2, 7, 8, 10, 14], "rais": [10, 14], "random": [1, 2, 7, 8, 10, 11, 13], "random_degenerate_funct": [9, 10], "random_degenerated_funct": 3, "random_degre": [9, 10], "random_edge_list": [9, 10], "random_funct": [1, 3, 4, 9, 10], "random_function_with_bia": [9, 10], "random_function_with_exact_hamming_weight": [9, 10], "random_k_canalizing_funct": [9, 10], "random_k_canalizing_function_with_specific_layer_structur": [9, 10], "random_linear_funct": [9, 10], "random_ncf": [9, 10], "random_nested_canalizing_funct": [9, 10], "random_network": [9, 10], "random_non_canalizing_funct": [9, 10], "random_non_canalizing_non_degenerate_funct": [9, 10], "random_non_degenerate_funct": [9, 10], "random_null_model": [9, 10], "random_wiring_diagram": [9, 10], "randomli": [3, 7, 8, 10], "rang": [3, 4, 10, 14], "rate": 10, "rather": 2, "raw": 6, "re": 10, "reach": 8, "reachabl": 8, "read": 0, "readili": [0, 1], "real": 5, "receiv": [2, 10], "recent": [0, 2, 5], "recommend": [1, 3, 4, 12], "reconsid": 2, "recur": 5, "recurs": [2, 4, 7], "reduc": [7, 8, 10, 14], "redund": [1, 4, 7, 13], "refer": [5, 7, 8, 10, 14], "reg": 10, "regardless": 7, "regim": 4, "regul": [5, 7, 8, 10], "regulatori": [4, 5, 8], "reichhardt": 2, "reject": 10, "rel": 4, "relat": [2, 11, 13], "relationship": 4, "relev": 10, "remain": [7, 8, 10], "remind": 2, "remot": 6, "remov": [2, 7, 8, 12], "remove_const": [8, 9], "repeat": [3, 4, 8], "repeatedli": [3, 10], "repositori": 6, "repr": 7, "repres": [5, 7, 8, 10, 14], "represent": [8, 10, 14], "request": 10, "requir": [0, 1, 3, 4, 5, 7, 8, 10, 14], "required_length": 14, "rerun": 0, "resampl": 10, "respect": [2, 5], "respons": 8, "rest": 3, "restrict": [3, 8], "result": [2, 3, 7, 8, 10], "retri": 10, "retriev": 6, "return": [5, 6, 7, 8, 10, 14], "return_attractor_coher": 8, "reus": 10, "reveal": [1, 2, 4, 7, 10], "rewir": 10, "rewire_wiring_diagram": [9, 10], "right": [0, 14], "rng": [7, 8, 10], "robust": [1, 8, 10, 14], "rocha": [7, 8], "round": 4, "routin": 10, "row": [7, 8], "royal": 5, "rozum": 8, "rule": [2, 7, 10], "run": [2, 8, 12], "runtimeerror": 10, "saadatpour": 5, "same": [0, 1, 2, 3, 5, 7, 8, 10], "sampl": [3, 7, 8, 10], "satisfi": [3, 10], "save": 7, "scalar": 10, "scale": 5, "scatter": 4, "scc": [5, 8], "scheme": 5, "scienc": 4, "scratch": 5, "sdd": 8, "search": 8, "search_depth": 8, "second": [1, 2], "see": [0, 3, 4, 7, 10], "segment": 7, "select": [3, 6, 10], "self": [7, 8, 10], "sens": 3, "sensit": [2, 3, 4, 7, 13], "sep": 6, "separ": [5, 6, 8], "sequenc": [8, 10], "serv": 2, "set": [1, 2, 3, 5, 7, 8, 10], "set_alpha": 4, "set_color": 4, "set_facecolor": 4, "set_xlabel": [2, 3, 4], "set_xtick": [3, 4], "set_xticklabel": 4, "set_ylabel": [2, 3, 4], "set_ylim": 4, "setup": 4, "sever": 8, "shannon": 8, "shape": [8, 10], "sharex": 4, "shift": 3, "should": [7, 8, 12], "show": [1, 3, 7, 8], "showextrema": 4, "showmean": 4, "shown": [2, 4], "side": [0, 14], "similar": [2, 4, 8], "similarli": 4, "simpl": [0, 8], "simpli": [3, 4], "simplify_funct": [8, 9], "simul": [1, 2, 8], "simultan": [5, 10], "sinc": [0, 2, 3, 5, 10], "singl": [1, 2, 5, 8, 10], "size": [7, 8, 14], "skip": 6, "slightli": 3, "so": [2, 3, 7], "societi": 5, "sole": 8, "some": [0, 2, 4, 5, 10], "sort": 10, "sourc": [6, 7, 8, 10, 11, 14], "space": [3, 5, 7, 8], "spars": 5, "specif": [1, 2, 5, 7, 10, 13], "specifi": [0, 1, 3, 7, 8, 10], "stabil": 4, "stage": 10, "standard": [1, 2, 7], "start": [0, 8], "state": [5, 8], "states_regul": 8, "std": 1, "steadi": 8, "steady_states_asynchronous_given_one_": 8, "steadyst": 8, "step": 8, "stg": 8, "stgasynchron": 8, "stigler": [7, 10], "stochast": [5, 8], "stochastic_weight": 8, "store": [0, 8], "str": [0, 4, 6, 7, 8, 10, 14], "stratif": [7, 10], "stratifi": 4, "strength": [2, 3, 4, 7], "strictli": 3, "string": [7, 8, 14], "strong": 10, "stronger": 4, "strongli": [5, 8, 10], "strongly_connect": 10, "structur": [2, 3, 7, 8, 10, 13, 14], "studi": 3, "subarrai": 14, "subfunct": [2, 7], "subplot": [2, 3, 4], "subroutin": 10, "success": 10, "successful_download_url": 6, "successfulli": 6, "suffic": [2, 5], "sum": [1, 2, 4, 5, 7, 8, 10], "sum_": 1, "support": [7, 12], "surpris": 4, "swap": [7, 10], "swappabl": 10, "sybila": 6, "sychron": 8, "symmetr": 1, "symmetri": [0, 2, 7, 13], "symmetry_group": 1, "synchron": [5, 8], "system": [5, 10], "t": [4, 5, 8], "tabl": [3, 5, 7, 8, 10, 13, 14], "take": [2, 3, 8, 10], "taken": 10, "target": [8, 10], "tell": 2, "tend": 4, "text": [2, 3, 6, 13, 14], "than": [2, 4], "thei": [0, 1, 2, 8, 10, 14], "them": [8, 10], "theoret": 5, "theori": 13, "therefor": 10, "thi": [0, 1, 2, 3, 4, 5, 7, 8, 10, 12, 14], "thoma": 5, "those": [2, 8, 10], "three": [1, 3, 5], "threshold": [0, 14], "through": [3, 10], "thu": [1, 2, 3, 4], "time": [2, 5, 8], "titl": 4, "to_bnet": [8, 9], "to_cana": [0, 7, 8, 9], "to_log": [0, 7, 9], "to_polynomi": [0, 7, 9], "to_truth_t": [5, 7, 8, 9], "todo": 8, "togeth": 5, "toggl": 7, "total": [4, 7, 8, 10], "traceback": 0, "trajectori": 8, "transform": [7, 14], "transient": 8, "transienttim": 8, "transit": [5, 8], "treat": 0, "tri": 10, "triplet": 8, "true": [1, 2, 3, 4, 5, 6, 7, 8, 10, 14], "truncat": 10, "truth": [3, 5, 7, 8, 10, 13, 14], "truth_tabl": 8, "tue": [7, 10, 14], "tupl": [6, 7, 8, 10, 14], "turn": [0, 8], "tutori": 11, "two": [2, 3, 5, 7, 10], "type": [0, 4, 7, 8, 10, 14], "type_of_control": 8, "type_of_edge_control": 8, "types_i": 8, "typic": [5, 10], "u": [2, 4, 8, 10], "u2": 8, "unbias": [0, 3, 8, 10], "unchang": [1, 8, 10], "under": [3, 5, 8, 10], "underli": [5, 8], "understand": 0, "uniform": [8, 10], "uniformli": [2, 3, 10], "uninstal": 12, "uniqu": [2, 8], "unit": 1, "unless": [3, 10], "unord": 5, "until": [8, 10], "up": [5, 10], "updat": [2, 4, 5, 7, 8, 10], "update_network_sdd": [8, 9], "update_network_synchron": [8, 9], "update_network_synchronously_many_tim": [8, 9], "update_single_nod": [8, 9], "updatequeu": 8, "upgrad": 12, "upon": 5, "upper": [4, 10], "upstream": 5, "url": 6, "us": [2, 3, 5, 7, 8, 10, 11, 12, 13, 14], "use_absolute_bia": [3, 10], "util": [7, 8, 9, 10, 11], "v": [8, 10], "val": 4, "valid": 10, "valid_depth": 4, "valu": [1, 2, 3, 4, 7, 8, 10, 14], "valueerror": 14, "values_const": 8, "values_controlled_nod": 8, "values_source_nod": 8, "var": 14, "vari": 4, "variabl": [0, 1, 3, 4, 5, 7, 8, 10, 13, 14], "variant": [7, 8, 14], "variou": [0, 3, 4], "vector": [0, 1, 5, 7, 8, 10, 14], "veri": [1, 2, 4, 10], "verifi": 3, "versatil": 0, "version": [7, 8, 12], "via": [0, 5, 7, 10], "violat": 10, "violin": 4, "violinplot": 4, "violinplot_arg": 4, "vp": 4, "vpo": 4, "w": [3, 4, 5, 14], "wa": [0, 2], "wai": 7, "wang": 7, "want": 10, "wd": 8, "we": [0, 1, 2, 3, 4, 5], "weak": 8, "wealth": 3, "wed": 8, "weight": [0, 2, 4, 7, 8, 10, 13, 14], "well": [1, 4, 5, 8, 14], "were": 14, "wheeler": 8, "when": [0, 1, 4, 5, 7, 8, 10], "whenev": 3, "where": [0, 1, 2, 6, 7, 8, 10, 14], "wherea": 7, "whether": [2, 3, 7, 8, 10], "which": [0, 1, 2, 3, 4, 5, 7, 8, 10], "while": [0, 1, 3, 4, 5, 7, 10], "who": 5, "whose": [8, 10], "width": [3, 4], "window": 11, "wire": [8, 10, 13], "wiring_diagram": 10, "wiringdiagram": [5, 8, 9, 10], "wise": 7, "with_label": 5, "within": [2, 4, 8, 10], "without": [0, 1, 3], "word": [3, 4], "work": [1, 3, 4, 11, 13], "would": 10, "write": [0, 7], "written": 8, "x": [0, 1, 3, 4, 5, 7, 8, 10, 14], "x0": [0, 2, 3, 5, 7, 8], "x1": [0, 1, 2, 3, 5, 7, 8, 14], "x2": [0, 1, 2, 3, 5, 7, 8, 14], "x3": [0, 1, 5, 7, 14], "x4": 5, "x5": 5, "x_": [0, 2, 5, 7], "x_0": [0, 2, 5], "x_1": [0, 1, 2, 5, 7], "x_2": [1, 2, 5], "x_3": [1, 5], "x_4": 5, "x_5": 5, "x_i": [1, 2, 5, 7], "x_j": 5, "x_n": [2, 5, 7], "xl": [7, 8], "xlsx": [7, 8], "xn": [7, 8], "xor": [1, 2, 3, 7, 14], "xtick": 4, "xxx": [5, 8], "xxxx": 8, "y": [0, 1, 3, 5, 8, 10], "ye": 8, "yet": 8, "yield": [1, 2, 3, 10], "you": [0, 1, 2, 3, 4, 5, 10, 12], "your": 10, "z": [0, 1], "zero": [2, 3, 4, 7, 10], "zip": [1, 2, 3, 4], "zoom": 4, "\u03bb": 10}, "titles": ["BoolForge Tutorial #1: Working with Boolean functions", "BoolForge Tutorial #2: Advanced concepts related to Boolean functions", "BoolForge Tutorial #3: Canalization", "BoolForge Tutorial #4: Generating random Boolean functions", "BoolForge Tutorial #5: Example use cases of the random function generator", "BoolForge Tutorial #6: Working with Boolean networks", "Bio Models", "Boolean Function", "Boolean Network", "Documentation", "Generate", "Home", "Installation", "Tutorials", "Utils"], "titleterms": {"1": 0, "2": 1, "3": 2, "4": 3, "5": 4, "6": 5, "activ": 1, "advanc": 1, "allow": 3, "analyz": 4, "attribut": 0, "basic": 0, "between": 4, "bia": 4, "bias": 3, "bio": 6, "boolean": [0, 1, 3, 5, 7, 8], "booleanfunct": 0, "boolforg": [0, 1, 2, 3, 4, 5], "canal": [2, 3, 4], "case": 4, "collect": [2, 4], "compat": 12, "concept": 1, "convert": 0, "correl": 4, "creat": [0, 5], "decomposit": 5, "defin": 3, "degener": 3, "degre": 4, "diagram": 5, "differ": 4, "document": 9, "exampl": 4, "explor": 1, "express": 0, "extend": 12, "from": 0, "function": [0, 1, 3, 4, 7, 12], "gener": [3, 4, 10], "group": 1, "ham": 3, "home": 11, "input": 2, "instal": 12, "layer": [2, 4], "linear": 3, "linux": 12, "logic": 0, "mac": 12, "measur": [2, 4], "model": 6, "network": [5, 8], "o": 12, "polynomi": 0, "preval": 4, "properti": [0, 3], "python": 12, "random": [3, 4], "redund": 2, "relat": 1, "sensit": 1, "specif": [3, 4], "structur": [4, 5], "symmetri": 1, "tabl": 0, "text": 0, "theori": 5, "truth": 0, "tutori": [0, 1, 2, 3, 4, 5, 13], "us": 4, "util": 14, "variabl": 2, "weight": 3, "window": 12, "wire": 5, "work": [0, 5]}})