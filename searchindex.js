Search.setIndex({"alltitles": {"0. Setup & Imports": [[3, "0.-Setup-&-Imports"], [5, "0.-Setup-&-Imports"], [6, "0.-Setup-&-Imports"]], "1. Building a small Boolean Network": [[3, "1.-Building-a-small-Boolean-Network"]], "1. Random Boolean functions with constraints": [[5, "1.-Random-Boolean-functions-with-constraints"]], "1. Representing Boolean functions": [[0, "1.-Representing-Boolean-functions"]], "1. Toggle Switch (Mutual Repression)": [[6, "1.-Toggle-Switch-(Mutual-Repression)"]], "2. Basic properties": [[0, "2.-Basic-properties"]], "2. Random Boolean networks": [[5, "2.-Random-Boolean-networks"]], "2. Repressilator (3-Node Ring of Inhibitions)": [[6, "2.-Repressilator-(3-Node-Ring-of-Inhibitions)"]], "2. State space, attractors, and basins": [[3, "2.-State-space,-attractors,-and-basins"]], "3. Reproducibility & seeds": [[5, "3.-Reproducibility-&-seeds"]], "3. Sensitivity & Derrida plots (if available)": [[3, "3.-Sensitivity-&-Derrida-plots-(if-available)"]], "3. Sensitivity & Influence": [[0, "3.-Sensitivity-&-Influence"]], "3. T-cell Differentiation (Toy Circuit)": [[6, "3.-T-cell-Differentiation-(Toy-Circuit)"]], "4. Canalization": [[0, "4.-Canalization"]], "4. Structural properties: in/out degree, frozen nodes, etc.": [[3, "4.-Structural-properties:-in/out-degree,-frozen-nodes,-etc."]], "5. Composition & Algebra": [[0, "5.-Composition-&-Algebra"]], "Activities and sensitivities": [[2, "Activities-and-sensitivities"]], "Attributes of BooleanFunction": [[1, "Attributes-of-BooleanFunction"]], "Basic properties of Boolean functions": [[1, "Basic-properties-of-Boolean-functions"]], "Bio Models": [[7, null]], "BoolForge Tutorial #1: Working with Boolean Functions": [[1, null]], "BoolForge Tutorial #2: Advanced concepts related to Boolean Functions": [[2, null]], "BoolForge Tutorial #3: Canalization": [[4, null]], "Boolean Function": [[8, null]], "Boolean Functions & Networks Toolbox \u2014 Interactive Tutorials": [[0, null], [3, null], [5, null]], "Boolean Network": [[9, null]], "Canalization as a measure of input redundancy": [[4, "Canalization-as-a-measure-of-input-redundancy"]], "Canalizing variables and layers": [[4, "Canalizing-variables-and-layers"]], "Collective canalization": [[4, "Collective-canalization"]], "Compatability": [[13, "compatability"]], "Convert to logical and polynomial expression": [[1, "Convert-to-logical-and-polynomial-expression"]], "Create a Boolean function": [[1, "Create-a-Boolean-function"]], "Create a Boolean function from text": [[1, "Create-a-Boolean-function-from-text"]], "Create a Boolean function from truth table": [[1, "Create-a-Boolean-function-from-truth-table"]], "Documentation": [[10, null]], "Exploring symmetry groups of Boolean functions": [[2, "Exploring-symmetry-groups-of-Boolean-functions"]], "Extended Functionality": [[13, "extended-functionality"]], "GRN-Focused Tutorial: Toggle Switch, Repressilator, and a T-cell Differentiation Toy": [[6, null]], "Generate": [[11, null]], "Home": [[12, null]], "Installation": [[13, null]], "Mac OS / Linux": [[13, "mac-os-linux"]], "Python": [[13, "python"]], "Tutorials": [[14, null]], "Utils": [[15, null]], "Windows": [[13, "windows"]], "\ud83d\udd27 Try it: Explore your own function": [[0, "\ud83d\udd27-Try-it:-Explore-your-own-function"]], "\ud83d\udd27 Try it: Generate many functions and summarize sensitivity distribution": [[5, "\ud83d\udd27-Try-it:-Generate-many-functions-and-summarize-sensitivity-distribution"]], "\ud83d\udd27 Try it: Your network here": [[3, "\ud83d\udd27-Try-it:-Your-network-here"]]}, "docnames": ["_collections/tutorials/01_tutorial", "_collections/tutorials/01_working_with_boolean_functions", "_collections/tutorials/02_advanced_concepts_boolean_functions", "_collections/tutorials/02_tutorial", "_collections/tutorials/03_canalization", "_collections/tutorials/03_tutorial", "_collections/tutorials/04_grn_tutorial", "bio_models", "boolean_function", "boolean_network", "docs", "generate", "index", "install", "tutorial", "utils"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["_collections\\tutorials\\01_tutorial.ipynb", "_collections\\tutorials\\01_working_with_boolean_functions.ipynb", "_collections\\tutorials\\02_advanced_concepts_boolean_functions.ipynb", "_collections\\tutorials\\02_tutorial.ipynb", "_collections\\tutorials\\03_canalization.ipynb", "_collections\\tutorials\\03_tutorial.ipynb", "_collections\\tutorials\\04_grn_tutorial.ipynb", "bio_models.rst", "boolean_function.rst", "boolean_network.rst", "docs.rst", "generate.rst", "index.rst", "install.rst", "tutorial.rst", "utils.rst"], "indexentries": {"bin2dec() (in module boolforge.utils)": [[15, "boolforge.utils.bin2dec", false]], "bool_to_poly() (in module boolforge.utils)": [[15, "boolforge.utils.bool_to_poly", false]], "booleanfunction (class in boolforge.boolean_function)": [[8, "boolforge.boolean_function.BooleanFunction", false]], "booleannetwork (class in boolforge.boolean_network)": [[9, "boolforge.boolean_network.BooleanNetwork", false]], "boolforge.bio_models": [[7, "module-boolforge.bio_models", false]], "boolforge.boolean_function": [[8, "module-boolforge.boolean_function", false]], "boolforge.boolean_network": [[9, "module-boolforge.boolean_network", false]], "boolforge.generate": [[11, "module-boolforge.generate", false]], "boolforge.utils": [[15, "module-boolforge.utils", false]], "check_if_empty() (in module boolforge.utils)": [[15, "boolforge.utils.check_if_empty", false]], "compute_synchronous_state_transition_graph() (boolforge.boolean_network.booleannetwork method)": [[9, "boolforge.boolean_network.BooleanNetwork.compute_synchronous_state_transition_graph", false]], "dec2bin() (in module boolforge.utils)": [[15, "boolforge.utils.dec2bin", false]], "display_truth_table() (in module boolforge.boolean_function)": [[8, "boolforge.boolean_function.display_truth_table", false]], "f_from_expression() (in module boolforge.utils)": [[15, "boolforge.utils.f_from_expression", false]], "fetch_file() (in module boolforge.bio_models)": [[7, "boolforge.bio_models.fetch_file", false]], "fetch_file_bytes() (in module boolforge.bio_models)": [[7, "boolforge.bio_models.fetch_file_bytes", false]], "find_all_indices() (in module boolforge.utils)": [[15, "boolforge.utils.find_all_indices", false]], "flatten() (in module boolforge.utils)": [[15, "boolforge.utils.flatten", false]], "from_cana() (boolforge.boolean_function.booleanfunction class method)": [[8, "boolforge.boolean_function.BooleanFunction.from_cana", false]], "from_cana() (boolforge.boolean_network.booleannetwork class method)": [[9, "boolforge.boolean_network.BooleanNetwork.from_cana", false]], "from_string() (boolforge.boolean_network.booleannetwork class method)": [[9, "boolforge.boolean_network.BooleanNetwork.from_string", false]], "generate_networkx_graph() (boolforge.boolean_network.wiringdiagram method)": [[9, "boolforge.boolean_network.WiringDiagram.generate_networkx_graph", false]], "generate_networkx_graph_from_edges() (boolforge.boolean_network.wiringdiagram method)": [[9, "boolforge.boolean_network.WiringDiagram.generate_networkx_graph_from_edges", false]], "get_absolute_bias() (boolforge.boolean_function.booleanfunction method)": [[8, "boolforge.boolean_function.BooleanFunction.get_absolute_bias", false]], "get_activities() (boolforge.boolean_function.booleanfunction method)": [[8, "boolforge.boolean_function.BooleanFunction.get_activities", false]], "get_attractors_and_robustness_measures_synchronous() (boolforge.boolean_network.booleannetwork method)": [[9, "boolforge.boolean_network.BooleanNetwork.get_attractors_and_robustness_measures_synchronous", false]], "get_attractors_and_robustness_measures_synchronous_exact() (boolforge.boolean_network.booleannetwork method)": [[9, "boolforge.boolean_network.BooleanNetwork.get_attractors_and_robustness_measures_synchronous_exact", false]], "get_attractors_synchronous() (boolforge.boolean_network.booleannetwork method)": [[9, "boolforge.boolean_network.BooleanNetwork.get_attractors_synchronous", false]], "get_attractors_synchronous_exact() (boolforge.boolean_network.booleannetwork method)": [[9, "boolforge.boolean_network.BooleanNetwork.get_attractors_synchronous_exact", false]], "get_average_sensitivity() (boolforge.boolean_function.booleanfunction method)": [[8, "boolforge.boolean_function.BooleanFunction.get_average_sensitivity", false]], "get_bio_models_from_repository() (in module boolforge.bio_models)": [[7, "boolforge.bio_models.get_bio_models_from_repository", false]], "get_canalizing_depth() (boolforge.boolean_function.booleanfunction method)": [[8, "boolforge.boolean_function.BooleanFunction.get_canalizing_depth", false]], "get_canalizing_strength() (boolforge.boolean_function.booleanfunction method)": [[8, "boolforge.boolean_function.BooleanFunction.get_canalizing_strength", false]], "get_constants() (boolforge.boolean_network.wiringdiagram method)": [[9, "boolforge.boolean_network.WiringDiagram.get_constants", false]], "get_content_in_remote_folder() (in module boolforge.bio_models)": [[7, "boolforge.bio_models.get_content_in_remote_folder", false]], "get_derrida_value() (boolforge.boolean_network.booleannetwork method)": [[9, "boolforge.boolean_network.BooleanNetwork.get_derrida_value", false]], "get_edge_effectiveness() (boolforge.boolean_function.booleanfunction method)": [[8, "boolforge.boolean_function.BooleanFunction.get_edge_effectiveness", false]], "get_effective_degree() (boolforge.boolean_function.booleanfunction method)": [[8, "boolforge.boolean_function.BooleanFunction.get_effective_degree", false]], "get_entropy_of_basin_size_distribution() (in module boolforge.boolean_network)": [[9, "boolforge.boolean_network.get_entropy_of_basin_size_distribution", false]], "get_essential_variables() (boolforge.boolean_function.booleanfunction method)": [[8, "boolforge.boolean_function.BooleanFunction.get_essential_variables", false]], "get_ffls() (boolforge.boolean_network.wiringdiagram method)": [[9, "boolforge.boolean_network.WiringDiagram.get_ffls", false]], "get_hamming_weight() (boolforge.boolean_function.booleanfunction method)": [[8, "boolforge.boolean_function.BooleanFunction.get_hamming_weight", false]], "get_input_redundancy() (boolforge.boolean_function.booleanfunction method)": [[8, "boolforge.boolean_function.BooleanFunction.get_input_redundancy", false]], "get_kset_canalizing_proportion() (boolforge.boolean_function.booleanfunction method)": [[8, "boolforge.boolean_function.BooleanFunction.get_kset_canalizing_proportion", false]], "get_layer_structure() (boolforge.boolean_function.booleanfunction method)": [[8, "boolforge.boolean_function.BooleanFunction.get_layer_structure", false]], "get_layer_structure_from_canalized_outputs() (in module boolforge.boolean_function)": [[8, "boolforge.boolean_function.get_layer_structure_from_canalized_outputs", false]], "get_layer_structure_of_an_ncf_given_its_hamming_weight() (in module boolforge.utils)": [[15, "boolforge.utils.get_layer_structure_of_an_NCF_given_its_Hamming_weight", false]], "get_modular_structure() (boolforge.boolean_network.wiringdiagram method)": [[9, "boolforge.boolean_network.WiringDiagram.get_modular_structure", false]], "get_network_with_edge_controls() (boolforge.boolean_network.booleannetwork method)": [[9, "boolforge.boolean_network.BooleanNetwork.get_network_with_edge_controls", false]], "get_network_with_fixed_source_nodes() (boolforge.boolean_network.booleannetwork method)": [[9, "boolforge.boolean_network.BooleanNetwork.get_network_with_fixed_source_nodes", false]], "get_network_with_node_controls() (boolforge.boolean_network.booleannetwork method)": [[9, "boolforge.boolean_network.BooleanNetwork.get_network_with_node_controls", false]], "get_number_of_essential_variables() (boolforge.boolean_function.booleanfunction method)": [[8, "boolforge.boolean_function.BooleanFunction.get_number_of_essential_variables", false]], "get_outdegrees() (boolforge.boolean_network.wiringdiagram method)": [[9, "boolforge.boolean_network.WiringDiagram.get_outdegrees", false]], "get_source_nodes() (boolforge.boolean_network.booleannetwork method)": [[9, "boolforge.boolean_network.BooleanNetwork.get_source_nodes", false]], "get_steady_states_asynchronous() (boolforge.boolean_network.booleannetwork method)": [[9, "boolforge.boolean_network.BooleanNetwork.get_steady_states_asynchronous", false]], "get_steady_states_asynchronous_given_one_initial_condition() (boolforge.boolean_network.booleannetwork method)": [[9, "boolforge.boolean_network.BooleanNetwork.get_steady_states_asynchronous_given_one_initial_condition", false]], "get_strongly_connected_components() (boolforge.boolean_network.wiringdiagram method)": [[9, "boolforge.boolean_network.WiringDiagram.get_strongly_connected_components", false]], "get_symmetry_groups() (boolforge.boolean_function.booleanfunction method)": [[8, "boolforge.boolean_function.BooleanFunction.get_symmetry_groups", false]], "get_type_of_inputs() (boolforge.boolean_function.booleanfunction method)": [[8, "boolforge.boolean_function.BooleanFunction.get_type_of_inputs", false]], "get_type_of_loop() (boolforge.boolean_network.wiringdiagram method)": [[9, "boolforge.boolean_network.WiringDiagram.get_type_of_loop", false]], "get_types_of_regulation() (boolforge.boolean_network.booleannetwork method)": [[9, "boolforge.boolean_network.BooleanNetwork.get_types_of_regulation", false]], "is_canalizing() (boolforge.boolean_function.booleanfunction method)": [[8, "boolforge.boolean_function.BooleanFunction.is_canalizing", false]], "is_constant() (boolforge.boolean_function.booleanfunction method)": [[8, "boolforge.boolean_function.BooleanFunction.is_constant", false]], "is_degenerated() (boolforge.boolean_function.booleanfunction method)": [[8, "boolforge.boolean_function.BooleanFunction.is_degenerated", false]], "is_k_canalizing() (boolforge.boolean_function.booleanfunction method)": [[8, "boolforge.boolean_function.BooleanFunction.is_k_canalizing", false]], "is_kset_canalizing() (boolforge.boolean_function.booleanfunction method)": [[8, "boolforge.boolean_function.BooleanFunction.is_kset_canalizing", false]], "is_list_or_array_of_floats() (in module boolforge.utils)": [[15, "boolforge.utils.is_list_or_array_of_floats", false]], "is_list_or_array_of_ints() (in module boolforge.utils)": [[15, "boolforge.utils.is_list_or_array_of_ints", false]], "is_monotonic() (boolforge.boolean_function.booleanfunction method)": [[8, "boolforge.boolean_function.BooleanFunction.is_monotonic", false]], "load_model() (in module boolforge.bio_models)": [[7, "boolforge.bio_models.load_model", false]], "module": [[7, "module-boolforge.bio_models", false], [8, "module-boolforge.boolean_function", false], [9, "module-boolforge.boolean_network", false], [11, "module-boolforge.generate", false], [15, "module-boolforge.utils", false]], "random_degenerated_function() (in module boolforge.generate)": [[11, "boolforge.generate.random_degenerated_function", false]], "random_degrees() (in module boolforge.generate)": [[11, "boolforge.generate.random_degrees", false]], "random_edge_list() (in module boolforge.generate)": [[11, "boolforge.generate.random_edge_list", false]], "random_function() (in module boolforge.generate)": [[11, "boolforge.generate.random_function", false]], "random_function_with_bias() (in module boolforge.generate)": [[11, "boolforge.generate.random_function_with_bias", false]], "random_function_with_exact_hamming_weight() (in module boolforge.generate)": [[11, "boolforge.generate.random_function_with_exact_hamming_weight", false]], "random_k_canalizing_function() (in module boolforge.generate)": [[11, "boolforge.generate.random_k_canalizing_function", false]], "random_k_canalizing_function_with_specific_layer_structure() (in module boolforge.generate)": [[11, "boolforge.generate.random_k_canalizing_function_with_specific_layer_structure", false]], "random_linear_function() (in module boolforge.generate)": [[11, "boolforge.generate.random_linear_function", false]], "random_ncf() (in module boolforge.generate)": [[11, "boolforge.generate.random_NCF", false]], "random_nested_canalizing_function() (in module boolforge.generate)": [[11, "boolforge.generate.random_nested_canalizing_function", false]], "random_network() (in module boolforge.generate)": [[11, "boolforge.generate.random_network", false]], "random_non_canalizing_function() (in module boolforge.generate)": [[11, "boolforge.generate.random_non_canalizing_function", false]], "random_non_canalizing_non_degenerated_function() (in module boolforge.generate)": [[11, "boolforge.generate.random_non_canalizing_non_degenerated_function", false]], "random_non_degenerated_function() (in module boolforge.generate)": [[11, "boolforge.generate.random_non_degenerated_function", false]], "random_null_model() (in module boolforge.generate)": [[11, "boolforge.generate.random_null_model", false]], "random_wiring_diagram() (in module boolforge.generate)": [[11, "boolforge.generate.random_wiring_diagram", false]], "remove_constants() (boolforge.boolean_network.booleannetwork method)": [[9, "boolforge.boolean_network.BooleanNetwork.remove_constants", false]], "rewire_wiring_diagram() (in module boolforge.generate)": [[11, "boolforge.generate.rewire_wiring_diagram", false]], "simplify_functions() (boolforge.boolean_network.booleannetwork method)": [[9, "boolforge.boolean_network.BooleanNetwork.simplify_functions", false]], "to_bnet() (boolforge.boolean_network.booleannetwork method)": [[9, "boolforge.boolean_network.BooleanNetwork.to_bnet", false]], "to_cana() (boolforge.boolean_function.booleanfunction method)": [[8, "boolforge.boolean_function.BooleanFunction.to_cana", false]], "to_cana() (boolforge.boolean_network.booleannetwork method)": [[9, "boolforge.boolean_network.BooleanNetwork.to_cana", false]], "to_logical() (boolforge.boolean_function.booleanfunction method)": [[8, "boolforge.boolean_function.BooleanFunction.to_logical", false]], "to_polynomial() (boolforge.boolean_function.booleanfunction method)": [[8, "boolforge.boolean_function.BooleanFunction.to_polynomial", false]], "update_network_sdds() (boolforge.boolean_network.booleannetwork method)": [[9, "boolforge.boolean_network.BooleanNetwork.update_network_SDDS", false]], "update_network_synchronously() (boolforge.boolean_network.booleannetwork method)": [[9, "boolforge.boolean_network.BooleanNetwork.update_network_synchronously", false]], "update_network_synchronously_many_times() (boolforge.boolean_network.booleannetwork method)": [[9, "boolforge.boolean_network.BooleanNetwork.update_network_synchronously_many_times", false]], "update_single_node() (boolforge.boolean_network.booleannetwork method)": [[9, "boolforge.boolean_network.BooleanNetwork.update_single_node", false]], "wiringdiagram (class in boolforge.boolean_network)": [[9, "boolforge.boolean_network.WiringDiagram", false]]}, "objects": {"boolforge": [[7, 0, 0, "-", "bio_models"], [8, 0, 0, "-", "boolean_function"], [9, 0, 0, "-", "boolean_network"], [11, 0, 0, "-", "generate"], [15, 0, 0, "-", "utils"]], "boolforge.bio_models": [[7, 1, 1, "", "fetch_file"], [7, 1, 1, "", "fetch_file_bytes"], [7, 1, 1, "", "get_bio_models_from_repository"], [7, 1, 1, "", "get_content_in_remote_folder"], [7, 1, 1, "", "load_model"]], "boolforge.boolean_function": [[8, 2, 1, "", "BooleanFunction"], [8, 1, 1, "", "display_truth_table"], [8, 1, 1, "", "get_layer_structure_from_canalized_outputs"]], "boolforge.boolean_function.BooleanFunction": [[8, 3, 1, "", "from_cana"], [8, 3, 1, "", "get_absolute_bias"], [8, 3, 1, "", "get_activities"], [8, 3, 1, "", "get_average_sensitivity"], [8, 3, 1, "", "get_canalizing_depth"], [8, 3, 1, "", "get_canalizing_strength"], [8, 3, 1, "", "get_edge_effectiveness"], [8, 3, 1, "", "get_effective_degree"], [8, 3, 1, "", "get_essential_variables"], [8, 3, 1, "", "get_hamming_weight"], [8, 3, 1, "", "get_input_redundancy"], [8, 3, 1, "", "get_kset_canalizing_proportion"], [8, 3, 1, "", "get_layer_structure"], [8, 3, 1, "", "get_number_of_essential_variables"], [8, 3, 1, "", "get_symmetry_groups"], [8, 3, 1, "", "get_type_of_inputs"], [8, 3, 1, "", "is_canalizing"], [8, 3, 1, "", "is_constant"], [8, 3, 1, "", "is_degenerated"], [8, 3, 1, "", "is_k_canalizing"], [8, 3, 1, "", "is_kset_canalizing"], [8, 3, 1, "", "is_monotonic"], [8, 3, 1, "", "to_cana"], [8, 3, 1, "", "to_logical"], [8, 3, 1, "", "to_polynomial"]], "boolforge.boolean_network": [[9, 2, 1, "", "BooleanNetwork"], [9, 2, 1, "", "WiringDiagram"], [9, 1, 1, "", "get_entropy_of_basin_size_distribution"]], "boolforge.boolean_network.BooleanNetwork": [[9, 3, 1, "", "compute_synchronous_state_transition_graph"], [9, 3, 1, "", "from_cana"], [9, 3, 1, "", "from_string"], [9, 3, 1, "", "get_attractors_and_robustness_measures_synchronous"], [9, 3, 1, "", "get_attractors_and_robustness_measures_synchronous_exact"], [9, 3, 1, "", "get_attractors_synchronous"], [9, 3, 1, "", "get_attractors_synchronous_exact"], [9, 3, 1, "", "get_derrida_value"], [9, 3, 1, "", "get_network_with_edge_controls"], [9, 3, 1, "", "get_network_with_fixed_source_nodes"], [9, 3, 1, "", "get_network_with_node_controls"], [9, 3, 1, "", "get_source_nodes"], [9, 3, 1, "", "get_steady_states_asynchronous"], [9, 3, 1, "", "get_steady_states_asynchronous_given_one_initial_condition"], [9, 3, 1, "", "get_types_of_regulation"], [9, 3, 1, "", "remove_constants"], [9, 3, 1, "", "simplify_functions"], [9, 3, 1, "", "to_bnet"], [9, 3, 1, "", "to_cana"], [9, 3, 1, "", "update_network_SDDS"], [9, 3, 1, "", "update_network_synchronously"], [9, 3, 1, "", "update_network_synchronously_many_times"], [9, 3, 1, "", "update_single_node"]], "boolforge.boolean_network.WiringDiagram": [[9, 3, 1, "", "generate_networkx_graph"], [9, 3, 1, "", "generate_networkx_graph_from_edges"], [9, 3, 1, "", "get_constants"], [9, 3, 1, "", "get_ffls"], [9, 3, 1, "", "get_modular_structure"], [9, 3, 1, "", "get_outdegrees"], [9, 3, 1, "", "get_strongly_connected_components"], [9, 3, 1, "", "get_type_of_loop"]], "boolforge.generate": [[11, 1, 1, "", "random_NCF"], [11, 1, 1, "", "random_degenerated_function"], [11, 1, 1, "", "random_degrees"], [11, 1, 1, "", "random_edge_list"], [11, 1, 1, "", "random_function"], [11, 1, 1, "", "random_function_with_bias"], [11, 1, 1, "", "random_function_with_exact_hamming_weight"], [11, 1, 1, "", "random_k_canalizing_function"], [11, 1, 1, "", "random_k_canalizing_function_with_specific_layer_structure"], [11, 1, 1, "", "random_linear_function"], [11, 1, 1, "", "random_nested_canalizing_function"], [11, 1, 1, "", "random_network"], [11, 1, 1, "", "random_non_canalizing_function"], [11, 1, 1, "", "random_non_canalizing_non_degenerated_function"], [11, 1, 1, "", "random_non_degenerated_function"], [11, 1, 1, "", "random_null_model"], [11, 1, 1, "", "random_wiring_diagram"], [11, 1, 1, "", "rewire_wiring_diagram"]], "boolforge.utils": [[15, 1, 1, "", "bin2dec"], [15, 1, 1, "", "bool_to_poly"], [15, 1, 1, "", "check_if_empty"], [15, 1, 1, "", "dec2bin"], [15, 1, 1, "", "f_from_expression"], [15, 1, 1, "", "find_all_indices"], [15, 1, 1, "", "flatten"], [15, 1, 1, "", "get_layer_structure_of_an_NCF_given_its_Hamming_weight"], [15, 1, 1, "", "is_list_or_array_of_floats"], [15, 1, 1, "", "is_list_or_array_of_ints"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "terms": {"": [2, 4, 5, 6, 8, 9, 11], "0": [0, 1, 2, 4, 8, 9, 11, 15], "001": 11, "004486541652542627": 2, "023009": 9, "03": 8, "06": 4, "08": 9, "09": [11, 15], "1": [2, 4, 8, 9, 11, 12, 14, 15], "10": [5, 11], "1000": [9, 11], "10000": 8, "102475": 8, "1046": 8, "11": [5, 7, 8, 9], "110630": [8, 11], "12": [0, 2, 5, 6, 8, 11], "1214": 4, "1276": 4, "13": [0, 2, 5, 9], "1305": 4, "1309": 4, "145": 8, "146": [8, 11], "15": [5, 11], "16": [4, 5, 15], "16556667": 4, "16646667": 4, "16666666666666666": 4, "18": 2, "19": 2, "1986": 9, "1d": 0, "2": [1, 4, 8, 9, 11, 12, 14, 15], "20": 6, "200": [3, 5], "2007": 4, "2013": 8, "2016": [4, 8, 11], "2017": [11, 15], "2018": 8, "2021": 4, "2022": [8, 11], "2023": [4, 8, 9], "2024": 11, "2025": [7, 8, 9, 11, 15], "21": 1, "22": 7, "23": [0, 2], "24": [7, 9], "2441": 4, "2445": 4, "25": [2, 4, 5, 11, 15], "2502": 4, "2511": 4, "29": [11, 15], "294": 4, "296": 4, "3": [1, 2, 8, 11, 12, 13, 14], "314": [8, 11], "32": 4, "323": 0, "324": 0, "325": 0, "329": 0, "33": 4, "330": 0, "331": 0, "332": 0, "333": 0, "353": [11, 15], "37": 3, "375": 4, "39": [0, 1, 2, 3, 4, 5, 11, 15], "4": [1, 4, 5, 6, 11], "40": [4, 11, 15], "41": 4, "41666666666666663": 4, "4166666666666667": [2, 4], "42": 5, "43": 4, "44": 9, "45": 9, "47": [11, 15], "4791666666666667": 4, "48": 7, "49": 8, "4932": 0, "4974": 4, "49751200000000007": 2, "5": [1, 2, 3, 4, 5, 11], "50": [1, 4, 9], "500": [2, 9], "501072": 2, "5036": 4, "51": 1, "52": [1, 4], "5208333333333334": 4, "53": 1, "536": 4, "54": [1, 4], "5555555555555556": 4, "56": 1, "5625": 4, "57": 1, "58": 1, "5833333333333334": 4, "59": 1, "6": [0, 3, 5, 6, 11], "61": [1, 4], "625": 4, "63": 1, "65": 4, "668": 0, "67": 11, "7": [0, 3, 5, 11], "75": [2, 4, 5], "7525": 4, "8": [0, 3, 6, 8, 11, 13], "8125": 4, "875": 4, "9": [5, 8], "967": 4, "999": 11, "A": [0, 1, 2, 4, 5, 6, 8, 9, 11, 15], "AND": [0, 1, 3, 6, 7, 8, 9, 15], "And": 8, "As": [4, 9], "By": [1, 2], "For": [1, 2, 4, 8, 9, 11], "If": [3, 4, 5, 7, 8, 9, 11, 13, 15], "In": [0, 1, 2, 4, 5, 9, 11], "It": [4, 8, 9, 13], "NOT": [1, 3, 6, 7, 8, 9, 15], "No": [5, 11], "Not": 8, "OR": [0, 1, 3, 6, 7, 8, 9], "On": [1, 2], "One": [8, 11], "Or": 8, "Such": 11, "That": [2, 8], "The": [1, 2, 4, 5, 6, 8, 9, 11, 12, 15], "Then": 11, "There": 15, "These": [0, 3, 5], "To": [2, 4, 11, 13], "With": 11, "_": [0, 3, 4, 5, 6], "__loaded_cana__": 5, "_coerce_rng": [8, 9, 11], "abl": 13, "about": [4, 8, 9, 13], "abov": [0, 1, 2, 3, 4, 11], "abs_bia": 11, "absolut": [0, 1, 8, 11], "absolute_bia": 11, "acceler": [8, 9], "accord": 11, "activ": [4, 8, 9, 14], "activt": 2, "actual": 11, "acycl": 9, "ad": 9, "add": 6, "addit": [1, 8, 9, 11], "adj": 11, "adjac": [5, 11], "advanc": [4, 8, 12, 14], "affect": 11, "after": [4, 8, 9, 11], "al": 4, "albert": 9, "algorithm": [8, 11], "alia": 11, "all": [2, 3, 4, 5, 6, 8, 9, 11, 15], "all_funct": 4, "all_stat": 6, "allow": [7, 9, 11], "allow_degenerated_funct": [2, 11], "almost": [2, 4], "alon": 6, "along": 9, "alreadi": [4, 13], "also": [1, 2, 4, 9], "alwai": [2, 8], "am": 4, "among": [2, 9], "an": [1, 2, 3, 4, 6, 8, 9, 11, 15], "analysi": [0, 3, 5], "analyz": 12, "analyze_bf": [0, 5, 6], "analyze_bn": [5, 6], "anf": 0, "ani": [1, 4, 8], "anneal": 9, "anoth": [0, 9], "anywai": 2, "api": [5, 7], "appdata": 5, "appear": 4, "append": [0, 4, 5, 6], "appli": [4, 8, 9, 11], "applic": [0, 3, 5, 8, 11], "approach": 9, "approxim": 9, "ar": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13], "arang": 6, "arbitrari": 6, "argument": [0, 8, 9, 11], "ariti": 11, "arr": 15, "arrai": [0, 1, 2, 3, 6, 8, 9, 11, 15], "array_equ": 5, "arxiv": 9, "as_dict": 9, "as_polynomi": 9, "ask": 11, "assembl": 11, "assertionerror": 11, "assign": [6, 7, 9, 11], "assum": [3, 9], "asynchron": [3, 9], "at_least_one_regulator_per_nod": 11, "att": 6, "attempt": [9, 11], "attr": 6, "attract": 9, "attractor": [5, 6, 9], "attractor_info_async": 3, "attractor_info_sync": 3, "attractorcoher": 9, "attractordict": [3, 9], "attractorfragil": 9, "attribut": 14, "atts0": 6, "atts1": 6, "aug": [8, 9], "author": [7, 8, 9, 11, 15], "automata": [8, 9], "automatica": [8, 11], "avail": [0, 1, 5], "averag": [0, 2, 4, 5, 8, 9], "average_swaps_per_edg": 11, "avg": 0, "avoid": 11, "awai": 11, "ax": 4, "b": [1, 2, 4, 6, 8, 9, 11, 15], "bake": 9, "balanc": 8, "bar": 6, "bas0": 6, "bas1": 6, "base": [8, 9], "basic": [3, 4, 14], "basin": [6, 9], "basin_count": 6, "basin_s": [6, 9], "basincoher": 9, "basincoherenceapproxim": 9, "basinfragil": 9, "basinfragilityapproxim": 9, "basins": [3, 9], "bassler": 4, "bavisetti": 9, "becaus": 1, "becom": [1, 9], "befor": [9, 11], "begin": 4, "behavior": [5, 6, 11], "being": 8, "below": 0, "benco": 5, "benjamin": [8, 9, 11, 15], "best": 6, "bet": 6, "better": 11, "between": [0, 1, 2, 9, 15], "bf": [0, 3, 5, 6], "bia": [0, 1, 5, 6, 8, 9, 11], "bias": [6, 11], "biject": 15, "bin": 4, "bin2dec": [0, 3, 9, 10, 15], "binari": [0, 1, 6, 9, 15], "binary_repr": 6, "binary_vector": [4, 15], "binom": 5, "bio": [10, 12], "bio_model": 7, "biodivin": 7, "biolog": [2, 4, 6, 11], "biologi": 11, "bistabl": 6, "bit": [0, 2, 6, 8, 15], "bn": [3, 5, 6, 7, 11], "bn0": 11, "bn2": 11, "bn3": 11, "bn4": 11, "bnet": 9, "bntoolbox": [0, 5], "bodi": 8, "bookkeep": 9, "bool": [7, 8, 9, 11, 15], "bool_to_poli": [0, 3, 10, 15], "boolean": [4, 6, 7, 10, 11, 12, 13, 14, 15], "boolean_funct": [0, 5, 8], "boolean_network": [0, 9], "boolean_nod": [1, 8], "booleanfunct": [2, 3, 4, 8, 9, 10, 11, 14], "booleannetwork": [3, 7, 9, 10, 11], "booleannod": [1, 8], "boolen": 4, "boolforg": [0, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15], "both": [4, 11, 13], "bound": [9, 11], "box": 0, "branch": 11, "broadcast": 11, "brute": 4, "build": 6, "built": 11, "byte": 7, "c": [1, 2, 5, 8, 9, 11, 13, 15], "calcul": [8, 9], "call": [0, 4, 5, 11], "callabl": [0, 3, 5], "can": [1, 2, 4, 8, 9, 11, 12, 13, 15], "can_output": 8, "cana": [1, 4, 5, 6, 8, 9, 13], "cana_booleannetwork": 9, "cana_booleannod": 8, "cana_object": 1, "canal": [5, 8, 11, 12, 14, 15], "canalizedoutput": [4, 8], "canalizing_depth": 4, "canalizing_info": 4, "canalizing_strength": 4, "canalizingdepth": 8, "canalizinginput": [4, 8], "cannot": [4, 5, 6, 11], "cap": 11, "captur": 6, "caricatur": 6, "carlo": [2, 5, 8], "case": [2, 4, 11], "cdot": 4, "cell": [0, 3, 5, 9], "certain": 1, "certainli": 2, "chanc": 11, "chang": [2, 3, 5, 6, 8, 9], "chao": 9, "charact": 8, "chart": 6, "check": [0, 1, 2, 4, 5, 8, 15], "check_if_empti": [3, 10, 15], "choos": 11, "chosen": [8, 9, 11], "ckadelka": [7, 12, 13], "class": [1, 2, 8, 9], "classic": 11, "classmethod": [8, 9], "clau": [8, 9, 11, 15], "clip": 11, "close": 11, "cloudstorag": 0, "coberli": [8, 9, 11, 15], "code": [1, 4, 12], "coher": 9, "coherenceapproxim": 9, "collect": [1, 5, 6, 8, 9, 14], "column": 8, "com": [12, 13], "combin": 8, "common": 9, "commonli": 13, "compar": [2, 6], "comparison": 15, "compat": [8, 9, 12], "compil": 9, "complic": 1, "compon": [9, 11], "compos": 8, "comput": [0, 1, 2, 4, 6, 8, 9, 11, 15], "computation": 2, "compute_synchronous_state_transition_graph": [9, 10], "concept": [4, 12, 14], "condit": [1, 6, 8, 9], "condition": [4, 8, 11], "configur": 11, "connect": [9, 11], "consid": [4, 6, 9, 13], "constant": [0, 1, 4, 6, 8, 9, 11], "constitut": 4, "constraint": 11, "construct": [9, 11], "constructor": [8, 9], "contain": [0, 1, 3, 5, 7, 8, 9, 11, 15], "content": 7, "continu": 6, "contrari": 1, "control": [8, 9, 11], "control_sourc": 9, "control_target": 9, "convent": 11, "converg": 9, "convert": [0, 8, 9, 13, 14, 15], "copi": 6, "core": [0, 4, 8, 11], "corefunct": [4, 8], "correia": 8, "correspond": [4, 8, 9, 11], "costa": 9, "could": 7, "count": [4, 6, 8, 9], "counter": 6, "cover": 6, "creat": [7, 8, 9, 11, 14, 15], "cur": 6, "curat": 7, "current": 9, "cyc": 6, "cycl": [6, 9], "cyclic": 6, "cytokin": 6, "d": [4, 8, 11, 15], "dag": 9, "dai": 4, "data": [1, 5, 6, 13], "debug": 9, "dec2bin": [0, 3, 10, 15], "decim": [0, 9], "decis": 6, "decompos": [4, 8], "decreas": [1, 9], "def": [6, 11], "default": [1, 2, 7, 8, 9, 11, 15], "default_rng": 3, "defaultdict": [3, 6], "defin": [1, 2, 3, 4, 6, 8, 9], "definit": 4, "degener": [0, 1, 4, 11], "degeneraci": [2, 11], "degrad": 9, "degre": [1, 2, 4, 5, 7, 8, 11], "delta": 11, "demonstr": 3, "depend": [2, 5, 6, 11, 13], "depth": [4, 8, 9, 11], "deriv": 9, "derrida": [8, 9], "derrida_curv": 3, "describ": [1, 2, 4, 9, 11, 15], "descript": 1, "desir": 8, "desired_valu": 0, "detail": [0, 9, 11], "detect": 6, "determin": [1, 4, 8, 9, 11, 15], "determinist": 6, "develop": 13, "deviat": [2, 8, 11], "diagram": [9, 11], "dict": [1, 8, 9], "dictionari": [8, 9], "differ": [1, 2, 4, 6, 9, 11], "digit": 15, "digraph": 9, "dimens": 15, "dimitrova": [8, 11], "dir": [0, 3, 5], "dirac": 11, "direct": [7, 9, 11], "directli": [4, 11], "disallow": 11, "disjunct": 15, "displai": 8, "display_truth_t": [2, 4, 8, 10], "distanc": [3, 9, 11], "distinct": [8, 11], "distribut": [4, 8, 9, 11], "divid": 8, "divis": 2, "dnf": [8, 15], "do": 13, "do_not_add_self_regul": 11, "document": 12, "doe": [2, 8, 9], "dot": 0, "doubl": 11, "download": [7, 13], "download_url": 7, "draw": [5, 11], "drawn": [4, 11], "drosophila": 8, "dtype": [0, 3, 6], "duplic": 11, "dure": [0, 9], "dynam": [6, 8], "e": [0, 1, 2, 3, 4, 5, 8, 9, 11, 15], "e2": 5, "e55946": 8, "e_i": 2, "each": [0, 1, 3, 4, 5, 6, 8, 9, 11, 15], "edg": [4, 8, 9, 11], "edge_effect": 4, "edit": [0, 3, 5], "effect": [4, 8, 11, 15], "effective_degre": 4, "either": [9, 11], "el": 15, "element": [9, 11, 15], "els": [5, 6, 9, 11], "empti": [9, 15], "encount": [9, 15], "end": [4, 9], "enforc": 11, "enjoi": 4, "enrich": 4, "ensur": [2, 5, 6, 11], "ensurepip": 13, "entir": [1, 4, 9], "entri": [9, 11], "entropi": 9, "enumer": [2, 4, 6, 8, 11], "enumerate_state_graph": 6, "equal": [1, 4, 9, 11, 15], "equival": [2, 4, 8, 9, 15], "error": 11, "espresso": 8, "essenti": [0, 1, 2, 8, 9, 11], "estim": [3, 5, 8, 9], "et": 4, "etc": [5, 8, 9, 11], "europhys": 9, "evalu": [3, 4, 8, 9, 15], "even": 2, "ever": 2, "everi": [1, 6, 8, 11], "exact": [2, 3, 4, 6, 8, 9, 11, 15], "exact_depth": 11, "exactli": [1, 4, 9, 11], "exactnumberofattractor": 9, "examin": [3, 6], "exampl": [0, 1, 2, 3, 4, 5, 6, 8, 11, 15], "exce": 11, "exceed": 9, "except": [0, 3, 4, 5, 6], "excess": 4, "exclud": [9, 11], "exemplifi": 4, "exercis": [0, 3, 5], "exhaust": 8, "exhibit": 4, "exist": [4, 8, 11, 15], "expect": [0, 2, 3, 5, 6], "expens": 2, "expert": 7, "explor": [1, 3, 4, 5, 6, 9, 14], "expr": 15, "express": [8, 9, 11, 14, 15], "extend": [4, 8, 12], "extern": 6, "extract": [0, 9, 15], "extrem": 11, "f": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 15], "f1": [5, 6, 8], "f2": [1, 5, 6, 8], "f3": 1, "f_and": 1, "f_from_express": [3, 8, 10, 15], "f_not": 6, "fail": 7, "failed_download_url": 7, "fairli": [1, 4], "faith": 6, "fallback": [5, 6], "fals": [0, 1, 2, 4, 7, 8, 9, 11, 15], "far": [8, 9], "fast": 9, "fate": 6, "featur": [0, 3, 5], "feed": 9, "feedback": 9, "fetch_fil": [7, 10], "fetch_file_byt": [7, 10], "few": 4, "ffl": 9, "fg": 6, "fi": 6, "fig": [4, 6], "figur": 6, "file": [0, 1, 3, 5, 7], "file_download_url": 7, "file_nam": 7, "final": 9, "finalhammingdistanceapproxim": 9, "find": [2, 3, 6, 9], "find_all_indic": [10, 15], "find_attractor": 6, "finder": [3, 6], "first": [0, 1, 2, 3, 5, 6, 7, 9, 11, 15], "five": 1, "fix": [4, 5, 6, 8, 9, 11], "fix_self_regul": 11, "fixed_in_and_outdegre": 11, "fixed_indegre": 11, "flag": 11, "flatten": [3, 10, 15], "flavor": 6, "flexibl": 11, "flip": [2, 8], "float": [8, 9, 11, 15], "focu": [4, 12], "folder": 7, "follow": [4, 11], "forbid": 11, "forc": [4, 8, 11], "form": [0, 1, 4, 8, 9, 15], "format": [1, 8, 9, 15], "formula": 9, "forward": [9, 11], "found": [5, 6, 8, 9, 11, 12], "foundat": [1, 2], "four": 4, "frac": 2, "fragil": 9, "fragilityapproxim": 9, "fresh": 11, "fri": 7, "from": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 15], "from_cana": [8, 9, 10], "from_str": [9, 10], "frontier": 8, "ft": 6, "full": [8, 9, 11], "fulli": [2, 11], "func": [2, 4], "function": [4, 6, 9, 10, 11, 12, 14, 15], "further": 2, "g": [0, 1, 2, 4, 5, 6, 8, 9, 11], "g_val": 6, "gata3": 6, "gate": [4, 8], "gb": 6, "gen": [5, 6], "gene": [0, 3, 5, 6], "gener": [0, 1, 2, 3, 6, 8, 9, 10, 12], "generate_networkx_graph": [9, 10], "generate_networkx_graph_from_edg": [9, 10], "geq": [1, 4], "get": 11, "get_absolute_bia": [0, 1, 5, 8, 10], "get_act": [2, 4, 8, 10], "get_attractors_and_robustness_measures_synchron": [9, 10], "get_attractors_and_robustness_measures_synchronous_exact": [9, 10], "get_attractors_synchron": [9, 10], "get_attractors_synchronous_exact": [3, 5, 6, 9, 10], "get_average_sensit": [0, 2, 4, 5, 8, 10], "get_bio_models_from_repositori": [7, 10], "get_canalizing_depth": [4, 8, 10], "get_canalizing_strength": [4, 8, 10], "get_const": [9, 10], "get_content_in_remote_fold": [7, 10], "get_derrida_valu": [9, 10], "get_edge_effect": [4, 8, 10], "get_effective_degre": [4, 8, 10], "get_entropy_of_basin_size_distribut": [9, 10], "get_essential_vari": [0, 1, 8, 10], "get_ffl": [9, 10], "get_frozen_nod": 3, "get_hamming_weight": [1, 8, 10], "get_input_redund": [4, 8, 10], "get_kset_canalizing_proport": [4, 8, 10], "get_layer_structur": [4, 8, 10], "get_layer_structure_from_canalized_output": [3, 8, 10], "get_layer_structure_of_an_ncf_given_its_hamming_weight": [3, 10, 15], "get_left_side_of_truth_t": [3, 4], "get_modular_structur": [9, 10], "get_network_with_edge_control": [9, 10], "get_network_with_fixed_source_nod": [9, 10], "get_network_with_node_control": [9, 10], "get_number_of_essential_vari": [0, 8, 10], "get_outdegre": [9, 10], "get_source_nod": [9, 10], "get_steady_states_asynchron": [3, 9, 10], "get_steady_states_asynchronous_given_one_initial_condit": [9, 10], "get_strongly_connected_compon": [9, 10], "get_symmetry_group": [0, 2, 8, 10], "get_type_of_input": [1, 8, 10], "get_type_of_loop": [9, 10], "get_types_of_regul": [9, 10], "getattr": [0, 3, 5], "git": 13, "github": [7, 12, 13], "give": 11, "given": [0, 2, 3, 4, 8, 9, 11, 15], "global": 9, "graph": [3, 9, 11], "grn_databas": 0, "group": [0, 4, 8, 14], "gt": [0, 1, 3, 5], "guarante": [9, 11], "h": [1, 2, 4, 9], "ha": [0, 1, 2, 3, 4, 8, 9, 11, 13, 15], "ham": [1, 3, 9, 11, 15], "hamming_weight": 11, "hand": [2, 13, 15], "handl": [0, 11], "hard": 2, "have": [1, 4, 8, 11, 13, 15], "he": [4, 8, 11], "heavili": 4, "held": 6, "help": [1, 4], "helper": [0, 3, 6], "here": [9, 11, 13], "high": [4, 9, 11], "highest": 4, "highli": [4, 11], "hist": 4, "hold": [8, 15], "how": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11], "howev": [4, 13], "http": [12, 13], "hybrid": 9, "hypercub": 9, "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15], "idea": 4, "ident": [3, 5, 6], "identifi": [4, 6, 7, 8, 9], "idx": 6, "ignor": [9, 11, 15], "ignore_first_lin": 7, "ii": [2, 6, 11], "implement": [5, 8, 9, 11], "impli": [9, 11], "import": [0, 1, 2, 4, 13], "in_degre": 3, "includ": [1, 8, 9, 11, 13, 15], "incom": 11, "increas": [1, 9], "indeg": 3, "indegre": [9, 11], "indegree_distribut": 11, "independ": [11, 13], "index": [0, 6, 9, 12], "indic": [0, 1, 6, 8, 9, 11, 15], "indices_controlled_nod": 9, "individu": 4, "influenc": [8, 9, 11, 15], "info": 0, "inform": [4, 8, 9], "inherit": 9, "init": 6, "initi": [6, 9], "initial_condit": 9, "initial_sample_point": 9, "initial_sample_points_as_binary_vector": 9, "initialsamplepoint": [3, 9], "inner": [4, 8, 11], "inop": 9, "input": [0, 1, 2, 3, 6, 8, 9, 11, 14, 15], "input_redund": 4, "insist": 11, "inspect": 1, "instal": [1, 4, 5, 6, 8, 12], "instanc": [1, 8, 9], "instead": 4, "int": [0, 1, 3, 6, 7, 8, 9, 11, 15], "integ": [9, 11, 15], "integer_valu": 15, "integr": 13, "interchang": 2, "intermedi": 9, "interpret": [9, 11], "interv": 8, "introduc": [4, 11], "invalid": 11, "invert": 9, "investig": 2, "irrespect": [4, 8], "is_can": [0, 4, 5, 8, 10], "is_const": [0, 1, 8, 10], "is_degener": [0, 1, 4, 8, 10], "is_k_can": [0, 4, 8, 10], "is_k_canalizing_return_inputs_outputs_corefunction_ord": 0, "is_kset_can": [8, 10], "is_list_or_array_of_float": [3, 10, 15], "is_list_or_array_of_int": [3, 10, 15], "is_monoton": [0, 8, 10], "iter": [8, 9], "itertool": 6, "ith": [2, 9], "its": [0, 1, 2, 4, 8, 9, 11, 15], "itself": [4, 8, 9, 11], "j": [8, 9, 11, 15], "jcrozum": 7, "join": 6, "journal": 4, "jul": [11, 15], "just": [3, 5, 11], "k": [0, 1, 4, 5, 6, 8, 9, 11], "k1": 11, "k_1": [4, 11, 15], "k_i": [4, 11, 15], "k_r": [4, 11, 15], "kadelka": [4, 8, 9, 11, 15], "kauffman": 11, "keep": [6, 8, 11], "keep_controlled_nod": 9, "kei": [3, 4, 6, 9], "keilti": 8, "kept": 11, "kernel": 9, "know": 4, "knowledg": 4, "known": 4, "kr": 11, "kset_canalizing_proport": 4, "kuiper": [11, 15], "kwarg": 11, "l": [8, 9, 15], "label": [2, 4, 6, 8, 9], "lambda": 11, "landscap": 9, "larg": [2, 11], "larger": 11, "last": [0, 2, 5, 11, 15], "later": [4, 11], "laubenbach": [8, 11, 15], "layer": [8, 11, 14, 15], "layer_structur": 11, "layer_structure_ncf": 15, "layerstructur": [4, 8], "ldot": [1, 2, 4], "learn": [1, 2, 4, 13], "least": [4, 6, 8, 11], "leav": 2, "left": 1, "legend": 6, "len": [0, 3, 5, 6, 9, 11], "length": [0, 1, 6, 8, 9, 11, 15], "leq": 4, "less": 4, "let": 11, "letter": 9, "level": 4, "lexicograph": 0, "lib": 5, "librari": 0, "lie": 11, "life": 9, "like": [4, 11, 15], "likewis": 4, "line": [0, 5, 7], "linear": [1, 2, 11, 15], "linux": 12, "list": [0, 6, 7, 8, 9, 11, 15], "ll": [3, 6], "load": [0, 7], "load_model": [7, 10], "loc": 6, "local": [0, 3, 5, 6], "log": 9, "logic": [7, 8, 9, 11, 14], "longer": [9, 11], "loop": [9, 11], "low": 11, "lower": 9, "lowerboundofnumberofattractor": 9, "lt": 1, "m": [8, 9, 11, 13], "m_i": 9, "mac": 12, "macaulei": [4, 8, 11], "made": 12, "mai": [9, 11], "main": [0, 3, 5], "make": 13, "malform": 11, "mani": [2, 8, 9], "map": [3, 6, 9, 11], "mark": [0, 3, 5], "marqu": 8, "master": 9, "match": [11, 15], "math": 6, "mathbf": 2, "mathemat": [4, 8], "matplotlib": [4, 6], "matrix": [5, 11], "max": 11, "max_degre": [7, 9, 15], "maxim": [4, 8], "maximum": [7, 9, 11], "mean": [2, 5, 11], "meaning": 4, "meant": [0, 3, 5], "measur": [8, 9, 14], "melanogast": 8, "member": [8, 9], "method": [8, 9, 13], "min": 11, "minim": [8, 11], "minimalist": 6, "minimize_express": 8, "minimum": 11, "minu": 4, "minut": 4, "mix": 11, "mnt": [5, 6], "model": [6, 9, 10, 11, 12], "modifi": 9, "modul": [0, 5, 6, 8, 9], "modular": [2, 9], "modulenotfounderror": 5, "modulo": 11, "monomi": [4, 8], "monoton": [0, 8], "mont": [2, 5, 8], "more": [1, 2, 4, 8, 11, 13], "most": [0, 4, 5, 11], "motif": 6, "much": [8, 9], "multi": 11, "multipl": 9, "murrugarra": [8, 11], "must": [4, 8, 9, 11, 13, 15], "my_list": 15, "n": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 15], "n_attempts_to_generate_strongly_connected_network": 11, "n_constant": 9, "n_i": 9, "n_step": 9, "n_steps_timeout": 9, "n_variabl": 9, "name": [1, 4, 5, 7, 8, 9, 15], "nan": 9, "nattr": 5, "natur": 4, "nb": 9, "ncf": 15, "ndarrai": [8, 9, 11, 15], "necessari": 8, "need": [4, 8], "neg": 8, "negat": [7, 11], "neighbor": 9, "neither": 11, "neq": [2, 4], "nest": [4, 8, 11, 15], "nested_can": 4, "network": [1, 4, 6, 7, 8, 10, 11, 12, 13, 15], "network_str": 9, "networkx": 9, "never": 11, "new": [3, 9, 11], "new_f": 0, "next": [2, 4, 8, 9], "next_stat": 3, "nextstep": 9, "nk": 11, "no_self_regul": 11, "node": [7, 8, 9, 11], "non": [1, 2, 4, 8, 9, 11, 15], "none": [0, 2, 3, 5, 6, 7, 8, 9, 11, 15], "nonlinear": [8, 11, 15], "nontrivi": 11, "normal": [0, 2, 4, 8, 9, 15], "note": [0, 4, 8, 11], "notebook": [0, 3, 5, 6], "now": 13, "np": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 15], "npj": 11, "nsim": [2, 8, 9], "null": 11, "num": 0, "num_bit": 15, "numba": [8, 9], "number": [1, 4, 5, 8, 9, 11, 15], "number_different_": 9, "numberofattractor": [3, 9], "numberoflay": [4, 8], "numberofsteadyst": [3, 9], "numberoftimeout": 9, "numer": 9, "numpi": [0, 1, 2, 3, 4, 5, 6, 8, 15], "nxt": 6, "o": [0, 6, 12], "object": [8, 9, 11], "obtain": 9, "obviou": 4, "occur": [0, 1], "occurr": 15, "od": 11, "odd": 15, "often": [2, 11], "one": [4, 6, 8, 9, 11], "ones": 11, "onli": [2, 4, 6, 9, 11], "onlin": 7, "oper": [7, 8, 15], "oplu": 2, "optim": 9, "option": [1, 3, 7, 8, 9, 11, 15], "order": [0, 1, 4, 6, 8, 9, 11, 15], "orderofcanalizingvari": [4, 8], "origin": [9, 11], "original_and": [7, 9], "original_not": [7, 9], "original_or": [7, 9], "oscil": 6, "other": [0, 1, 2, 4, 6, 8, 11, 13], "otherwis": [0, 8, 9, 11, 15], "out": [5, 9, 11], "out_degre": 3, "outdeg": [3, 11], "outdegre": 9, "outer": 4, "outgo": 11, "output": [0, 2, 3, 4, 5, 8, 9, 11], "over": [8, 9, 11], "overal": 9, "overrid": 9, "own": 3, "p": [5, 9], "p_": 4, "p_i": 9, "p_k": 4, "packag": [1, 4, 5, 8, 12, 13], "parallel": 11, "paramet": [7, 8, 9, 11, 15], "paramt": 15, "pariti": [0, 1, 2, 4, 8], "park": 9, "pars": 7, "part": [2, 4, 9], "partial": 2, "particular": 9, "pass": [5, 6, 9, 11], "path": [0, 5, 6, 9], "path0": 6, "path1": 6, "per": [4, 6, 9, 11], "perform": [9, 11], "permut": [2, 9], "perturb": 9, "phenomena": [8, 11, 15], "physic": 4, "physica": [4, 8, 11, 15], "physiologi": 8, "pick": [3, 5], "pip": [4, 13], "pita": 8, "plain": 7, "plo": 8, "plot": 6, "plot_basin_bar": 6, "plot_timeseri": 6, "plt": [4, 6], "pna": 4, "point": [3, 6, 7, 9, 15], "poisson": 11, "poli": 0, "polynomi": [0, 8, 9, 14, 15], "pomeau": 9, "pool": 11, "posit": [0, 1, 8, 11], "possibl": [2, 4, 7], "possible_separ": 7, "possibli": 11, "post": 6, "preced": 11, "prefix": 15, "preprint": 9, "present": 11, "preserv": 11, "preserve_bia": 11, "preserve_canalizing_depth": 11, "print": [0, 1, 2, 3, 4, 5, 6, 9], "prior": 13, "probabl": [2, 4, 8, 9, 11], "process": 9, "processor": 1, "program": 5, "promot": 6, "properli": 8, "properti": [2, 4, 8, 11, 14], "proport": [4, 8, 9], "propos": 11, "provid": [0, 1, 3, 5, 8, 9, 11, 15], "prx": 9, "py": [0, 5, 13], "pyboolnet": 13, "pyplot": [4, 6], "pystablemotif": 7, "python": [1, 3, 5, 8, 9, 12], "python313": 5, "q": [8, 11], "quantifi": [4, 8], "quantiti": 4, "queue": 9, "quick": 5, "quit": 11, "r": [4, 8, 9, 11, 15], "rais": [11, 15], "randint": 5, "random": [0, 2, 3, 4, 6, 8, 9, 11, 12], "random_adjacency_matrix": 5, "random_bn": 5, "random_canalizing_funct": 5, "random_degenerated_funct": [3, 10, 11], "random_degre": [3, 10, 11], "random_edge_list": [3, 10, 11], "random_funct": [2, 3, 5, 10, 11], "random_function_with_bia": [3, 5, 10, 11], "random_function_with_exact_hamming_weight": [3, 10, 11], "random_k_canalizing_funct": [3, 10, 11], "random_k_canalizing_function_with_specific_layer_structur": [3, 10, 11], "random_linear_funct": [3, 10, 11], "random_ncf": [3, 10, 11], "random_nested_canalizing_funct": [3, 10, 11], "random_network": [3, 10, 11], "random_non_canalizing_funct": [3, 10, 11], "random_non_canalizing_non_degenerated_funct": [3, 10, 11], "random_non_degenerated_funct": [3, 10, 11], "random_null_model": [3, 10, 11], "random_wiring_diagram": [3, 10, 11], "randomli": [8, 9, 11], "rang": [5, 6, 11, 15], "rate": 11, "rather": 4, "raw": 7, "re": [3, 5, 11], "reach": [6, 9], "reachabl": 9, "read": 1, "readili": [1, 2], "receiv": [4, 11], "recent": [0, 4, 5], "recommend": [2, 13], "reconsid": 4, "recurs": [4, 8], "reduc": [8, 9, 11, 15], "redund": [2, 8, 14], "refer": [8, 9, 11, 15], "reg": 11, "regardless": 8, "regul": [3, 6, 8, 9, 11], "regulatori": [0, 3, 5, 6], "reichhardt": 4, "reject": 11, "relat": [4, 12, 14], "relev": 11, "remain": [8, 9, 11], "remind": 4, "remot": 7, "remov": [4, 8, 9, 13], "remove_const": [9, 10], "rep_to_idx": 6, "repeat": 9, "repeatedli": 11, "repositori": 7, "repres": [8, 9, 11, 15], "represent": [0, 9, 11, 15], "request": [6, 11], "requir": [1, 2, 8, 11, 15], "required_length": 15, "rerun": 1, "resampl": 11, "respect": 4, "respons": 9, "restrict": [6, 9], "restricted_basin": 6, "result": [4, 6, 8, 9, 11], "retri": 11, "retriev": 7, "return": [0, 6, 7, 8, 9, 11, 15], "return_attractor_coher": 9, "reus": 11, "reveal": [2, 4, 8, 11], "rewir": 11, "rewire_wiring_diagram": [3, 10, 11], "right": [1, 15], "rng": [8, 9, 11], "robust": [2, 9, 11, 15], "rocha": [8, 9], "routin": 11, "row": 8, "rozum": 9, "rule": [3, 4, 5, 6, 8, 11], "run": [0, 3, 4, 5, 9, 13], "runnabl": [0, 3, 5], "runtimeerror": 11, "s_fix": 6, "s_val": 6, "same": [1, 2, 4, 5, 6, 8, 9, 11], "sampl": [3, 5, 8, 9, 11], "satisfi": 11, "scalar": 11, "scc": 9, "scheme": 3, "scipi": 5, "sdd": 9, "search": 9, "search_depth": 9, "second": [2, 4], "section": [0, 3, 5], "see": [1, 8, 11], "seed": 3, "seedsequ": 3, "seen": 6, "segment": 8, "select": [7, 11], "self": [6, 8, 9, 11], "sensit": [4, 8, 14], "sep": 7, "separ": [7, 9], "sequenc": [9, 11], "serv": 4, "set": [2, 4, 5, 6, 8, 9, 11], "set_xlabel": 4, "set_ylabel": 4, "sever": 9, "shannon": 9, "shape": [5, 6, 11], "short": [0, 3, 5], "should": [9, 13], "show": [2, 6, 8, 9], "shown": 4, "side": [1, 15], "signal": 6, "signific": 6, "similar": [4, 9], "simpl": [1, 3, 9], "simplic": 6, "simplify_funct": [9, 10], "simul": [2, 4, 9], "simulate_trajectori": 6, "simultan": 11, "sinc": [1, 4, 11], "singl": [2, 4, 9, 11], "site": 5, "sizabl": 6, "size": [3, 5, 6, 8, 9, 15], "skip": 7, "small": [0, 5, 6], "so": [4, 8], "sole": 9, "some": [1, 4, 11], "sort": 11, "sourc": [7, 8, 9, 11, 12, 15], "space": [8, 9], "special": 5, "specif": [2, 4, 8, 11], "specifi": [1, 2, 9, 11], "stage": 11, "standard": [2, 4, 8], "start": [1, 6, 9], "startswith": [0, 3, 5], "state": [6, 9], "state_to_int": 6, "states_regul": 9, "std": 2, "steadi": [3, 9], "steady_states_asynchronous_given_one_": 9, "steadyst": [3, 9], "step": [6, 9], "stg": [3, 9], "stgasynchron": [3, 9], "stigler": [8, 11], "stochast": 9, "stochastic_weight": 9, "store": 1, "str": [1, 6, 7, 8, 9, 11, 15], "stratif": [8, 11], "strength": [4, 8], "string": [8, 9, 15], "strong": 11, "strongli": [9, 11], "strongly_connect": 11, "structur": [0, 4, 8, 9, 11, 15], "subarrai": 15, "subfunct": [4, 8], "subject": 5, "subplot": 4, "subroutin": 11, "succ": 6, "success": 11, "successful_download_url": 7, "successfulli": 7, "successor": 6, "successor_na": 6, "successor_st": 6, "suffic": 4, "sum": [2, 4, 8, 9, 11], "sum_": 2, "support": [5, 13], "swap": [8, 11], "swappabl": 11, "sy": [0, 5, 6], "sybila": 7, "sychron": 9, "symmetr": 2, "symmetri": [0, 1, 4, 8, 14], "symmetry_group": 2, "synchron": [3, 6, 9], "system": 11, "t": 9, "t_val": 6, "tabl": [0, 3, 5, 6, 8, 9, 11, 15], "take": [0, 4, 9, 11], "taken": 11, "target": [9, 11], "tb": 6, "tell": 4, "test": 0, "text": [4, 7, 15], "th1": 6, "th2": 6, "than": 4, "thei": [1, 2, 4, 9, 11, 15], "them": [9, 11], "therefor": 11, "thi": [1, 2, 4, 5, 6, 8, 9, 11, 13, 15], "those": [4, 9, 11], "three": 2, "threshold": [1, 15], "through": [0, 3, 5, 11], "thu": [2, 4], "time": [4, 6, 9], "titl": 6, "to_bnet": [9, 10], "to_cana": [1, 8, 9, 10], "to_log": [1, 8, 10], "to_polynomi": [1, 8, 10], "todo": 9, "toggl": 8, "toolbox": 6, "topologi": 5, "total": [8, 9, 11], "toward": 6, "traceback": [0, 5], "trail": 6, "trajectori": [6, 9], "transform": [8, 15], "transient": 9, "transienttim": 9, "transit": [3, 9], "treat": [1, 6], "tri": 11, "triplet": 9, "true": [0, 2, 3, 4, 6, 7, 8, 9, 11, 15], "truncat": 11, "truth": [0, 3, 5, 6, 8, 9, 11, 15], "truth_table_": 6, "truth_table_g": 6, "truth_table_t": 6, "try": 6, "tue": [8, 11, 15], "tupl": [7, 8, 9, 11, 15], "turn": [1, 9], "tutori": 12, "two": [0, 4, 5, 6, 8, 11], "type": [1, 8, 9, 11, 15], "type_of_control": 9, "type_of_edge_control": 9, "typeerror": 0, "types_i": 9, "typic": [6, 11], "u": [4, 11], "unbias": [1, 5, 9, 11], "unchang": [2, 9, 11], "under": [6, 9, 11], "underli": 9, "understand": 1, "uniform": [5, 9, 11], "uniformli": [4, 11], "uninstal": 13, "union": 3, "uniqu": [4, 9], "unit": 2, "unless": [0, 11], "unrestrict": 6, "until": [9, 11], "up": [3, 5, 11], "updat": [3, 4, 5, 6, 8, 9, 11], "update_network_sdd": [9, 10], "update_network_synchron": [3, 9, 10], "update_network_synchronously_many_tim": [9, 10], "update_single_nod": [9, 10], "updatequeu": 9, "upgrad": 13, "upload": 6, "upper": 11, "url": 7, "us": [0, 3, 4, 5, 6, 8, 9, 11, 13, 15], "use_absolute_bia": 11, "user": 5, "util": [0, 3, 5, 6, 8, 9, 10, 11, 12], "v": [6, 9, 11], "val": 6, "valid": 11, "valu": [2, 4, 8, 9, 11, 15], "valueerror": [0, 15], "values_const": 9, "values_controlled_nod": 9, "values_source_nod": 9, "var": [0, 15], "variabl": [0, 1, 2, 6, 8, 9, 11, 14, 15], "variant": [8, 9, 15], "variou": 1, "vector": [1, 2, 8, 9, 11, 15], "veri": [2, 4, 11], "versatil": 1, "version": [6, 8, 9, 13], "via": [0, 1, 6, 8, 11], "violat": 11, "visit": 6, "visual": 6, "w": [5, 15], "wa": [1, 4], "wai": 8, "walk": [0, 3, 5], "wang": 8, "want": 11, "we": [0, 1, 2, 3, 4, 6], "wed": 9, "weight": [1, 4, 8, 9, 11, 15], "welcom": [0, 3, 5], "well": [2, 9, 15], "were": [0, 15], "wheeler": 9, "when": [1, 2, 8, 9, 11], "where": [0, 1, 2, 4, 6, 7, 8, 9, 11, 15], "wherea": 8, "whether": [0, 4, 8, 9, 11], "which": [1, 2, 4, 8, 9, 11], "while": [1, 2, 6, 8, 11], "whose": [9, 11], "width": 6, "window": 12, "wire": [9, 11], "wiring_diagram": 11, "wiringdiagram": [9, 10, 11], "within": [4, 9, 11], "without": [1, 2, 6], "work": [2, 12, 14], "would": 11, "write": 1, "x": [1, 2, 6, 8, 9, 11, 15], "x0": [1, 3, 4, 6, 8], "x1": [0, 1, 2, 3, 4, 6, 8, 15], "x2": [0, 2, 3, 4, 6, 8, 15], "x3": [2, 3, 6, 8, 15], "x_": [1, 8], "x_0": [1, 4], "x_1": [1, 2, 4, 8], "x_2": [2, 4], "x_3": 2, "x_i": [2, 4, 8], "x_n": [4, 8], "xlabel": 6, "xn": 8, "xor": [0, 2, 3, 4, 15], "xor2": 0, "xxx": 9, "xxxx": 9, "y": [1, 2, 9, 11], "ye": 9, "yield": [2, 4, 11], "ylabel": 6, "you": [0, 1, 2, 3, 4, 5, 11, 13], "your": [6, 11], "ytick": 6, "z": [1, 2, 6], "zero": [4, 6, 8, 11], "zip": [2, 4, 6], "\u03bb": 11}, "titles": ["Boolean Functions &amp; Networks Toolbox \u2014 Interactive Tutorials", "BoolForge Tutorial #1: Working with Boolean Functions", "BoolForge Tutorial #2: Advanced concepts related to Boolean Functions", "Boolean Functions &amp; Networks Toolbox \u2014 Interactive Tutorials", "BoolForge Tutorial #3: Canalization", "Boolean Functions &amp; Networks Toolbox \u2014 Interactive Tutorials", "GRN-Focused Tutorial: Toggle Switch, Repressilator, and a T-cell Differentiation Toy", "Bio Models", "Boolean Function", "Boolean Network", "Documentation", "Generate", "Home", "Installation", "Tutorials", "Utils"], "titleterms": {"0": [3, 5, 6], "1": [0, 1, 3, 5, 6], "2": [0, 2, 3, 5, 6], "3": [0, 3, 4, 5, 6], "4": [0, 3], "5": 0, "activ": 2, "advanc": 2, "algebra": 0, "attractor": 3, "attribut": 1, "avail": 3, "basic": [0, 1], "basin": 3, "bio": 7, "boolean": [0, 1, 2, 3, 5, 8, 9], "booleanfunct": 1, "boolforg": [1, 2, 4], "build": 3, "canal": [0, 4], "cell": 6, "circuit": 6, "collect": 4, "compat": 13, "composit": 0, "concept": 2, "constraint": 5, "convert": 1, "creat": 1, "degre": 3, "derrida": 3, "differenti": 6, "distribut": 5, "document": 10, "etc": 3, "explor": [0, 2], "express": 1, "extend": 13, "focus": 6, "from": 1, "frozen": 3, "function": [0, 1, 2, 3, 5, 8, 13], "gener": [5, 11], "grn": 6, "group": 2, "here": 3, "home": 12, "import": [3, 5, 6], "influenc": 0, "inhibit": 6, "input": 4, "instal": 13, "interact": [0, 3, 5], "layer": 4, "linux": 13, "logic": 1, "mac": 13, "mani": 5, "measur": 4, "model": 7, "mutual": 6, "network": [0, 3, 5, 9], "node": [3, 6], "o": 13, "out": 3, "own": 0, "plot": 3, "polynomi": 1, "properti": [0, 1, 3], "python": 13, "random": 5, "redund": 4, "relat": 2, "repres": 0, "repress": 6, "repressil": 6, "reproduc": 5, "ring": 6, "seed": 5, "sensit": [0, 2, 3, 5], "setup": [3, 5, 6], "small": 3, "space": 3, "state": 3, "structur": 3, "summar": 5, "switch": 6, "symmetri": 2, "t": 6, "tabl": 1, "text": 1, "toggl": 6, "toi": 6, "toolbox": [0, 3, 5], "truth": 1, "try": [0, 3, 5], "tutori": [0, 1, 2, 3, 4, 5, 6, 14], "util": 15, "variabl": 4, "window": 13, "work": 1, "your": [0, 3]}})